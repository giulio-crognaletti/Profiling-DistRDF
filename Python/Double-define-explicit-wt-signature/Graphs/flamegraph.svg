<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1500" height="2124" onload="init(evt)" viewBox="0 0 1500 2124" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#ffffff" offset="5%" />
		<stop stop-color="#ffffff" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Open Sans, sans-serif; font-size:10px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:15px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 10 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1500.0" height="2124.0" fill="url(#background)"  />
<text id="title" x="750.00" y="20" >Flame Graph</text>
<text id="details" x="10.00" y="2109" > </text>
<text id="unzoom" x="10.00" y="20" class="hide">Reset Zoom</text>
<text id="search" x="1390.00" y="20" >Search</text>
<text id="ignorecase" x="1474.00" y="20" >ic</text>
<text id="matched" x="1390.00" y="2109" > </text>
<g id="frames">
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1599" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1599" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1609.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="101.4" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="31" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1503" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (1 samples, 0.229%)</title><rect x="1432.4" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="313.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="1175.0" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1625.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (5 samples, 1.144%)</title><rect x="1290.2" y="1935" width="16.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1293.18" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="207" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="1188.6" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="111" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="121.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="927" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="937.5" ></text>
</g>
<g >
<title>TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (8 samples, 1.831%)</title><rect x="54.0" y="1967" width="27.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="57.03" y="1977.5" >TC..</text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1456.1" y="1151" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1183" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1193.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl(clang::DeclaratorDecl*) (1 samples, 0.229%)</title><rect x="121.8" y="399" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="409.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1999" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="863" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1185.2" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="249.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (2 samples, 0.458%)</title><rect x="192.9" y="1679" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="195.88" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="633.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="831" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1871" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1241.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1087" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1631" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="975" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1097.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FinishedDeserializing() (1 samples, 0.229%)</title><rect x="1229.2" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1273.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSectionName(llvm::object::Elf_Shdr_Impl&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt; const*, llvm::StringRef) const (1 samples, 0.229%)</title><rect x="94.7" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1487" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="121.8" y="879" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="50.6" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1289.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1202.1" y="1727" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1205.13" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1791" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1113.5" ></text>
</g>
<g >
<title>clang::Sema::CheckNonDependentConversions(clang::FunctionTemplateDecl*, llvm::ArrayRef&lt;clang::QualType&gt;, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, llvm::MutableArrayRef&lt;clang::ImplicitConversionSequence&gt;&amp;, bool, clang::CXXRecordDecl*, clang::QualType, clang::Expr::Classification) (1 samples, 0.229%)</title><rect x="1435.8" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1487" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="873.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTemplateDeclarationOrSpecialization(clang::DeclaratorContext, clang::SourceLocation&amp;, clang::ParsedAttributes&amp;, clang::AccessSpecifier) [clone .part.0] (1 samples, 0.229%)</title><rect x="1337.6" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1801.5" ></text>
</g>
<g >
<title>clang::SourceManager::getLineNumber(clang::FileID, unsigned int, bool*) const (1 samples, 0.229%)</title><rect x="1388.4" y="31" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::FinishFunction(clang::SourceLocation) (1 samples, 0.229%)</title><rect x="172.6" y="1471" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="175.56" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1753.5" ></text>
</g>
<g >
<title>llvm::MDTuple* llvm::getUniqued&lt;llvm::MDTuple, llvm::MDNodeInfo&lt;llvm::MDTuple&gt; &gt;(llvm::DenseSet&lt;llvm::MDTuple*, llvm::MDNodeInfo&lt;llvm::MDTuple&gt; &gt;&amp;, llvm::MDNodeInfo&lt;llvm::MDTuple&gt;::KeyTy const&amp;) (1 samples, 0.229%)</title><rect x="1344.4" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1347.37" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="601.5" ></text>
</g>
<g >
<title>__run_exit_handlers (5 samples, 1.144%)</title><rect x="1307.1" y="2047" width="17.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1310.12" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1263" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr(clang::CallExpr const*, clang::CXXMethodDecl const*, clang::CodeGen::ReturnValueSlot, bool, clang::NestedNameSpecifier*, bool, clang::Expr const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="799" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1364.7" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="121.8" y="975" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="985.5" ></text>
</g>
<g >
<title>clang::Parser::ParseSimpleExpressionList(llvm::SmallVectorImpl&lt;clang::Expr*&gt;&amp;, llvm::SmallVectorImpl&lt;clang::SourceLocation&gt;&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1679" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (2 samples, 0.458%)</title><rect x="121.8" y="1391" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="831" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1577.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="1418.9" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="313.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalDeclStmt(unsigned long) (1 samples, 0.229%)</title><rect x="152.2" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1481.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt(clang::Stmt*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1236.0" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="287" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="297.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (1 samples, 0.229%)</title><rect x="1229.2" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1929.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1147.9" y="1759" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="473.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::setPhysRegsDeadExcept(llvm::ArrayRef&lt;unsigned int&gt;, llvm::TargetRegisterInfo const&amp;) (1 samples, 0.229%)</title><rect x="223.4" y="1503" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="226.36" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (3 samples, 0.686%)</title><rect x="1297.0" y="1599" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="681.5" ></text>
</g>
<g >
<title>clang::Parser::ParseSingleDeclarationAfterTemplate(clang::DeclaratorContext, clang::Parser::ParsedTemplateInfo const&amp;, clang::ParsingDeclRAIIObject&amp;, clang::SourceLocation&amp;, clang::ParsedAttributes&amp;, clang::AccessSpecifier) (1 samples, 0.229%)</title><rect x="1337.6" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="873.5" ></text>
</g>
<g >
<title>clang::Parser::ParseReturnStatement() (1 samples, 0.229%)</title><rect x="1337.6" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="991" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="841.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="751" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (8 samples, 1.831%)</title><rect x="101.4" y="1743" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1753.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (3 samples, 0.686%)</title><rect x="1297.0" y="1567" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="527" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="537.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1343" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="138.7" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1300.3" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1177.5" ></text>
</g>
<g >
<title>CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, _object*) (8 samples, 1.831%)</title><rect x="54.0" y="1999" width="27.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="57.03" y="2009.5" >CP..</text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1375" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="505.5" ></text>
</g>
<g >
<title>clang::Sema::buildOverloadedCallSet(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::OverloadCandidateSet*, clang::ActionResult&lt;clang::Expr*, true&gt;*) (1 samples, 0.229%)</title><rect x="1435.8" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1657.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="101.4" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="681.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="969.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="425.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr(clang::CXXScopeSpec&amp;, clang::DeclarationNameInfo const&amp;, bool, clang::Scope const*, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1232.6" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1371.5" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1273.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::loadObject(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="128.5" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="447" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1129.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::QualType) (1 samples, 0.229%)</title><rect x="162.4" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (2 samples, 0.458%)</title><rect x="1181.8" y="1247" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="135.3" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1695" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1657.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1171.6" y="1791" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.65" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="335" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="138.7" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1347.8" y="1423" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1433.5" ></text>
</g>
<g >
<title>llvm::DISubprogram* llvm::MDNode::storeImpl&lt;llvm::DISubprogram, llvm::DenseSet&lt;llvm::DISubprogram*, llvm::MDNodeInfo&lt;llvm::DISubprogram&gt; &gt; &gt;(llvm::DISubprogram*, llvm::Metadata::StorageType, llvm::DenseSet&lt;llvm::DISubprogram*, llvm::MDNodeInfo&lt;llvm::DISubprogram&gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="1408.7" y="63" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1411.72" y="73.5" ></text>
</g>
<g >
<title>evaluateTypeTrait(clang::Sema&amp;, clang::TypeTrait, clang::SourceLocation, llvm::ArrayRef&lt;clang::TypeSourceInfo*&gt;, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="162.4" y="639" width="3.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="165.40" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1388.4" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="201.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl(llvm::Function const&amp;) const (1 samples, 0.229%)</title><rect x="233.5" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="236.52" y="1577.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="84.5" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1657.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt(clang::CompoundStmt*, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1657.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType(clang::ElaboratedTypeKeyword, clang::SourceLocation, clang::NestedNameSpecifierLoc, clang::IdentifierInfo const*, clang::SourceLocation, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="1198.7" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1343" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1657.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1364.7" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="249.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="175" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="745.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl(clang::TemplateDecl*) (1 samples, 0.229%)</title><rect x="84.5" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1737.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (3 samples, 0.686%)</title><rect x="152.2" y="1551" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1561.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="959" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="969.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="943" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1983" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="138.7" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="985.5" ></text>
</g>
<g >
<title>TClingMethodInfo::TClingMethodInfo(cling::Interpreter*, TClingClassInfo*) (1 samples, 0.229%)</title><rect x="81.1" y="1935" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="84.12" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1167" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (3 samples, 0.686%)</title><rect x="1388.4" y="2031" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="2041.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType(clang::TypeLocBuilder&amp;, clang::TemplateSpecializationTypeLoc, clang::TemplateName) (1 samples, 0.229%)</title><rect x="162.4" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1241.5" ></text>
</g>
<g >
<title>llvm::object::SectionRef::getName(llvm::StringRef&amp;) const [clone .isra.0] (1 samples, 0.229%)</title><rect x="199.7" y="1551" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="155.6" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="158.63" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateFile(clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1192.0" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1577.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="101.4" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="761.5" ></text>
</g>
<g >
<title>LookupDirect(clang::Sema&amp;, clang::LookupResult&amp;, clang::DeclContext const*) (1 samples, 0.229%)</title><rect x="1337.6" y="1423" width="3.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1340.60" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1801.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;)::{lambda(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;)#1}::operator()(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;) const (1 samples, 0.229%)</title><rect x="125.1" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1297.0" y="1007" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="265.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl&lt;unsigned long&gt;&amp;, llvm::StringRef*) (1 samples, 0.229%)</title><rect x="1229.2" y="1039" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1232.22" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="793.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="479" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="761.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1343" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1353.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="351" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="831" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (6 samples, 1.373%)</title><rect x="101.4" y="1455" width="20.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1465.5" >c..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="104.8" y="799" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (2 samples, 0.458%)</title><rect x="135.3" y="1455" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="527" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="537.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType(clang::TypeLocBuilder&amp;, clang::TemplateSpecializationTypeLoc, clang::TemplateName) (1 samples, 0.229%)</title><rect x="162.4" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (4 samples, 0.915%)</title><rect x="1351.1" y="831" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1181.8" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="857.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1151.3" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1673.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::createPointerType(llvm::DIType*, unsigned long, unsigned int, llvm::Optional&lt;unsigned int&gt;, llvm::StringRef) (1 samples, 0.229%)</title><rect x="1368.1" y="47" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1371.08" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1519" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1529.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1232.6" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (3 samples, 0.686%)</title><rect x="1297.0" y="1391" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="911" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1375" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="767" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="165.8" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getLineNumber(clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1388.4" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="73.5" ></text>
</g>
<g >
<title>clang::Parser::ParseStatementOrDeclaration(llvm::SmallVector&lt;clang::Stmt*, 32u&gt;&amp;, clang::Parser::ParsedStmtContext, clang::SourceLocation*) (1 samples, 0.229%)</title><rect x="1337.6" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="233.5" ></text>
</g>
<g >
<title>TClingCallFunc::IFacePtr() (7 samples, 1.602%)</title><rect x="1175.0" y="1887" width="23.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1178.03" y="1897.5" >TC..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1347.8" y="479" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="687" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1135" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1145.5" ></text>
</g>
<g >
<title>llvm::hash_code llvm::hash_combine&lt;unsigned int, unsigned char, llvm::Metadata*&gt;(unsigned int const&amp;, unsigned char const&amp;, llvm::Metadata* const&amp;) (1 samples, 0.229%)</title><rect x="1374.9" y="47" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1377.85" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1343" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (1 samples, 0.229%)</title><rect x="50.6" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="655" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="50.6" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1801.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr(clang::serialization::ModuleFile&amp;) (1 samples, 0.229%)</title><rect x="1418.9" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1727" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1303.7" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="79" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1231" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1087" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1097.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1503" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1513.5" ></text>
</g>
<g >
<title>AddOverloadedCallCandidate(clang::Sema&amp;, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1615" width="3.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1438.81" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (1 samples, 0.229%)</title><rect x="1188.6" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="121.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="815" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1391" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="633.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1232.6" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1535" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1433.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="101.4" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="761.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="335" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="345.5" ></text>
</g>
<g >
<title>CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (5 samples, 1.144%)</title><rect x="1290.2" y="1999" width="16.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1293.18" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="847" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="857.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule(llvm::Module&amp;, int) (1 samples, 0.229%)</title><rect x="179.3" y="1711" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="182.34" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1364.7" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="937.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.229%)</title><rect x="20.2" y="2047" width="3.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="23.16" y="2057.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup(clang::DeclarationName) const (1 samples, 0.229%)</title><rect x="118.4" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="905.5" ></text>
</g>
<g >
<title>clang::SourceManager::getPresumedLoc(clang::SourceLocation, bool) const (4 samples, 0.915%)</title><rect x="1351.1" y="47" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="57.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Transaction**) (1 samples, 0.229%)</title><rect x="50.6" y="1951" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="53.64" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1455" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1033.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="155.6" y="1455" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="158.63" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1247" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1297.0" y="927" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="937.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;*) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1307.1" y="1903" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1310.12" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1087" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1103" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1401.9" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="921.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FinishedDeserializing() (4 samples, 0.915%)</title><rect x="104.8" y="703" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="713.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction(clang::FunctionTemplateDecl*, llvm::SmallVectorImpl&lt;clang::DeducedTemplateArgument&gt;&amp;, unsigned int, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, llvm::SmallVectorImpl&lt;clang::Sema::OriginalCallArg&gt; const*, bool, llvm::function_ref&lt;bool ()&gt;) (1 samples, 0.229%)</title><rect x="162.4" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1241.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1487" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1497.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl(clang::TemplateDecl*) (1 samples, 0.229%)</title><rect x="121.8" y="495" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="217.5" ></text>
</g>
<g >
<title>llvm::raw_svector_ostream::write_impl(char const*, unsigned long) (1 samples, 0.229%)</title><rect x="1151.3" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1577.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (2 samples, 0.458%)</title><rect x="128.5" y="1855" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="131.54" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="463" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1337.5" ></text>
</g>
<g >
<title>WrapperCall(long, unsigned long, void*, void*, void*) (10 samples, 2.288%)</title><rect x="94.7" y="1935" width="33.8" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="97.67" y="1945.5" >Wra..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1049.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument(clang::TemplateArgumentLoc const&amp;, clang::TemplateArgumentLoc&amp;, bool) (1 samples, 0.229%)</title><rect x="162.4" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="697.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (3 samples, 0.686%)</title><rect x="152.2" y="1615" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1257.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="703" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="895" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="905.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="127" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="137.5" ></text>
</g>
<g >
<title>llvm::ReplaceableMetadataImpl::dropRef(void*) (1 samples, 0.229%)</title><rect x="1317.3" y="1887" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1320.28" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="223" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="233.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::~IncrementalJIT() (1 samples, 0.229%)</title><rect x="1307.1" y="1935" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1310.12" y="1945.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1487" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1695" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1359" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1871" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1881.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="1412.1" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="165.8" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1417.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (4 samples, 0.915%)</title><rect x="54.0" y="1839" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1743" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="911" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout(clang::RecordDecl const*, llvm::StructType*) (1 samples, 0.229%)</title><rect x="118.4" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1711" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1007" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="345.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="639" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="649.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="162.4" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="367" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1145.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1412.1" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="185.5" ></text>
</g>
<g >
<title>_int_malloc (5 samples, 1.144%)</title><rect x="1212.3" y="2031" width="16.9" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1215.29" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1311" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1297.0" y="1327" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1369.5" ></text>
</g>
<g >
<title>clang::Sema::SetCtorInitializers(clang::CXXConstructorDecl*, bool, llvm::ArrayRef&lt;clang::CXXCtorInitializer*&gt;) (1 samples, 0.229%)</title><rect x="1229.2" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1321.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (4 samples, 0.915%)</title><rect x="152.2" y="1679" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1347.8" y="1599" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1081.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExceptionSpec(clang::FunctionDecl*, clang::FunctionProtoType const*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="50.6" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1033.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType(clang::ElaboratedTypeKeyword, clang::SourceLocation, clang::NestedNameSpecifierLoc, clang::IdentifierInfo const&amp;, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1232.6" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="857.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl(clang::DeclaratorDecl*) (1 samples, 0.229%)</title><rect x="81.1" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1689.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1919" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1929.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) (1 samples, 0.229%)</title><rect x="118.4" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1401.9" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="169.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl(clang::TemplateDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1374.9" y="127" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="137.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (2 samples, 0.458%)</title><rect x="1144.6" y="1823" width="6.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1833.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::finalizeModuleInfo() (2 samples, 0.458%)</title><rect x="1290.2" y="1759" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1769.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DISubroutineType&gt;, llvm::detail::DenseSetPair&lt;llvm::DISubroutineType*&gt; &gt;::grow(unsigned int) (1 samples, 0.229%)</title><rect x="1422.3" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1425.27" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1759" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1368.1" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="431" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="441.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (5 samples, 1.144%)</title><rect x="182.7" y="1711" width="17.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="185.72" y="1721.5" ></text>
</g>
<g >
<title>CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, _object*) (3 samples, 0.686%)</title><rect x="1229.2" y="1999" width="10.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1232.22" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="399" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="441.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr(clang::CallExpr*) (1 samples, 0.229%)</title><rect x="1435.8" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1049.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;) (1 samples, 0.229%)</title><rect x="162.4" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1295" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1231" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="159" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1359" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="479" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="489.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1023" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1033.5" ></text>
</g>
<g >
<title>llvm::raw_ostream::write(char const*, unsigned long) (1 samples, 0.229%)</title><rect x="1158.1" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1161.10" y="1705.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::BuildSchedUnits() (1 samples, 0.229%)</title><rect x="220.0" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="222.98" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (8 samples, 1.831%)</title><rect x="101.4" y="1583" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1593.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1359" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (1 samples, 0.229%)</title><rect x="1432.4" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release() (1 samples, 0.229%)</title><rect x="1192.0" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="95" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="121.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDefaultTemplateArgumentIfAvailable(clang::TemplateDecl*, clang::SourceLocation, clang::SourceLocation, clang::Decl*, llvm::SmallVectorImpl&lt;clang::TemplateArgument&gt;&amp;, bool&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="649.5" ></text>
</g>
<g >
<title>void std::__insertion_sort&lt;llvm::Attribute*, __gnu_cxx::__ops::_Iter_less_iter&gt;(llvm::Attribute*, llvm::Attribute*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.0] (1 samples, 0.229%)</title><rect x="172.6" y="1375" width="3.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="175.56" y="1385.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions() (4 samples, 0.915%)</title><rect x="104.8" y="671" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (1 samples, 0.229%)</title><rect x="1192.0" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1374.9" y="1343" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1151" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1425.7" y="271" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="495" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1161.5" y="1151" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1881.5" ></text>
</g>
<g >
<title>clang::SourceManager::getPresumedLoc(clang::SourceLocation, bool) const (1 samples, 0.229%)</title><rect x="1398.6" y="47" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1185.2" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="825.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclarationName(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="152.2" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="135.3" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="809.5" ></text>
</g>
<g >
<title>TClingCallFunc::IFacePtr() (10 samples, 2.288%)</title><rect x="94.7" y="1919" width="33.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="97.67" y="1929.5" >TCl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1401.9" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="409.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1202.1" y="1487" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs(clang::CodeGen::CallArgList&amp;, llvm::ArrayRef&lt;clang::QualType&gt;, llvm::iterator_range&lt;clang::Stmt::CastIterator&lt;clang::Expr, clang::Expr const* const, clang::Stmt const* const&gt; &gt;, clang::CodeGen::CodeGenFunction::AbstractCallee, unsigned int, clang::CodeGen::CodeGenFunction::EvaluationOrder) (1 samples, 0.229%)</title><rect x="1198.7" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1297.0" y="911" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="921.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl(clang::DeclaratorDecl*) (1 samples, 0.229%)</title><rect x="152.2" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="1429.0" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1465.5" ></text>
</g>
<g >
<title>__strchr_avx2 (1 samples, 0.229%)</title><rect x="1208.9" y="2031" width="3.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1211.90" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="527" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="537.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1641.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&amp;) (5 samples, 1.144%)</title><rect x="1181.8" y="1823" width="16.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1184.81" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1609.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (4 samples, 0.915%)</title><rect x="54.0" y="1711" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (3 samples, 0.686%)</title><rect x="1297.0" y="1519" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1529.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier(clang::CXXRecordDecl*, clang::SourceRange, bool, clang::AccessSpecifier, clang::TypeSourceInfo*, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1232.6" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1017.5" ></text>
</g>
<g >
<title>clang::ASTReader::DecodeIdentifierInfo(unsigned int) (1 samples, 0.229%)</title><rect x="152.2" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1305.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&amp;) (8 samples, 1.831%)</title><rect x="101.4" y="1855" width="27.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="104.44" y="1865.5" >cl..</text>
</g>
<g >
<title>clang::SourceManager::getDecomposedExpansionLoc(clang::SourceLocation) const (1 samples, 0.229%)</title><rect x="1398.6" y="31" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitGlobalVariable(clang::ValueDecl const*, clang::APValue const&amp;) (1 samples, 0.229%)</title><rect x="1198.7" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1353.5" ></text>
</g>
<g >
<title>bool llvm::function_ref&lt;bool ()&gt;::callback_fn&lt;clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;)::{lambda()#2}&gt;(long) (1 samples, 0.229%)</title><rect x="162.4" y="1391" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="165.40" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (1 samples, 0.229%)</title><rect x="165.8" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1401.5" ></text>
</g>
<g >
<title>isSameEntity(clang::NamedDecl*, clang::NamedDecl*) (1 samples, 0.229%)</title><rect x="1337.6" y="1247" width="3.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1340.60" y="1257.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1721.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="98.1" y="1471" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="927" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="937.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (3 samples, 0.686%)</title><rect x="1151.3" y="1791" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1113.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get(llvm::LLVMContext&amp;, llvm::ArrayRef&lt;llvm::Attribute&gt;) (1 samples, 0.229%)</title><rect x="172.6" y="1391" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="175.56" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1711" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout(clang::RecordDecl const*, llvm::StructType*) (1 samples, 0.229%)</title><rect x="118.4" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1647" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1471" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1401.9" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="607" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1295" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1449.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="145.5" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1097.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (3 samples, 0.686%)</title><rect x="199.7" y="1679" width="10.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1689.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1727" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="79" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="89.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="131.9" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="134.92" y="1785.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="98.1" y="783" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="793.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="1215" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1225.5" ></text>
</g>
<g >
<title>non-virtual thunk to clang::ASTReader::FinishedDeserializing() (1 samples, 0.229%)</title><rect x="1229.2" y="1247" width="3.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1232.22" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1161.5" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1055" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1065.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="255" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1743" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="165.8" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (3 samples, 0.686%)</title><rect x="1181.8" y="1583" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1374.9" y="1327" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="911" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1065.5" ></text>
</g>
<g >
<title>clang::Sema::PerformCopyInitialization(clang::InitializedEntity const&amp;, clang::SourceLocation, clang::ActionResult&lt;clang::Expr*, true&gt;, bool, bool) (1 samples, 0.229%)</title><rect x="1236.0" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1371.5" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1183" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1193.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="84.5" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="617.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, unsigned int) (1 samples, 0.229%)</title><rect x="1435.8" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1353.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="98.1" y="1567" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1577.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCXXConstructExpr(clang::SourceLocation, clang::QualType, clang::NamedDecl*, clang::CXXConstructorDecl*, bool, llvm::MutableArrayRef&lt;clang::Expr*&gt;, bool, bool, bool, bool, unsigned int, clang::SourceRange) (1 samples, 0.229%)</title><rect x="1229.2" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1391" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1401.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1407" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="287" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1279" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1185.2" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="889.5" ></text>
</g>
<g >
<title>clang::Sema::ResolveExceptionSpec(clang::SourceLocation, clang::FunctionProtoType const*) (1 samples, 0.229%)</title><rect x="1232.6" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue(clang::Expr const*) (2 samples, 0.458%)</title><rect x="121.8" y="1439" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (3 samples, 0.686%)</title><rect x="169.2" y="1631" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="479" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1103" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1113.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (318 samples, 72.769%)</title><rect x="128.5" y="2031" width="1077.0" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="131.54" y="2041.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule(llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr, false&gt;&amp;) (1 samples, 0.229%)</title><rect x="223.4" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="226.36" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1347.8" y="1359" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1359" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCheckedLValue(clang::Expr const*, clang::CodeGen::CodeGenFunction::TypeCheckKind) (2 samples, 0.458%)</title><rect x="121.8" y="1455" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="671" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1353.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1202.1" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="138.7" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="1151" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="121.8" y="1135" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="873.5" ></text>
</g>
<g >
<title>clang::declvisitor::Base&lt;std::add_pointer, clang::ASTDeclReader, void&gt;::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="84.5" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (2 samples, 0.458%)</title><rect x="135.3" y="1583" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="165.8" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (5 samples, 1.144%)</title><rect x="101.4" y="1135" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction(clang::GlobalDecl, clang::QualType, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;, clang::CodeGen::FunctionArgList const&amp;, clang::SourceLocation, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="169.2" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="975" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1185.2" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1415.5" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (3 samples, 0.686%)</title><rect x="1181.8" y="1615" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="431" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="783" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="793.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (3 samples, 0.686%)</title><rect x="1297.0" y="1839" width="10.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1299.96" y="1849.5" ></text>
</g>
<g >
<title>bitTrackingDCE(llvm::Function&amp;, llvm::DemandedBits&amp;) (1 samples, 0.229%)</title><rect x="182.7" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="185.72" y="1689.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateParameterList(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="101.4" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1198.7" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1769.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RDefine&lt;int (*)(unsigned long long), ROOT::Detail::RDF::CustomColExtraArgs::None&gt;::Update(unsigned int, long long) (175 samples, 40.046%)</title><rect x="236.9" y="1695" width="592.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="239.91" y="1705.5" >ROOT::Detail::RDF::RDefine&lt;int (*)(unsigned long long), ROOT::Detail::RDF::CustomColExtraArgs::Non..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1388.4" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="138.7" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1341.0" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="665.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="162.4" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1583" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1341.0" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="473.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::loadObject(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="128.5" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1300.3" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1065.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1263" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1231" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="495" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1097.5" ></text>
</g>
<g >
<title>cling::Interpreter::process(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Value*, cling::Transaction**, bool) (2 samples, 0.458%)</title><rect x="1198.7" y="1791" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1201.74" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1471" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1497.5" ></text>
</g>
<g >
<title>bool llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;::callback_fn&lt;clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind)::{lambda(llvm::ArrayRef&lt;clang::QualType&gt;)#1}&gt;(long, llvm::ArrayRef&lt;clang::QualType&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="79" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1438.81" y="89.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1183" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="239" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExprToTemp(clang::Expr const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="1103" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1209.5" ></text>
</g>
<g >
<title>clang::Sema::buildOverloadedCallSet(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::OverloadCandidateSet*, clang::ActionResult&lt;clang::Expr*, true&gt;*) (1 samples, 0.229%)</title><rect x="1435.8" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1378.2" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1188.6" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="569.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1327" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1337.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::loadObject(llvm::object::ObjectFile const&amp;) (3 samples, 0.686%)</title><rect x="199.7" y="1615" width="10.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1625.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1171.6" y="1759" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.65" y="1769.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (3 samples, 0.686%)</title><rect x="152.2" y="1535" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1181.8" y="1231" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1241.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="223" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="207" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="217.5" ></text>
</g>
<g >
<title>clang::FunctionProtoType::Profile(llvm::FoldingSetNodeID&amp;, clang::ASTContext const&amp;) (1 samples, 0.229%)</title><rect x="121.8" y="303" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1103" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateEnumType(clang::EnumType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1439" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1347.8" y="783" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1231" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1241.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="98.1" y="799" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="809.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="591" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1529.5" ></text>
</g>
<g >
<title>bool llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;::callback_fn&lt;clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind)::{lambda(llvm::ArrayRef&lt;clang::QualType&gt;)#1}&gt;(long, llvm::ArrayRef&lt;clang::QualType&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="1535" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1438.81" y="1545.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext(clang::CXXScopeSpec&amp;, clang::DeclContext*&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="633.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1055" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="393.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1171.6" y="1647" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1174.65" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="367" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1791" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1164.9" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1364.7" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1423" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1513.5" ></text>
</g>
<g >
<title>calc_y_with_options(int, bool, bool, unsigned long long) (75 samples, 17.162%)</title><rect x="575.6" y="1679" width="254.0" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="578.58" y="1689.5" >calc_y_with_options(int, bool, bool, unsi..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1289.5" ></text>
</g>
<g >
<title>clang::Parser::ParseFunctionStatementBody(clang::Decl*, clang::Parser::ParseScope&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1225.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (4 samples, 0.915%)</title><rect x="152.2" y="1695" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1055" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1300.3" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="985.5" ></text>
</g>
<g >
<title>llvm::MDNode::replaceWithUniquedImpl() (1 samples, 0.229%)</title><rect x="1425.7" y="47" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1428.65" y="57.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&amp;, void*&amp;) (1 samples, 0.229%)</title><rect x="142.1" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1577.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnit(llvm::DwarfUnit*, bool) (1 samples, 0.229%)</title><rect x="209.8" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1593.5" ></text>
</g>
<g >
<title>__libc_sigaction (3 samples, 0.686%)</title><rect x="1442.6" y="2031" width="10.1" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1445.59" y="2041.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (1 samples, 0.229%)</title><rect x="1202.1" y="1759" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1205.13" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="409.5" ></text>
</g>
<g >
<title>TryImplicitConversion(clang::Sema&amp;, clang::Expr*, clang::QualType, bool, bool, bool, bool, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1487" width="3.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1438.81" y="1497.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (3 samples, 0.686%)</title><rect x="1151.3" y="1855" width="10.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1154.33" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1449.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="142.1" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1449.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr(clang::CXXScopeSpec&amp;, clang::DeclarationNameInfo const&amp;, bool, clang::Scope const*, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1435.8" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1303.7" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1289.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1177.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1247" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1305.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::DoubleRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (295 samples, 67.506%)</title><rect x="145.5" y="1951" width="999.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="148.47" y="1961.5" >CPyCppyy::(anonymous namespace)::DoubleRefExecutor::Execute(long, void*, CPyCppyy::CallContext*)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="329.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="879" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1849.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (3 samples, 0.686%)</title><rect x="182.7" y="1695" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="185.72" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="991" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1198.7" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="985.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="121.8" y="623" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="2041.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1465.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (4 samples, 0.915%)</title><rect x="128.5" y="1871" width="13.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="131.54" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1487" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1887" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg(clang::CodeGen::CallArgList&amp;, clang::Expr const*, clang::QualType) (1 samples, 0.229%)</title><rect x="165.8" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1465.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="703" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="713.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="367" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="377.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument(clang::TemplateArgumentLoc const&amp;, clang::TemplateArgumentLoc&amp;, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="809.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1391.8" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="121.8" y="959" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="969.5" ></text>
</g>
<g >
<title>non-virtual thunk to clang::ASTReader::FinishedDeserializing() (1 samples, 0.229%)</title><rect x="87.9" y="1839" width="3.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="90.89" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="511" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="521.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1039" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1049.5" ></text>
</g>
<g >
<title>int&amp; ROOT::Detail::RDF::RColumnReaderBase::Get&lt;int&gt;(long long) (268 samples, 61.327%)</title><rect x="236.9" y="1791" width="907.7" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="239.91" y="1801.5" >int&amp; ROOT::Detail::RDF::RColumnReaderBase::Get&lt;int&gt;(long long)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="735" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="745.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (1 samples, 0.229%)</title><rect x="142.1" y="1823" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1615" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="121.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::endModule() (2 samples, 0.458%)</title><rect x="1175.0" y="1695" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1705.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (2 samples, 0.458%)</title><rect x="135.3" y="1791" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="138.31" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="1432.4" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="671" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1425.7" y="943" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="329.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="81.1" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1378.2" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1657.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (9 samples, 2.059%)</title><rect x="1175.0" y="1967" width="30.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1178.03" y="1977.5" >CPy..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1119" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1663" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="345.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1087" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1097.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="905.5" ></text>
</g>
<g >
<title>TClingMemberIter::Advance() (2 samples, 0.458%)</title><rect x="84.5" y="1935" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="87.51" y="1945.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1481.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1439" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1359" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1199" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1225.5" ></text>
</g>
<g >
<title>AddOverloadedCallCandidate(clang::Sema&amp;, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1455" width="3.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="165.40" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="217.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::~IncrementalExecutor() (1 samples, 0.229%)</title><rect x="1307.1" y="1951" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1310.12" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (3 samples, 0.686%)</title><rect x="1297.0" y="1695" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1705.5" ></text>
</g>
<g >
<title>llvm::DIEInteger::SizeOf(llvm::AsmPrinter const*, llvm::dwarf::Form) const (1 samples, 0.229%)</title><rect x="1175.0" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1071" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1081.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1295" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1487" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1849.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="50.6" y="1887" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="53.64" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="799" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="809.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1178.4" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1181.42" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1215" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1225.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="98.1" y="607" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="617.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="319" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1432.4" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="233.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1185.2" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1439" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1785.5" ></text>
</g>
<g >
<title>cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (1 samples, 0.229%)</title><rect x="148.9" y="1855" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="151.86" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (3 samples, 0.686%)</title><rect x="1297.0" y="1311" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="191" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1775" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="623" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="633.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (1 samples, 0.229%)</title><rect x="1198.7" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1417.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::computeSizeAndOffsets() (2 samples, 0.458%)</title><rect x="1290.2" y="1743" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1087" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1903" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1913.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDefaultTemplateArgumentIfAvailable(clang::TemplateDecl*, clang::SourceLocation, clang::SourceLocation, clang::Decl*, llvm::SmallVectorImpl&lt;clang::TemplateArgument&gt;&amp;, bool&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1785.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1167" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1300.3" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="121.8" y="1279" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1145.5" ></text>
</g>
<g >
<title>StoreAnyExprIntoOneUnit(clang::CodeGen::CodeGenFunction&amp;, clang::Expr const*, clang::QualType, clang::CodeGen::Address, clang::CodeGen::AggValueSlot::Overlap_t) [clone .constprop.0] (2 samples, 0.458%)</title><rect x="1181.8" y="1327" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1184.81" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="409.5" ></text>
</g>
<g >
<title>llvm::DIEAbbrevSet::uniqueAbbreviation(llvm::DIE&amp;) (1 samples, 0.229%)</title><rect x="142.1" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="767" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="777.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1435.8" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="953.5" ></text>
</g>
<g >
<title>TCling::Declare(char const*) (1 samples, 0.229%)</title><rect x="1337.6" y="2015" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1340.60" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="969.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1343" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1388.4" y="2015" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1300.3" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1391.8" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="185.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1455" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="217.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="138.7" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1395.2" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="895" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="441.5" ></text>
</g>
<g >
<title>all (437 samples, 100.00%)</title><rect x="10.0" y="2079" width="1480.0" height="15.0" fill="rgb(255,130,130)" rx="2" ry="2" />
<text  x="13.00" y="2089.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="319" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="329.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1435.8" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="745.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1791" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="138.7" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1388.4" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1321.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="121.8" y="463" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="585.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::getOrCreateTypeArray(llvm::ArrayRef&lt;llvm::Metadata*&gt;) (1 samples, 0.229%)</title><rect x="1344.4" y="63" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1347.37" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1023" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1033.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="79" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1378.2" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1395.2" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="575" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1161.5" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1065.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1007" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="50.6" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1615" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1625.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&amp;) (2 samples, 0.458%)</title><rect x="220.0" y="1583" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="222.98" y="1593.5" ></text>
</g>
<g >
<title>StoreAnyExprIntoOneUnit(clang::CodeGen::CodeGenFunction&amp;, clang::Expr const*, clang::QualType, clang::CodeGen::Address, clang::CodeGen::AggValueSlot::Overlap_t) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="1432.4" y="1887" width="3.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1435.43" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1364.7" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1161.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="1232.6" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="335" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (3 samples, 0.686%)</title><rect x="1181.8" y="1567" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1577.5" ></text>
</g>
<g >
<title>llvm::DISubroutineType::getImpl(llvm::LLVMContext&amp;, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1422.3" y="47" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1425.27" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarInit(clang::Expr const*, clang::ValueDecl const*, clang::CodeGen::LValue, bool) (2 samples, 0.458%)</title><rect x="135.3" y="1407" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="521.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1817.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="191" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1188.6" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1398.6" y="2031" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="1695" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="719" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs(clang::CodeGen::CallArgList&amp;, llvm::ArrayRef&lt;clang::QualType&gt;, llvm::iterator_range&lt;clang::Stmt::CastIterator&lt;clang::Expr, clang::Expr const* const, clang::Stmt const* const&gt; &gt;, clang::CodeGen::CodeGenFunction::AbstractCallee, unsigned int, clang::CodeGen::CodeGenFunction::EvaluationOrder) (1 samples, 0.229%)</title><rect x="165.8" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (8 samples, 1.831%)</title><rect x="101.4" y="1519" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1529.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="985.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="985.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="399" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="639" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1775" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1785.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1407" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="125.1" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1395.2" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1321.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1321.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;)::{lambda(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;)#1}::operator()(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;) const (1 samples, 0.229%)</title><rect x="81.1" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1849.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType(clang::ElaboratedTypeKeyword, clang::SourceLocation, clang::NestedNameSpecifierLoc, clang::IdentifierInfo const*, clang::SourceLocation, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1185.2" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="233.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (2 samples, 0.458%)</title><rect x="1290.2" y="1727" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1727" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1737.5" ></text>
</g>
<g >
<title>clang::FunctionDecl const* cling::findFunction&lt;clang::FunctionDecl const*&gt;(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl&lt;clang::Expr*&gt; const&amp;, bool, clang::ASTContext&amp;, cling::Interpreter*, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl&lt;clang::Expr*&gt; const&amp;, clang::LookupResult&amp;, clang::DeclarationNameInfo&amp;, clang::TemplateArgumentListInfo const*, clang::ASTContext&amp;, clang::Parser&amp;, clang::Sema&amp;, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (3 samples, 0.686%)</title><rect x="1229.2" y="1839" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="135.3" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="761.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (1 samples, 0.229%)</title><rect x="148.9" y="1759" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="151.86" y="1769.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::createPointerType(llvm::DIType*, unsigned long, unsigned int, llvm::Optional&lt;unsigned int&gt;, llvm::StringRef) (1 samples, 0.229%)</title><rect x="135.3" y="639" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="138.31" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="543" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1145.5" ></text>
</g>
<g >
<title>llvm::ContextAndReplaceableUses::~ContextAndReplaceableUses() (1 samples, 0.229%)</title><rect x="1310.5" y="1935" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1313.50" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="313.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="63" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1188.6" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXNewExpr(clang::CXXNewExpr const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1913.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1615" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1129.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr(clang::CXXScopeSpec&amp;, clang::DeclarationNameInfo const&amp;, bool, clang::Scope const*, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1435.8" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="377.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadedCallCandidates(clang::UnresolvedLookupExpr*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="585.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const (1 samples, 0.229%)</title><rect x="233.5" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="236.52" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1432.4" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="841.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_wrapper() (10 samples, 2.288%)</title><rect x="94.7" y="1903" width="33.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="97.67" y="1913.5" >TCl..</text>
</g>
<g >
<title>clang::TemplateArgument::isInstantiationDependent() const (1 samples, 0.229%)</title><rect x="1385.0" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="121.8" y="687" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="697.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (7 samples, 1.602%)</title><rect x="1175.0" y="1935" width="23.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1178.03" y="1945.5" >CP..</text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1903" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1297.0" y="863" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1785.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::findOrEmitSection(llvm::object::ObjectFile const&amp;, llvm::object::SectionRef const&amp;, bool, std::map&lt;llvm::object::SectionRef, unsigned int, std::less&lt;llvm::object::SectionRef&gt;, std::allocator&lt;std::pair&lt;llvm::object::SectionRef const, unsigned int&gt; &gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="206.4" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="209.43" y="1593.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="162.4" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1081.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (1 samples, 0.229%)</title><rect x="1192.0" y="1743" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1194.97" y="1753.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="162.4" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="239" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="249.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1695" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1705.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr(clang::CXXScopeSpec&amp;, clang::DeclarationNameInfo const&amp;, bool, clang::Scope const*, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1232.6" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1371.5" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="57.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::beginModule() (1 samples, 0.229%)</title><rect x="98.1" y="1727" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="591" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1297.0" y="959" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="969.5" ></text>
</g>
<g >
<title>clone3 (4 samples, 0.915%)</title><rect x="1439.2" y="2047" width="13.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1442.20" y="2057.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::createReplaceableCompositeType(unsigned int, llvm::StringRef, llvm::DIScope*, llvm::DIFile*, unsigned int, unsigned int, unsigned long, unsigned int, llvm::DINode::DIFlags, llvm::StringRef) (1 samples, 0.229%)</title><rect x="169.2" y="1119" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="172.18" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="847" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (5 samples, 1.144%)</title><rect x="101.4" y="1151" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="649.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1119" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1129.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="111" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="911" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1297.0" y="1263" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1679" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1689.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.229%)</title><rect x="1324.1" y="2031" width="3.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1327.05" y="2041.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.229%)</title><rect x="1486.6" y="2047" width="3.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1489.61" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1055" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1519" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1529.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="142.1" y="1759" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1151" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1161.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl(clang::DeclarationName, clang::QualType, clang::TypeSourceInfo*, clang::RecordDecl*, clang::SourceLocation, bool, clang::Expr*, clang::InClassInitStyle, clang::SourceLocation, clang::AccessSpecifier, clang::NamedDecl*, clang::Declarator*) (1 samples, 0.229%)</title><rect x="1435.8" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="655" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="665.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="463" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="473.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr(clang::DependentScopeDeclRefExpr*, bool, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1232.6" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="255" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="559" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="777.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1154.7" y="1631" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1157.71" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1303.7" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="165.8" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1023" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="2041.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="1175.0" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1199" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1209.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="162.4" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1295" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="1432.4" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1103" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1113.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (2 samples, 0.458%)</title><rect x="1144.6" y="1871" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1147.55" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="1198.7" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1577.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="209.8" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1381.6" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1721.5" ></text>
</g>
<g >
<title>WrapperCall(long, unsigned long, void*, void*, void*) (1 samples, 0.229%)</title><rect x="142.1" y="1919" width="3.4" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="145.08" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitUnaryOpLValue(clang::UnaryOperator const*) (2 samples, 0.458%)</title><rect x="121.8" y="1407" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="217.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_dtor_wrapper(TClingClassInfo const*) (5 samples, 1.144%)</title><rect x="1290.2" y="1951" width="16.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1293.18" y="1961.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnits(bool) (1 samples, 0.229%)</title><rect x="1202.1" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1418.9" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="703" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (8 samples, 1.831%)</title><rect x="101.4" y="1567" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1577.5" >cl..</text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext(clang::CXXScopeSpec&amp;, clang::DeclContext*&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1401.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="1229.2" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1007" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1135" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="847" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1185.2" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="575" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="687" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1305.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.229%)</title><rect x="1459.5" y="2047" width="3.4" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1462.52" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1823" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1833.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::codeGenTransaction(cling::Transaction*) (3 samples, 0.686%)</title><rect x="169.2" y="1743" width="10.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="172.18" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1695" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1391" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1401.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&amp;, _object*, _object*, CPyCppyy::CallContext*) (9 samples, 2.059%)</title><rect x="1175.0" y="1983" width="30.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1178.03" y="1993.5" >CPy..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="265.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="767" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="777.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="143" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1135" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (2 samples, 0.458%)</title><rect x="135.3" y="1471" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1481.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::findExisting(clang::NamedDecl*) (1 samples, 0.229%)</title><rect x="1337.6" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1129.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::RedeclarableResult clang::ASTDeclReader::VisitRedeclarable&lt;clang::FunctionDecl&gt;(clang::Redeclarable&lt;clang::FunctionDecl&gt;*) (1 samples, 0.229%)</title><rect x="81.1" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1225.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit(clang::Stmt*) (1 samples, 0.229%)</title><rect x="1429.0" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1181.8" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1065.5" ></text>
</g>
<g >
<title>llvm::MDTuple::getImpl(llvm::LLVMContext&amp;, llvm::ArrayRef&lt;llvm::Metadata*&gt;, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1344.4" y="47" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1347.37" y="57.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="367" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="815" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="553.5" ></text>
</g>
<g >
<title>clang::Parser::ParseDeclaration(clang::DeclaratorContext, clang::SourceLocation&amp;, clang::Parser::ParsedAttributesWithRange&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1913.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1615" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1337.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="927" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1378.2" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1529.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1375" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1097.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="1412.1" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1311" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1188.6" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="623" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="633.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl(clang::DeclarationName, clang::QualType, clang::TypeSourceInfo*, clang::RecordDecl*, clang::SourceLocation, bool, clang::Expr*, clang::InClassInitStyle, clang::SourceLocation, clang::AccessSpecifier, clang::NamedDecl*, clang::Declarator*) (1 samples, 0.229%)</title><rect x="1435.8" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="125.1" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1273.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1232.6" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="809.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::QualType, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName) (1 samples, 0.229%)</title><rect x="162.4" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1167" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1185.2" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="297.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::finalizeModuleInfo() (1 samples, 0.229%)</title><rect x="142.1" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="121.8" y="847" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="857.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="162.4" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="959" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="969.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (1 samples, 0.229%)</title><rect x="1171.6" y="1839" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.65" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1807" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1503" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1663" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="857.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1343" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1487" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1368.1" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1583" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1935" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1945.5" ></text>
</g>
<g >
<title>StoreAnyExprIntoOneUnit(clang::CodeGen::CodeGenFunction&amp;, clang::Expr const*, clang::QualType, clang::CodeGen::Address, clang::CodeGen::AggValueSlot::Overlap_t) [clone .constprop.0] (5 samples, 1.144%)</title><rect x="101.4" y="1407" width="17.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="104.44" y="1417.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1147.9" y="1023" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1241.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1418.9" y="31" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1887" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1327" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1337.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1641.5" ></text>
</g>
<g >
<title>createTypeWithFlags(llvm::DIType const*, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1425.7" y="63" width="3.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1428.65" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="127" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (1 samples, 0.229%)</title><rect x="165.8" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1065.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1151.3" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1583" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1055" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1185.2" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1432.4" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="329.5" ></text>
</g>
<g >
<title>__libc_fork (1 samples, 0.229%)</title><rect x="37.1" y="2047" width="3.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="40.09" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1391.8" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1695" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1705.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1839" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1081.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1823" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (8 samples, 1.831%)</title><rect x="101.4" y="1647" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1657.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="639" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1297.0" y="975" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="575" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="585.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="121.8" y="543" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="553.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitCXXMethodDecl(clang::CXXMethodDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1401.9" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="153.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitVarDecl(clang::VarDecl*, bool, llvm::ArrayRef&lt;clang::BindingDecl*&gt;*) (1 samples, 0.229%)</title><rect x="162.4" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="975" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1551" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1561.5" ></text>
</g>
<g >
<title>[unknown] (370 samples, 84.668%)</title><rect x="54.0" y="2047" width="1253.1" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="57.03" y="2057.5" >[unknown]</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (3 samples, 0.686%)</title><rect x="1181.8" y="1679" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1481.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DISubroutineType&gt;, llvm::detail::DenseSetPair&lt;llvm::DISubroutineType*&gt; &gt;::grow(unsigned int) (1 samples, 0.229%)</title><rect x="1185.2" y="143" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1188.19" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (5 samples, 1.144%)</title><rect x="101.4" y="1231" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="863" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="873.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1471" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1481.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="927" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (8 samples, 1.831%)</title><rect x="101.4" y="1535" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1545.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1432.4" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1049.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="1337.6" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1337.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis(llvm::Pass*) (1 samples, 0.229%)</title><rect x="186.1" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="189.11" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1247" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1257.5" ></text>
</g>
<g >
<title>clang::Type::isSpecificBuiltinType(unsigned int) const (1 samples, 0.229%)</title><rect x="1415.5" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="847" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="857.5" ></text>
</g>
<g >
<title>TListOfDataMembers::Load() (2 samples, 0.458%)</title><rect x="84.5" y="1967" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="87.51" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1743" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1647" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1321.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (1 samples, 0.229%)</title><rect x="1195.4" y="1695" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1198.35" y="1705.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (1 samples, 0.229%)</title><rect x="1229.2" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1593.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitVarDeclImpl(clang::VarDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="125.1" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1065.5" ></text>
</g>
<g >
<title>UnwrapTypeForDebugInfo(clang::QualType, clang::ASTContext const&amp;) (1 samples, 0.229%)</title><rect x="1300.3" y="463" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1303.34" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1375" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1385.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr(clang::CallExpr*) (1 samples, 0.229%)</title><rect x="1435.8" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1577.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="125.1" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="138.7" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="649.5" ></text>
</g>
<g >
<title>llvm::ContextualFoldingSet&lt;clang::FunctionProtoType, clang::ASTContext&amp;&gt;::NodeEquals(llvm::FoldingSetBase::Node*, llvm::FoldingSetNodeID const&amp;, unsigned int, llvm::FoldingSetNodeID&amp;) const (1 samples, 0.229%)</title><rect x="121.8" y="319" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="124.76" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="537.5" ></text>
</g>
<g >
<title>clang::Sema::FixOverloadedFunctionReference(clang::Expr*, clang::DeclAccessPair, clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="1232.6" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="2009.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl(clang::RedeclarableTemplateDecl*) (1 samples, 0.229%)</title><rect x="84.5" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1753.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1412.1" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="233.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getDIE(llvm::DINode const*) const (1 samples, 0.229%)</title><rect x="1456.1" y="47" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1081.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1375" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1385.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1855" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1300.3" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1193.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="761.5" ></text>
</g>
<g >
<title>Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (10 samples, 2.288%)</title><rect x="94.7" y="1951" width="33.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="97.67" y="1961.5" >Cpp..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.229%)</title><rect x="91.3" y="2031" width="3.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="94.28" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1368.1" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1081.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1033.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1378.2" y="2047" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="2057.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Transaction**) (5 samples, 1.144%)</title><rect x="1181.8" y="1807" width="16.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1184.81" y="1817.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl(clang::RedeclarableTemplateDecl*) (1 samples, 0.229%)</title><rect x="101.4" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="623" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1161.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::finalizeModuleInfo() (1 samples, 0.229%)</title><rect x="1175.0" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="489.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1929.5" ></text>
</g>
<g >
<title>CollectFieldInitializer(clang::Sema&amp;, (anonymous namespace)::BaseAndFieldInfo&amp;, clang::FieldDecl*, clang::IndirectFieldDecl*) (1 samples, 0.229%)</title><rect x="1229.2" y="1455" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1232.22" y="1465.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::TrackingMDRef, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::TrackingMDRef&gt; &gt;, void const*, llvm::TrackingMDRef, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::TrackingMDRef&gt; &gt;::FindAndConstruct(void const*&amp;&amp;) (1 samples, 0.229%)</title><rect x="1198.7" y="911" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1201.74" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1113.5" ></text>
</g>
<g >
<title>builtin_hasattr (3 samples, 0.686%)</title><rect x="1229.2" y="2031" width="10.2" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1232.22" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1817.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="1412.1" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1439" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1449.5" ></text>
</g>
<g >
<title>clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&amp;, clang::ParsingDeclSpec*) (1 samples, 0.229%)</title><rect x="1337.6" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1177.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&amp;) [clone .part.0] (2 samples, 0.458%)</title><rect x="220.0" y="1599" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="222.98" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="975" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="761.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1435.8" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="889.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FinishedDeserializing() (1 samples, 0.229%)</title><rect x="87.9" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="90.89" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="135.3" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="169.2" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1417.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl&lt;unsigned long&gt;&amp;, llvm::StringRef*) (1 samples, 0.229%)</title><rect x="87.9" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="90.89" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1769.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitCXXMethodDecl(clang::CXXMethodDecl*) (1 samples, 0.229%)</title><rect x="121.8" y="431" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="441.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1195.4" y="1711" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1198.35" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1371.5" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1929.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1154.7" y="1647" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1157.71" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="121.8" y="815" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1359" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1881.5" ></text>
</g>
<g >
<title>llvm::DISubroutineType::getImpl(llvm::LLVMContext&amp;, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1374.9" y="63" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1377.85" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="1192.0" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1529.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1641.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Transaction**) (1 samples, 0.229%)</title><rect x="148.9" y="1823" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="151.86" y="1833.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (11 samples, 2.517%)</title><rect x="199.7" y="1743" width="37.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="202.66" y="1753.5" >clin..</text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) (1 samples, 0.229%)</title><rect x="162.4" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (3 samples, 0.686%)</title><rect x="1418.9" y="1999" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="125.1" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="265.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (8 samples, 1.831%)</title><rect x="54.0" y="1855" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1865.5" >cl..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;*) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1307.1" y="1887" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1310.12" y="1897.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1823" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="138.7" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="841.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1435.8" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="505.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1327" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1199" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1432.4" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1225.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="81.1" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="937.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1631" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1071" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1081.5" ></text>
</g>
<g >
<title>CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, _object*) (3 samples, 0.686%)</title><rect x="1229.2" y="1983" width="10.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1232.22" y="1993.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1641.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType(clang::TemplateName, clang::SourceLocation, clang::TemplateArgumentListInfo&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (2 samples, 0.458%)</title><rect x="1161.5" y="1487" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1347.8" y="399" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="409.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1311" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1381.6" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="729.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (1 samples, 0.229%)</title><rect x="1337.6" y="1935" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1340.60" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1119" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1017.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1456.1" y="79" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1599" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1609.5" ></text>
</g>
<g >
<title>TROOT::GetListOfGlobalFunctions(bool) (1 samples, 0.229%)</title><rect x="81.1" y="1983" width="3.4" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="84.12" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="969.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::getCurrentFragment() const (1 samples, 0.229%)</title><rect x="1202.1" y="1455" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1465.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="81.1" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1785.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitValueImpl(llvm::MCExpr const*, unsigned int, llvm::SMLoc) (1 samples, 0.229%)</title><rect x="145.5" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1609.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1711" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1823" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1263" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (8 samples, 1.831%)</title><rect x="101.4" y="1503" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1513.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1679" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1689.5" ></text>
</g>
<g >
<title>clang::Parser::ParseNamespace(clang::DeclaratorContext, clang::SourceLocation&amp;, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1337.6" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1625.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (8 samples, 1.831%)</title><rect x="101.4" y="1759" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1769.5" >cl..</text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1593.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind) (1 samples, 0.229%)</title><rect x="1435.8" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (2 samples, 0.458%)</title><rect x="135.3" y="1679" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1405.3" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="383" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="639" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="649.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1295" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1305.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::processRelocationRef(unsigned int, llvm::object::content_iterator&lt;llvm::object::RelocationRef&gt;, llvm::object::ObjectFile const&amp;, std::map&lt;llvm::object::SectionRef, unsigned int, std::less&lt;llvm::object::SectionRef&gt;, std::allocator&lt;std::pair&lt;llvm::object::SectionRef const, unsigned int&gt; &gt; &gt;&amp;, std::map&lt;llvm::RelocationValueRef, unsigned long, std::less&lt;llvm::RelocationValueRef&gt;, std::allocator&lt;std::pair&lt;llvm::RelocationValueRef const, unsigned long&gt; &gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="1144.6" y="1679" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="431" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="441.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="911" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="921.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateExceptionSpec(clang::SourceLocation, clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="1232.6" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="377.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (2 samples, 0.458%)</title><rect x="1175.0" y="1791" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1178.03" y="1801.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::getAttribute(llvm::StringRef) const (1 samples, 0.229%)</title><rect x="233.5" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="236.52" y="1545.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="81.1" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1817.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction(clang::FunctionTemplateDecl*, llvm::SmallVectorImpl&lt;clang::DeducedTemplateArgument&gt;&amp;, unsigned int, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, llvm::SmallVectorImpl&lt;clang::Sema::OriginalCallArg&gt; const*, bool, llvm::function_ref&lt;bool ()&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="121.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1007" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1039" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1049.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1119" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1408.7" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="569.5" ></text>
</g>
<g >
<title>TClingCallFunc::ExecDestructor(TClingClassInfo const*, void*, unsigned long, bool) (1 samples, 0.229%)</title><rect x="50.6" y="2031" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="53.64" y="2041.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (2 samples, 0.458%)</title><rect x="1290.2" y="1903" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1293.18" y="1913.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule(llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr, false&gt;&amp;)::{lambda(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;)#1}::operator()(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;) const (1 samples, 0.229%)</title><rect x="223.4" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="226.36" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1551" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1561.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="125.1" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="148.9" y="1631" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1263" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1513.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_wrapper() (5 samples, 1.144%)</title><rect x="1151.3" y="1903" width="17.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1154.33" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="50.6" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1817.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, unsigned int) (1 samples, 0.229%)</title><rect x="1435.8" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1033.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (1 samples, 0.229%)</title><rect x="1171.6" y="1887" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1174.65" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1993.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction(cling::Transaction&amp;) (1 samples, 0.229%)</title><rect x="1195.4" y="1743" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1198.35" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="495" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="585.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (1 samples, 0.229%)</title><rect x="165.8" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1303.7" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (3 samples, 0.686%)</title><rect x="1181.8" y="1519" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1529.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="1164.9" y="767" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1167.87" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1849.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction(llvm::PointerIntPair&lt;cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits&lt;cling::Transaction*&gt;, llvm::PointerIntPairInfo&lt;cling::Transaction*, 2u, llvm::PointerLikeTypeTraits&lt;cling::Transaction*&gt; &gt; &gt;&amp;, bool) (2 samples, 0.458%)</title><rect x="1192.0" y="1759" width="6.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1194.97" y="1769.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="239" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue(clang::Expr const*) (8 samples, 1.831%)</title><rect x="101.4" y="1487" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1497.5" >cl..</text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (1 samples, 0.229%)</title><rect x="1229.2" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1289.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="687" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="697.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (1 samples, 0.229%)</title><rect x="142.1" y="1791" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1801.5" ></text>
</g>
<g >
<title>clang::Sema::PopExpressionEvaluationContext() (1 samples, 0.229%)</title><rect x="1435.8" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="57.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1007" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1017.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1452.7" y="495" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="969.5" ></text>
</g>
<g >
<title>TClass::GetListOfMethods(bool) (3 samples, 0.686%)</title><rect x="1229.2" y="1951" width="10.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1232.22" y="1961.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="1290.2" y="1791" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1401.9" y="527" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="537.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="937.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope(clang::TypeLoc, clang::QualType, clang::NamedDecl*, clang::CXXScopeSpec&amp;) [clone .isra.0] (1 samples, 0.229%)</title><rect x="162.4" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1033.5" ></text>
</g>
<g >
<title>llvm::DIDerivedType::getImpl(llvm::LLVMContext&amp;, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional&lt;unsigned int&gt;, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1368.1" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1371.08" y="41.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (25 samples, 5.721%)</title><rect x="152.2" y="1823" width="84.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="155.24" y="1833.5" >ROOT::Intern..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="687" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1279" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="857.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;)::{lambda(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;)#1}::operator()(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;) const (1 samples, 0.229%)</title><rect x="101.4" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="729.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="783" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (2 samples, 0.458%)</title><rect x="135.3" y="1711" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1721.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke(std::_Any_data const&amp;, llvm::Function const&amp;) (1 samples, 0.229%)</title><rect x="233.5" y="1599" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="236.52" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue(clang::Expr const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="50.6" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="473.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_wrapper() (4 samples, 0.915%)</title><rect x="128.5" y="1887" width="13.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="131.54" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="969.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (2 samples, 0.458%)</title><rect x="135.3" y="1775" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="138.31" y="1785.5" ></text>
</g>
<g >
<title>cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (1 samples, 0.229%)</title><rect x="50.6" y="1983" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="53.64" y="1993.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl(llvm::Function const&amp;) const (1 samples, 0.229%)</title><rect x="179.3" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="182.34" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1673.5" ></text>
</g>
<g >
<title>clang::Type::isSpecificBuiltinType(unsigned int) const (1 samples, 0.229%)</title><rect x="138.7" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1418.9" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="361.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (1 samples, 0.229%)</title><rect x="1171.6" y="1871" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1174.65" y="1881.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="751" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="761.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::registerSymbol(llvm::MCSymbol const&amp;, bool*) (1 samples, 0.229%)</title><rect x="1178.4" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1181.42" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="169.2" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="319" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1791" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1801.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::Finish() (1 samples, 0.229%)</title><rect x="131.9" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="134.92" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="201.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1951" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1961.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="1418.9" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="1039" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1273.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;*) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1307.1" y="1919" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1310.12" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1551" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (2 samples, 0.458%)</title><rect x="1181.8" y="1375" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="655" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="665.5" ></text>
</g>
<g >
<title>ldd (8 samples, 1.831%)</title><rect x="23.5" y="2063" width="27.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="26.55" y="2073.5" >ldd</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1753.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1232.6" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1929.5" ></text>
</g>
<g >
<title>llvm::DIE::generateAbbrev() const (2 samples, 0.458%)</title><rect x="1290.2" y="1663" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1369.5" ></text>
</g>
<g >
<title>Cppyy::GetMethodIndicesFromName(unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.229%)</title><rect x="81.1" y="1999" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="84.12" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1183" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1689.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="148.9" y="1551" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1033.5" ></text>
</g>
<g >
<title>TFunction::GetReturnTypeName() const (1 samples, 0.229%)</title><rect x="1168.3" y="1935" width="3.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1171.26" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1919" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="489.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (1 samples, 0.229%)</title><rect x="101.4" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="793.5" ></text>
</g>
<g >
<title>isSafeToConvert(clang::RecordDecl const*, clang::CodeGen::CodeGenTypes&amp;, llvm::SmallPtrSet&lt;clang::RecordDecl const*, 16u&gt;&amp;) (1 samples, 0.229%)</title><rect x="118.4" y="975" width="3.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="121.38" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1695" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="927" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1181.8" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1049.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (3 samples, 0.686%)</title><rect x="1151.3" y="1759" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1769.5" ></text>
</g>
<g >
<title>clang::Sema::IsPointerConversion(clang::Expr*, clang::QualType, clang::QualType, bool, clang::QualType&amp;, bool&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1791" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1801.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1753.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="50.6" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1497.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="655" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="639" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="649.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::writeSectionData(llvm::raw_ostream&amp;, llvm::MCSection const*, llvm::MCAsmLayout const&amp;) const (1 samples, 0.229%)</title><rect x="1158.1" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1161.10" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1341.0" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1300.3" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="165.8" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="271" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1391.8" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="409.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream(clang::serialization::ModuleFile&amp;) (1 samples, 0.229%)</title><rect x="152.2" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1465.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.229%)</title><rect x="186.1" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="189.11" y="1673.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="1229.2" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (3 samples, 0.686%)</title><rect x="1297.0" y="1583" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (1 samples, 0.229%)</title><rect x="1198.7" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="431" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="441.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="511" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="687" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1388.4" y="735" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1071" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="777.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1657.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="191" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="201.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr(clang::CXXScopeSpec&amp;, clang::DeclarationNameInfo const&amp;, bool, clang::Scope const*, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="162.4" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1327" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1432.4" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1247" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="393.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="162.4" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="1071" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="777.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="2015" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1775" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1807" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1817.5" ></text>
</g>
<g >
<title>bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;clang::GlobalDecl, long, llvm::DenseMapInfo&lt;clang::GlobalDecl&gt;, llvm::detail::DenseMapPair&lt;clang::GlobalDecl, long&gt; &gt;, clang::GlobalDecl, long, llvm::DenseMapInfo&lt;clang::GlobalDecl&gt;, llvm::detail::DenseMapPair&lt;clang::GlobalDecl, long&gt; &gt;::LookupBucketFor&lt;clang::GlobalDecl&gt;(clang::GlobalDecl const&amp;, llvm::detail::DenseMapPair&lt;clang::GlobalDecl, long&gt; const*&amp;) const (1 samples, 0.229%)</title><rect x="1405.3" y="31" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1408.33" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="857.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1887" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1432.4" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (3 samples, 0.686%)</title><rect x="1181.8" y="1631" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="155.6" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="158.63" y="1417.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="895" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (2 samples, 0.458%)</title><rect x="169.2" y="1599" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="873.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypeDecl(clang::TypeDecl*) (1 samples, 0.229%)</title><rect x="101.4" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="537.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1154.7" y="1679" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1157.71" y="1689.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="719" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="729.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1087" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="138.7" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="921.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1225.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSectionName(llvm::object::DataRefImpl) const (1 samples, 0.229%)</title><rect x="94.7" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (3 samples, 0.686%)</title><rect x="1297.0" y="1503" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1145.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="409.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReturnStmt(clang::ReturnStmt*) (1 samples, 0.229%)</title><rect x="1435.8" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1303.7" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1519" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="879" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="889.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1487" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1344.4" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (4 samples, 0.915%)</title><rect x="1351.1" y="1375" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1545.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1711" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1721.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="162.4" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="135.3" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1097.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitMachineNode(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="223.4" y="1519" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="226.36" y="1529.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1405.3" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="165.8" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1241.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (2 samples, 0.458%)</title><rect x="1144.6" y="1839" width="6.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1147.55" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="591" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="399" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="409.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (1 samples, 0.229%)</title><rect x="1202.1" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1689.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1147.9" y="1039" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1801.5" ></text>
</g>
<g >
<title>llvm::DILocation* llvm::MDNode::storeImpl&lt;llvm::DILocation, llvm::DenseSet&lt;llvm::DILocation*, llvm::MDNodeInfo&lt;llvm::DILocation&gt; &gt; &gt;(llvm::DILocation*, llvm::Metadata::StorageType, llvm::DenseSet&lt;llvm::DILocation*, llvm::MDNodeInfo&lt;llvm::DILocation&gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="148.9" y="1487" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="151.86" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1375" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1385.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="431" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1097.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1185.2" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1593.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDecl(clang::Decl*, clang::DeclContext*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1625.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (9 samples, 2.059%)</title><rect x="54.0" y="2031" width="30.5" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="57.03" y="2041.5" >PyO..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (2 samples, 0.458%)</title><rect x="135.3" y="1647" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="95" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="138.7" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1839" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="121.8" y="831" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="841.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="969.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions const&amp;, cling::Transaction**) const (8 samples, 1.831%)</title><rect x="101.4" y="1823" width="27.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="104.44" y="1833.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1247" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1487" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1375" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1439" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1388.4" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="281.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="921.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1279" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1289.5" ></text>
</g>
<g >
<title>__posix_spawn_file_actions_destroy (1 samples, 0.229%)</title><rect x="1205.5" y="2031" width="3.4" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="1208.51" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1188.6" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (4 samples, 0.915%)</title><rect x="1351.1" y="943" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TemplateSpecializationType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="719" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1297.0" y="895" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1343" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="687" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (4 samples, 0.915%)</title><rect x="1351.1" y="255" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1945.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1071" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (3 samples, 0.686%)</title><rect x="1297.0" y="1471" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateFile(clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1398.6" y="63" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="73.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.229%)</title><rect x="1195.4" y="1647" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1198.35" y="1657.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;) (1 samples, 0.229%)</title><rect x="162.4" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1609.5" ></text>
</g>
<g >
<title>clang::TypeLocVisitor&lt;(anonymous namespace)::TypeAligner, unsigned int&gt;::Visit(clang::TypeLoc) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="162.4" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="751" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="889.5" ></text>
</g>
<g >
<title>TCling::~TCling() (5 samples, 1.144%)</title><rect x="1307.1" y="2015" width="17.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1310.12" y="2025.5" ></text>
</g>
<g >
<title>clang::Sema::CheckNonDependentConversions(clang::FunctionTemplateDecl*, llvm::ArrayRef&lt;clang::QualType&gt;, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, llvm::MutableArrayRef&lt;clang::ImplicitConversionSequence&gt;&amp;, bool, clang::CXXRecordDecl*, clang::QualType, clang::Expr::Classification) (1 samples, 0.229%)</title><rect x="1435.8" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1385.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (1 samples, 0.229%)</title><rect x="1202.1" y="1695" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1205.13" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1119" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1129.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (3 samples, 0.686%)</title><rect x="1297.0" y="1855" width="10.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1299.96" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="665.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&amp;, void*&amp;) (1 samples, 0.229%)</title><rect x="1412.1" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1415.11" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1791" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="223" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="233.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="101.4" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="713.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1647" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1039" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1977.5" ></text>
</g>
<g >
<title>TClingCallFunc::IFacePtr() (5 samples, 1.144%)</title><rect x="1151.3" y="1919" width="17.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1154.33" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1391" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="165.8" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="1198.7" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1743" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1161.5" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1049.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="142.1" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1673.5" ></text>
</g>
<g >
<title>Cppyy::CallR(long, void*, unsigned long, void*) (295 samples, 67.506%)</title><rect x="145.5" y="1935" width="999.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="148.47" y="1945.5" >Cppyy::CallR(long, void*, unsigned long, void*)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="825.5" ></text>
</g>
<g >
<title>TClingCallFunc::IFacePtr() (4 samples, 0.915%)</title><rect x="128.5" y="1903" width="13.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="131.54" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (2 samples, 0.458%)</title><rect x="135.3" y="1631" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1388.4" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1297.0" y="1295" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1305.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="617.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="155.6" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="158.63" y="1449.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="975" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1705.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::processRelocationRef(unsigned int, llvm::object::content_iterator&lt;llvm::object::RelocationRef&gt;, llvm::object::ObjectFile const&amp;, std::map&lt;llvm::object::SectionRef, unsigned int, std::less&lt;llvm::object::SectionRef&gt;, std::allocator&lt;std::pair&lt;llvm::object::SectionRef const, unsigned int&gt; &gt; &gt;&amp;, std::map&lt;llvm::RelocationValueRef, unsigned long, std::less&lt;llvm::RelocationValueRef&gt;, std::allocator&lt;std::pair&lt;llvm::RelocationValueRef const, unsigned long&gt; &gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="199.7" y="1583" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1593.5" ></text>
</g>
<g >
<title>StoreAnyExprIntoOneUnit(clang::CodeGen::CodeGenFunction&amp;, clang::Expr const*, clang::QualType, clang::CodeGen::Address, clang::CodeGen::AggValueSlot::Overlap_t) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="1429.0" y="1855" width="3.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1432.04" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1663" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (8 samples, 1.831%)</title><rect x="101.4" y="1727" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1737.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="175" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1711" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1721.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="799" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1303.7" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="543" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="125.1" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="148.9" y="1695" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="239" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1033.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="1337.6" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1113.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="239" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="249.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (1 samples, 0.229%)</title><rect x="142.1" y="1871" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="145.08" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="165.8" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1321.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (1 samples, 0.229%)</title><rect x="1202.1" y="1743" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1205.13" y="1753.5" ></text>
</g>
<g >
<title>clang::Sema::LookupOverloadedOperatorName(clang::OverloadedOperatorKind, clang::Scope*, clang::QualType, clang::QualType, clang::UnresolvedSetImpl&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1497.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1471" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (1 samples, 0.229%)</title><rect x="50.6" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1295" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1071" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1247" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1432.4" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1369.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression(bool, bool, clang::Parser::TypeCastState, bool) (1 samples, 0.229%)</title><rect x="1337.6" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1343" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="575" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="585.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr(clang::CallExpr*) (1 samples, 0.229%)</title><rect x="1435.8" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="457.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt(clang::Stmt*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="159.0" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="162.02" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1439" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1300.3" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="889.5" ></text>
</g>
<g >
<title>clang::serialization::MultiOnDiskHashTable&lt;clang::serialization::reader::ASTDeclContextNameLookupTrait&gt;::find(clang::DeclarationName const&amp;) (1 samples, 0.229%)</title><rect x="118.4" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1368.1" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="495" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="495" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="799" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1198.7" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (2 samples, 0.458%)</title><rect x="1161.5" y="1647" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1407" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="2009.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="287" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1198.7" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1145.5" ></text>
</g>
<g >
<title>StoreAnyExprIntoOneUnit(clang::CodeGen::CodeGenFunction&amp;, clang::Expr const*, clang::QualType, clang::CodeGen::Address, clang::CodeGen::AggValueSlot::Overlap_t) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="1188.6" y="1407" width="3.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1191.58" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr(clang::CallExpr const*, clang::CXXMethodDecl const*, clang::CodeGen::ReturnValueSlot, bool, clang::NestedNameSpecifier*, bool, clang::Expr const*) (2 samples, 0.458%)</title><rect x="1181.8" y="1279" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="1198.7" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1055" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="585.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolutionWrapperPass::runOnFunction(llvm::Function&amp;) (1 samples, 0.229%)</title><rect x="196.3" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="199.27" y="1673.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="98.1" y="895" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="719" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1395.2" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1497.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="671" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1263" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1327" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="297.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitValueImpl(llvm::MCExpr const*, unsigned int, llvm::SMLoc) (1 samples, 0.229%)</title><rect x="1202.1" y="1471" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (3 samples, 0.686%)</title><rect x="1297.0" y="1727" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="1429.0" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (2 samples, 0.458%)</title><rect x="1181.8" y="1359" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="50.6" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="271" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout(clang::RecordDecl const*, llvm::StructType*) (1 samples, 0.229%)</title><rect x="118.4" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1305.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument(clang::Sema&amp;, clang::TemplateDecl*, clang::SourceLocation, clang::SourceLocation, clang::NonTypeTemplateParmDecl*, llvm::SmallVectorImpl&lt;clang::TemplateArgument&gt;&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1167" width="3.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1235.61" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (3 samples, 0.686%)</title><rect x="1297.0" y="1791" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1631" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1347.8" y="735" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1455" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1465.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext(clang::CXXScopeSpec&amp;, clang::DeclContext*&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1113.5" ></text>
</g>
<g >
<title>TClingCallFunc::IFacePtr() (2 samples, 0.458%)</title><rect x="1144.6" y="1903" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1147.55" y="1913.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::findRegisterDefOperandIdx(unsigned int, bool, bool, llvm::TargetRegisterInfo const*) const (1 samples, 0.229%)</title><rect x="223.4" y="1471" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="226.36" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1415.5" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1471" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1375" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (8 samples, 1.831%)</title><rect x="101.4" y="1599" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1609.5" >cl..</text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="47" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1881.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="559" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1503" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="111" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="121.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (2 samples, 0.458%)</title><rect x="128.5" y="1823" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1833.5" ></text>
</g>
<g >
<title>llvm::object::SectionRef::getName(llvm::StringRef&amp;) const [clone .isra.0] (1 samples, 0.229%)</title><rect x="94.7" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1785.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeLocBuilder&amp;, clang::TypeLoc) (1 samples, 0.229%)</title><rect x="1435.8" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (3 samples, 0.686%)</title><rect x="1181.8" y="1503" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1215" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="943" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="815" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="713.5" ></text>
</g>
<g >
<title>llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::traverse(llvm::BasicBlock*) (1 samples, 0.229%)</title><rect x="192.9" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="195.88" y="1641.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1151" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="991" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1321.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="959" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="969.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;, bool) (1 samples, 0.229%)</title><rect x="1418.9" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1561.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="145.5" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="703" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&amp;) (3 samples, 0.686%)</title><rect x="169.2" y="1727" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1423" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (3 samples, 0.686%)</title><rect x="1181.8" y="1663" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="463" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1737.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1202.1" y="1519" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1641.5" ></text>
</g>
<g >
<title>ROOT::RDF::RResultPtr&lt;double&gt;::Get() (293 samples, 67.048%)</title><rect x="152.2" y="1871" width="992.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="155.24" y="1881.5" >ROOT::RDF::RResultPtr&lt;double&gt;::Get()</text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="125.1" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="521.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt(unsigned long) (1 samples, 0.229%)</title><rect x="152.2" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="575" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="121.8" y="1263" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="921.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1679" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="50.6" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="50.6" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1657.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::Next() (2 samples, 0.458%)</title><rect x="84.5" y="1919" width="6.8" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="87.51" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1471" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="125.1" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitUnaryOpLValue(clang::UnaryOperator const*) (5 samples, 1.144%)</title><rect x="101.4" y="1247" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1215" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1225.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1391" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1401.5" ></text>
</g>
<g >
<title>WrapperCall(long, unsigned long, void*, void*, void*) (5 samples, 1.144%)</title><rect x="1151.3" y="1935" width="17.0" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="1154.33" y="1945.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="991" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1177.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (2 samples, 0.458%)</title><rect x="1290.2" y="1871" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1293.18" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1919" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="623" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="50.6" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1737.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1743" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="457.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (3 samples, 0.686%)</title><rect x="1151.3" y="1775" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1785.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnMemInitializers(clang::Decl*, clang::SourceLocation, llvm::ArrayRef&lt;clang::CXXCtorInitializer*&gt;, bool) (1 samples, 0.229%)</title><rect x="1229.2" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1497.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType(clang::TypeLocBuilder&amp;, clang::TemplateSpecializationTypeLoc, clang::TemplateName) (1 samples, 0.229%)</title><rect x="1435.8" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="825.5" ></text>
</g>
<g >
<title>Cppyy::GetScope(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (8 samples, 1.831%)</title><rect x="54.0" y="1983" width="27.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="57.03" y="1993.5" >Cp..</text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="975" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1913.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&amp;) (1 samples, 0.229%)</title><rect x="50.6" y="1967" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="53.64" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="521.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (2 samples, 0.458%)</title><rect x="1161.5" y="1775" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1164.49" y="1785.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="138.7" y="207" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="141.70" y="217.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (11 samples, 2.517%)</title><rect x="199.7" y="1695" width="37.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1705.5" >llvm..</text>
</g>
<g >
<title>llvm::FPPassManager::doInitialization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1147.9" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1303.7" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1161.5" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1001.5" ></text>
</g>
<g >
<title>clang::ASTReader::loadDeclUpdateRecords(clang::ASTReader::PendingUpdateRecord&amp;) (1 samples, 0.229%)</title><rect x="87.9" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="90.89" y="1817.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1903" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1913.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (2 samples, 0.458%)</title><rect x="155.6" y="1503" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="158.63" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1455" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="138.7" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="169.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, unsigned int) (1 samples, 0.229%)</title><rect x="1435.8" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="165.8" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1337.5" ></text>
</g>
<g >
<title>IsStandardConversion(clang::Sema&amp;, clang::Expr*, clang::QualType, bool, clang::StandardConversionSequence&amp;, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1471" width="3.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1438.81" y="1481.5" ></text>
</g>
<g >
<title>WrapperCall(long, unsigned long, void*, void*, void*) (4 samples, 0.915%)</title><rect x="128.5" y="1919" width="13.6" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="131.54" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1300.3" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1305.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (1 samples, 0.229%)</title><rect x="121.8" y="655" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1007" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1017.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction(llvm::Function&amp;) [clone .part.0] (4 samples, 0.915%)</title><rect x="213.2" y="1615" width="13.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="216.20" y="1625.5" ></text>
</g>
<g >
<title>AddOverloadedCallCandidate(clang::Sema&amp;, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="159" width="3.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1438.81" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1017.5" ></text>
</g>
<g >
<title>clang::ASTContext::getRValueReferenceType(clang::QualType) const (1 samples, 0.229%)</title><rect x="1412.1" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1199" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1209.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallToMemberFunction(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1232.6" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1545.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::Next() (2 samples, 0.458%)</title><rect x="84.5" y="1951" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="87.51" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="703" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="713.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (1 samples, 0.229%)</title><rect x="1418.9" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="329.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1167" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="799" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1049.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1415.5" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1695" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (3 samples, 0.686%)</title><rect x="169.2" y="1615" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1625.5" ></text>
</g>
<g >
<title>Cppyy::GetMethodResultType[abi:cxx11](long) (1 samples, 0.229%)</title><rect x="1168.3" y="1951" width="3.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1171.26" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="825.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext(clang::CXXScopeSpec&amp;, clang::DeclContext*&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1401.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1705.5" ></text>
</g>
<g >
<title>WrapperCall(long, unsigned long, void*, void*, void*) (1 samples, 0.229%)</title><rect x="1171.6" y="1935" width="3.4" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="1174.65" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1359" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1369.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1418.9" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1375" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1039" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="559" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="569.5" ></text>
</g>
<g >
<title>CPyCppyy::meta_getattro(_object*, _object*) (3 samples, 0.686%)</title><rect x="1229.2" y="2015" width="10.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1232.22" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1471" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1481.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="1412.1" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="479" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="175" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1215" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1839" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg(clang::CodeGen::CallArgList&amp;, clang::Expr const*, clang::QualType) (5 samples, 1.144%)</title><rect x="101.4" y="1327" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1432.4" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="169.2" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (8 samples, 1.831%)</title><rect x="101.4" y="1631" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1641.5" >cl..</text>
</g>
<g >
<title>CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) [clone .isra.0] (9 samples, 2.059%)</title><rect x="1175.0" y="1951" width="30.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1178.03" y="1961.5" >CPy..</text>
</g>
<g >
<title>clang::declvisitor::Base&lt;std::add_pointer, clang::ASTDeclReader, void&gt;::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="1337.6" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1198.7" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1855" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="148.9" y="1583" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1181.8" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1422.3" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="457.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (4 samples, 0.915%)</title><rect x="54.0" y="1695" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="121.8" y="1183" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (3 samples, 0.686%)</title><rect x="1181.8" y="1695" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1415.5" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr(clang::CXXMemberCallExpr const*, clang::CodeGen::ReturnValueSlot) (1 samples, 0.229%)</title><rect x="1432.4" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1401.9" y="959" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (8 samples, 1.831%)</title><rect x="101.4" y="1663" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1673.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1455" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1412.1" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1535" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="783" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="783" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1209.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (8 samples, 1.831%)</title><rect x="101.4" y="1791" width="27.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="104.44" y="1801.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1199" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1135" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="943" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="751" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="479" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="489.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="101.4" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1371.5" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1519" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="265.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="84.5" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1381.6" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="415" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="1341.0" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1001.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions() (1 samples, 0.229%)</title><rect x="87.9" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="90.89" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1181.8" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="937.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="249.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::loadObject(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="1144.6" y="1711" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1193.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="847" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1188.6" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="671" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="857.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="1412.1" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1513.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1503" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (2 samples, 0.458%)</title><rect x="1161.5" y="1503" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1001.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument(clang::Sema&amp;, clang::TemplateDecl*, clang::SourceLocation, clang::SourceLocation, clang::TemplateTypeParmDecl*, llvm::SmallVectorImpl&lt;clang::TemplateArgument&gt;&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="1759" width="3.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1438.81" y="1769.5" ></text>
</g>
<g >
<title>clang::Sema::ConvertArgumentsForCall(clang::CallExpr*, clang::Expr*, clang::FunctionDecl*, clang::FunctionProtoType const*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, bool) (1 samples, 0.229%)</title><rect x="1236.0" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1297.0" y="1183" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1193.5" ></text>
</g>
<g >
<title>TClingCXXRecMethIter::InstantiateTemplateWithDefaults(clang::RedeclarableTemplateDecl const*) const (3 samples, 0.686%)</title><rect x="1229.2" y="1887" width="10.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1232.22" y="1897.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (9 samples, 2.059%)</title><rect x="1175.0" y="1999" width="30.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1178.03" y="2009.5" >CPy..</text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1423" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="125.1" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="591" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1412.1" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue(clang::Expr const*) (2 samples, 0.458%)</title><rect x="121.8" y="1423" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1225.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="98.1" y="1455" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1465.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (3 samples, 0.686%)</title><rect x="1229.2" y="1775" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1422.3" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1401.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1817.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (2 samples, 0.458%)</title><rect x="1144.6" y="1855" width="6.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1147.55" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1401.9" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="319" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="329.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="1232.6" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="921.5" ></text>
</g>
<g >
<title>Cppyy::CallB(long, void*, unsigned long, void*) (4 samples, 0.915%)</title><rect x="128.5" y="1935" width="13.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="131.54" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1039" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1049.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitCXXDeductionGuideDecl(clang::CXXDeductionGuideDecl*) (1 samples, 0.229%)</title><rect x="84.5" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1673.5" ></text>
</g>
<g >
<title>clang::declvisitor::Base&lt;std::add_pointer, clang::ASTDeclReader, void&gt;::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="101.4" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="543" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXNewExpr(clang::CXXNewExpr const*) (2 samples, 0.458%)</title><rect x="1181.8" y="1343" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="463" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="895" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="185.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitValueDecl(clang::ValueDecl*) (1 samples, 0.229%)</title><rect x="152.2" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1353.5" ></text>
</g>
<g >
<title>llvm::DebugLoc::get(unsigned int, unsigned int, llvm::MDNode const*, llvm::MDNode const*, bool) (1 samples, 0.229%)</title><rect x="148.9" y="1519" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="151.86" y="1529.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1455" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1465.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1071" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1081.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="991" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1001.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::bases() const (1 samples, 0.229%)</title><rect x="118.4" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1407" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1913.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1456.1" y="2015" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="2025.5" ></text>
</g>
<g >
<title>__cf_11 (293 samples, 67.048%)</title><rect x="152.2" y="1903" width="992.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="155.24" y="1913.5" >__cf_11</text>
</g>
<g >
<title>non-virtual thunk to clang::ASTReader::FinishedDeserializing() (4 samples, 0.915%)</title><rect x="67.6" y="1823" width="13.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="70.57" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="138.7" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1371.5" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1209.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc(clang::NestedNameSpecifierLoc, clang::QualType, clang::NamedDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="409.5" ></text>
</g>
<g >
<title>llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool) (1 samples, 0.229%)</title><rect x="1171.6" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.65" y="1721.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="959" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="457.5" ></text>
</g>
<g >
<title>clang::Sema::buildOverloadedCallSet(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::OverloadCandidateSet*, clang::ActionResult&lt;clang::Expr*, true&gt;*) (1 samples, 0.229%)</title><rect x="162.4" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg(clang::CodeGen::CallArgList&amp;, clang::Expr const*, clang::QualType) (1 samples, 0.229%)</title><rect x="1198.7" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="191" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="223" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="233.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get(llvm::LLVMContext&amp;, llvm::AttrBuilder const&amp;) (1 samples, 0.229%)</title><rect x="172.6" y="1407" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="175.56" y="1417.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCondition(clang::SourceLocation, clang::VarDecl*, clang::Expr*, clang::Sema::ConditionKind) (1 samples, 0.229%)</title><rect x="159.0" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="162.02" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (1 samples, 0.229%)</title><rect x="50.6" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1721.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="2031" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="143" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1429.0" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="138.7" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="329.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="50.6" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1481.5" ></text>
</g>
<g >
<title>clang::TypeLocReader::VisitElaboratedTypeLoc(clang::ElaboratedTypeLoc) (1 samples, 0.229%)</title><rect x="125.1" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="441.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup(clang::DeclarationName) const (1 samples, 0.229%)</title><rect x="1337.6" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="191" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="137.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::Read(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1423" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="87.51" y="1433.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1452.7" y="687" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="697.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1759" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1769.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitTypedefDecl(clang::TypedefDecl*) (1 samples, 0.229%)</title><rect x="1435.8" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="489.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl(clang::CXXMethodDecl*, clang::TemplateParameterList*, llvm::Optional&lt;clang::ASTTemplateArgumentListInfo const*&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="953.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="735" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="313.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="162.4" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="825.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="209.8" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1429.0" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1273.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="1391.8" y="111" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1394.78" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1001.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="569.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1913.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes(llvm::LLVMContext&amp;, unsigned int, llvm::AttrBuilder const&amp;) const (1 samples, 0.229%)</title><rect x="172.6" y="1423" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="175.56" y="1433.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="703" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="50.6" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1753.5" ></text>
</g>
<g >
<title>llvm::MDNode::dropAllReferences() (3 samples, 0.686%)</title><rect x="1313.9" y="1919" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1316.89" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1561.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) [clone .isra.0] (10 samples, 2.288%)</title><rect x="94.7" y="1967" width="33.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="97.67" y="1977.5" >CPy..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="735" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="745.5" ></text>
</g>
<g >
<title>clang::Type::isOCLExtOpaqueType() const (1 samples, 0.229%)</title><rect x="1303.7" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1081.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument(clang::Sema&amp;, clang::TemplateDecl*, clang::SourceLocation, clang::SourceLocation, clang::TemplateTypeParmDecl*, llvm::SmallVectorImpl&lt;clang::TemplateArgument&gt;&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="1199" width="3.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="165.40" y="1209.5" ></text>
</g>
<g >
<title>clang::Sema::SubstInitializer(clang::Expr*, clang::MultiLevelTemplateArgumentList const&amp;, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1535" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1347.8" y="255" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="991" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1807" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="921.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::loadObjectImpl(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="1144.6" y="1695" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1705.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarInit(clang::Expr const*, clang::ValueDecl const*, clang::CodeGen::LValue, bool) (1 samples, 0.229%)</title><rect x="1432.4" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr(clang::CallExpr const*, clang::CXXMethodDecl const*, clang::CodeGen::ReturnValueSlot, bool, clang::NestedNameSpecifier*, bool, clang::Expr const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1631" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1415.5" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1625.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&amp;) (6 samples, 1.373%)</title><rect x="179.3" y="1727" width="20.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="182.34" y="1737.5" >c..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="1071" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="367" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (1 samples, 0.229%)</title><rect x="1374.9" y="2047" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="207" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="217.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="287" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="521.5" ></text>
</g>
<g >
<title>llvm::AttributeImpl::operator&lt;(llvm::AttributeImpl const&amp;) const (1 samples, 0.229%)</title><rect x="172.6" y="1359" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="175.56" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="575" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="585.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1423" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1433.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (1 samples, 0.229%)</title><rect x="148.9" y="1791" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="151.86" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1209.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;*) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1307.1" y="1855" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1310.12" y="1865.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope(clang::TypeLoc, clang::QualType, clang::NamedDecl*, clang::CXXScopeSpec&amp;) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1232.6" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1241.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::RDefineReader::GetImpl(long long) (175 samples, 40.046%)</title><rect x="236.9" y="1711" width="592.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="239.91" y="1721.5" >ROOT::Internal::RDF::RDefineReader::GetImpl(long long)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1422.3" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1961.5" ></text>
</g>
<g >
<title>llvm::MDTuple* llvm::getUniqued&lt;llvm::MDTuple, llvm::MDNodeInfo&lt;llvm::MDTuple&gt; &gt;(llvm::DenseSet&lt;llvm::MDTuple*, llvm::MDNodeInfo&lt;llvm::MDTuple&gt; &gt;&amp;, llvm::MDNodeInfo&lt;llvm::MDTuple&gt;::KeyTy const&amp;) (1 samples, 0.229%)</title><rect x="1378.2" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1381.24" y="41.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="1231" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="351" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="125.1" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1395.2" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="591" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="601.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::createMethod(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DISubroutineType*, unsigned int, int, llvm::DIType*, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::MDTupleTypedArrayWrapper&lt;llvm::DITemplateParameter&gt;, llvm::MDTupleTypedArrayWrapper&lt;llvm::DIType&gt;) (1 samples, 0.229%)</title><rect x="1429.0" y="47" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1432.04" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1311" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1321.5" ></text>
</g>
<g >
<title>clang::SourceManager::getLineNumber(clang::FileID, unsigned int, bool*) const (4 samples, 0.915%)</title><rect x="1351.1" y="31" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="41.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getConstant(llvm::Value*, llvm::BasicBlock*, llvm::Instruction*) (1 samples, 0.229%)</title><rect x="189.5" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="192.50" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="95" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1408.7" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1177.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1147.9" y="1231" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="959" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout(clang::RecordDecl const*, llvm::StructType*) (1 samples, 0.229%)</title><rect x="118.4" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1181.8" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1177.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1359" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1300.3" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="729.5" ></text>
</g>
<g >
<title>TListOfEnums::Load() (8 samples, 1.831%)</title><rect x="54.0" y="1903" width="27.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="57.03" y="1913.5" >TL..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1609.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_dtor_wrapper(TClingClassInfo const*) (1 samples, 0.229%)</title><rect x="50.6" y="2015" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="53.64" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1231" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="383" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (6 samples, 1.373%)</title><rect x="101.4" y="1439" width="20.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1449.5" >c..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1297.0" y="1135" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1209.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="799" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1297.0" y="991" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1391.8" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="751" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="761.5" ></text>
</g>
<g >
<title>clang::Parser::ParseDeclarationStartingWithTemplate(clang::DeclaratorContext, clang::SourceLocation&amp;, clang::ParsedAttributes&amp;, clang::AccessSpecifier) (1 samples, 0.229%)</title><rect x="1337.6" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1577.5" ></text>
</g>
<g >
<title>void clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt;(clang::CodeGen::CallArgList&amp;, clang::FunctionProtoType const*, llvm::iterator_range&lt;clang::Stmt::CastIterator&lt;clang::Expr, clang::Expr const* const, clang::Stmt const* const&gt; &gt;, clang::CodeGen::CodeGenFunction::AbstractCallee, unsigned int, clang::CodeGen::CodeGenFunction::EvaluationOrder) (5 samples, 1.144%)</title><rect x="101.4" y="1359" width="17.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="104.44" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXDeleteExpr(clang::CXXDeleteExpr const*) (3 samples, 0.686%)</title><rect x="1297.0" y="1407" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1417.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1452.7" y="127" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="101.4" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="809.5" ></text>
</g>
<g >
<title>sh (4 samples, 0.915%)</title><rect x="1476.5" y="2063" width="13.5" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1479.45" y="2073.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="511" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (2 samples, 0.458%)</title><rect x="169.2" y="1535" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="713.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1171.6" y="1983" width="3.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1174.65" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr(clang::CallExpr const*, clang::CodeGen::ReturnValueSlot) (1 samples, 0.229%)</title><rect x="1198.7" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1513.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="975" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1412.1" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="473.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="575" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1897.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1378.2" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="697.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="847" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="815" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="857.5" ></text>
</g>
<g >
<title>clang::FunctionDecl const* cling::execFindFunction&lt;cling::ExprFromTypes, clang::FunctionDecl const*&gt;(clang::Parser&amp;, cling::Interpreter*, cling::LookupHelper&amp;, clang::Decl const*, llvm::StringRef, cling::ExprFromTypes::ArgsInput const&amp;, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl&lt;clang::Expr*&gt; const&amp;, clang::LookupResult&amp;, clang::DeclarationNameInfo&amp;, clang::TemplateArgumentListInfo const*, clang::ASTContext&amp;, clang::Parser&amp;, clang::Sema&amp;, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) [clone .isra.0] (3 samples, 0.686%)</title><rect x="1229.2" y="1855" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1865.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1232.6" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (2 samples, 0.458%)</title><rect x="135.3" y="1727" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="1198.7" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="921.5" ></text>
</g>
<g >
<title>CppNamespaceLookup(clang::Sema&amp;, clang::LookupResult&amp;, clang::ASTContext&amp;, clang::DeclContext*, (anonymous namespace)::UnqualUsingDirectiveSet&amp;) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="1337.6" y="1439" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1340.60" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1398.6" y="2015" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="2025.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="1435.8" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="457.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="639" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1164.9" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1785.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1087" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1097.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl(clang::RedeclarableTemplateDecl*) (1 samples, 0.229%)</title><rect x="125.1" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="569.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="84.5" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1071" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1081.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext(clang::CXXScopeSpec&amp;, clang::DeclContext*&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1791" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="831" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="729.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.229%)</title><rect x="1188.6" y="511" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1191.58" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1849.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (2 samples, 0.458%)</title><rect x="135.3" y="1759" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="138.31" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="425.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Transaction**) (1 samples, 0.229%)</title><rect x="1337.6" y="1983" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1340.60" y="1993.5" ></text>
</g>
<g >
<title>cling::Interpreter::~Interpreter() (5 samples, 1.144%)</title><rect x="1307.1" y="1967" width="17.0" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1310.12" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1065.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTopLevelDecl(clang::OpaquePtr&lt;clang::DeclGroupRef&gt;&amp;, bool) (4 samples, 0.915%)</title><rect x="152.2" y="1743" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1753.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1154.7" y="1695" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1157.71" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1103" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="873.5" ></text>
</g>
<g >
<title>llvm::LLVMContextImpl::~LLVMContextImpl() (3 samples, 0.686%)</title><rect x="1313.9" y="1935" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1316.89" y="1945.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="84.5" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="351" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="361.5" ></text>
</g>
<g >
<title>clang::Type::isImageType() const (1 samples, 0.229%)</title><rect x="1415.5" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="959" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1615" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="104.8" y="783" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="153.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;)::{lambda(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;)#1}::operator()(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;) const (1 samples, 0.229%)</title><rect x="84.5" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1193.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1599" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="751" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="761.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::emitSection(llvm::object::ObjectFile const&amp;, llvm::object::SectionRef const&amp;, bool) (1 samples, 0.229%)</title><rect x="206.4" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="209.43" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1388.4" y="1983" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="511" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1145.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind) (1 samples, 0.229%)</title><rect x="162.4" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1385.0" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="921.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="207" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (8 samples, 1.831%)</title><rect x="101.4" y="1679" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1689.5" >cl..</text>
</g>
<g >
<title>llvm::DIBuilder::createMethod(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DISubroutineType*, unsigned int, int, llvm::DIType*, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::MDTupleTypedArrayWrapper&lt;llvm::DITemplateParameter&gt;, llvm::MDTupleTypedArrayWrapper&lt;llvm::DIType&gt;) (1 samples, 0.229%)</title><rect x="1408.7" y="95" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1411.72" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="927" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="937.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="121.8" y="383" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="393.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="121.8" y="415" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1039" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="569.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (309 samples, 70.709%)</title><rect x="128.5" y="2015" width="1046.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="131.54" y="2025.5" >CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="281.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (1 samples, 0.229%)</title><rect x="145.5" y="1823" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="671" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="617.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_wrapper() (7 samples, 1.602%)</title><rect x="1175.0" y="1871" width="23.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1178.03" y="1881.5" >TC..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="441.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1103" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1113.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1412.1" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="73.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType(clang::TypeLocBuilder&amp;, clang::DependentNameTypeLoc, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1929.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (2 samples, 0.458%)</title><rect x="155.6" y="1487" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="158.63" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (3 samples, 0.686%)</title><rect x="1297.0" y="1487" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1001.5" ></text>
</g>
<g >
<title>TClass::CreateListOfDataMembers(std::atomic&lt;TListOfDataMembers*&gt;&amp;, TDictionary::EMemberSelection, bool) (2 samples, 0.458%)</title><rect x="84.5" y="1983" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="87.51" y="1993.5" ></text>
</g>
<g >
<title>CPyCppyy::meta_setattro(_object*, _object*, _object*) (2 samples, 0.458%)</title><rect x="84.5" y="2015" width="6.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="87.51" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="767" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="489.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt(clang::CompoundStmt*, bool) (1 samples, 0.229%)</title><rect x="159.0" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="162.02" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="249.5" ></text>
</g>
<g >
<title>_Fork (3 samples, 0.686%)</title><rect x="26.9" y="2047" width="10.2" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="29.93" y="2057.5" ></text>
</g>
<g >
<title>llvm::raw_ostream::write(unsigned char) (1 samples, 0.229%)</title><rect x="1391.8" y="95" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1394.78" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&amp;) (1 samples, 0.229%)</title><rect x="148.9" y="1743" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="479" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="121.8" y="927" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1631" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="165.8" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1087" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1225.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="975" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="985.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="345.5" ></text>
</g>
<g >
<title>WrapperCall(long, unsigned long, void*, void*, void*) (2 samples, 0.458%)</title><rect x="1144.6" y="1919" width="6.7" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="1147.55" y="1929.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (2 samples, 0.458%)</title><rect x="1161.5" y="1759" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1769.5" ></text>
</g>
<g >
<title>clang::ItaniumVTableContext::computeVTableRelatedInformation(clang::CXXRecordDecl const*) (1 samples, 0.229%)</title><rect x="1405.3" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1183" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getLineNumber(clang::SourceLocation) (4 samples, 0.915%)</title><rect x="1351.1" y="63" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="73.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="125.1" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="505.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="607" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="125.1" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1113.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (1 samples, 0.229%)</title><rect x="1473.1" y="2047" width="3.4" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1476.07" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="1087" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="927" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="937.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1435.8" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1551" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1561.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::loadObject(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="1144.6" y="1727" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="50.6" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1625.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="209.8" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1919" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1929.5" ></text>
</g>
<g >
<title>CPyCppyy::meta_getattro(_object*, _object*) (9 samples, 2.059%)</title><rect x="54.0" y="2015" width="30.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="57.03" y="2025.5" >CPy..</text>
</g>
<g >
<title>clang::ASTReader::loadDeclUpdateRecords(clang::ASTReader::PendingUpdateRecord&amp;) (4 samples, 0.915%)</title><rect x="67.6" y="1791" width="13.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="70.57" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="31" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="135.3" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1647" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1903" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1289.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1935" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1408.7" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="1341.0" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="153.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnits(bool) (1 samples, 0.229%)</title><rect x="1178.4" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1181.42" y="1689.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExpr(clang::Expr*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1049.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (8 samples, 1.831%)</title><rect x="209.8" y="1679" width="27.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1689.5" >ll..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="441.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::DCIter(clang::DeclContext*, cling::Interpreter*) (1 samples, 0.229%)</title><rect x="81.1" y="1919" width="3.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="84.12" y="1929.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="1175.0" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="777.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="1385.0" y="319" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1388.01" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1401.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1202.1" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1641.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1388.4" y="991" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1615" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1775" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (2 samples, 0.458%)</title><rect x="1181.8" y="1263" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1273.5" ></text>
</g>
<g >
<title>llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::finalize() (1 samples, 0.229%)</title><rect x="94.7" y="1759" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1081.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="863" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="873.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1129.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::FindKey(llvm::StringRef) const (1 samples, 0.229%)</title><rect x="196.3" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="199.27" y="1609.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1055" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1279" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1049.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1023" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="297.5" ></text>
</g>
<g >
<title>llvm::DISubprogram::getImpl(llvm::LLVMContext&amp;, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1161.5" y="911" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1164.49" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionProlog(clang::CodeGen::CGFunctionInfo const&amp;, llvm::Function*, clang::CodeGen::FunctionArgList const&amp;) (1 samples, 0.229%)</title><rect x="1192.0" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="169.2" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1481.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1481.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (1 samples, 0.229%)</title><rect x="1198.7" y="1743" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1201.74" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="1167" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1177.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (5 samples, 1.144%)</title><rect x="1181.8" y="1775" width="16.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1184.81" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1033.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr(clang::CallExpr*) (1 samples, 0.229%)</title><rect x="1435.8" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1471" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="729.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="223" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="233.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="98.1" y="1215" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="138.7" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="265.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnit() (4 samples, 0.915%)</title><rect x="152.2" y="1727" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="697.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="121.8" y="447" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1422.3" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1455" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="815" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="377.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule(llvm::Module&amp;) (7 samples, 1.602%)</title><rect x="213.2" y="1647" width="23.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="216.20" y="1657.5" >ll..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1129.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::InitializeFrom(clang::Sema&amp;, clang::InitializedEntity const&amp;, clang::InitializationKind const&amp;, llvm::MutableArrayRef&lt;clang::Expr*&gt;, bool, bool) (1 samples, 0.229%)</title><rect x="162.4" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="633.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::getOrCreateTypeArray(llvm::ArrayRef&lt;llvm::Metadata*&gt;) (1 samples, 0.229%)</title><rect x="165.8" y="1055" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="168.79" y="1065.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (4 samples, 0.915%)</title><rect x="54.0" y="1775" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1071" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="138.7" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1401.9" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1401.5" ></text>
</g>
<g >
<title>TryImplicitConversion(clang::Sema&amp;, clang::Expr*, clang::QualType, bool, bool, bool, bool, bool, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1311" width="3.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="165.40" y="1321.5" ></text>
</g>
<g >
<title>MarkUsedTemplateParameters(clang::ASTContext&amp;, clang::QualType, bool, unsigned int, llvm::SmallBitVector&amp;) (1 samples, 0.229%)</title><rect x="1236.0" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="2009.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (2 samples, 0.458%)</title><rect x="1175.0" y="1775" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1279" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="169.2" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (2 samples, 0.458%)</title><rect x="1161.5" y="1743" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="959" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr(clang::CallExpr const*, clang::CXXMethodDecl const*, clang::CodeGen::ReturnValueSlot, bool, clang::NestedNameSpecifier*, bool, clang::Expr const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1753.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (2 samples, 0.458%)</title><rect x="1290.2" y="1887" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="735" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (2 samples, 0.458%)</title><rect x="135.3" y="1343" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1993.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1039" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1583" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1593.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (3 samples, 0.686%)</title><rect x="1297.0" y="1823" width="10.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1299.96" y="1833.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (2 samples, 0.458%)</title><rect x="1175.0" y="1807" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1855" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1839" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (5 samples, 1.144%)</title><rect x="1347.8" y="1951" width="16.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1977.5" ></text>
</g>
<g >
<title>Cppyy::CallR(long, void*, unsigned long, void*) (1 samples, 0.229%)</title><rect x="1171.6" y="1951" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1174.65" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="441.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmVarDecl(clang::ParmVarDecl*, clang::MultiLevelTemplateArgumentList const&amp;, int, llvm::Optional&lt;unsigned int&gt;, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="879" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (2 samples, 0.458%)</title><rect x="1161.5" y="1551" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1561.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::RegDefIter::Advance() (1 samples, 0.229%)</title><rect x="220.0" y="1503" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="222.98" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="601.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (10 samples, 2.288%)</title><rect x="94.7" y="1983" width="33.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="97.67" y="1993.5" >CPy..</text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="719" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="729.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="591" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="601.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="98.1" y="767" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="777.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="543" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1391" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1417.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadedCallCandidates(clang::UnresolvedLookupExpr*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1481.5" ></text>
</g>
<g >
<title>void ROOT::Internal::RDF::RAction&lt;ROOT::Internal::RDF::SumHelper&lt;double&gt;, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList&lt;int&gt; &gt;::CallExec&lt;int, 0ul&gt;(unsigned int, long long, ROOT::TypeTraits::TypeList&lt;int&gt;, std::integer_sequence&lt;unsigned long, 0ul&gt;) (268 samples, 61.327%)</title><rect x="236.9" y="1807" width="907.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="239.91" y="1817.5" >void ROOT::Internal::RDF::RAction&lt;ROOT::Internal::RDF::SumHelper&lt;double&gt;, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList&lt;int&gt; &gt;::CallExec&lt;int..</text>
</g>
<g >
<title>llvm::RuntimeDyld::loadObject(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="94.7" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1395.2" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1297.0" y="1231" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1625.5" ></text>
</g>
<g >
<title>clang::declvisitor::Base&lt;std::add_pointer, clang::ASTDeclReader, void&gt;::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="121.8" y="527" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1721.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnits(bool) (1 samples, 0.229%)</title><rect x="1151.3" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="601.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (5 samples, 1.144%)</title><rect x="152.2" y="1759" width="17.0" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="155.24" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="335" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="345.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (1 samples, 0.229%)</title><rect x="1202.1" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1188.6" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="985.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="84.5" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1865.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="162.4" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1071" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1081.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (1 samples, 0.229%)</title><rect x="94.7" y="1791" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="527" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="537.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="233.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1359" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1369.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="447" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="457.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1263" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1273.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocatedSection(llvm::object::DataRefImpl) const (1 samples, 0.229%)</title><rect x="206.4" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="209.43" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (3 samples, 0.686%)</title><rect x="1297.0" y="1455" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1215" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (3 samples, 0.686%)</title><rect x="1181.8" y="1647" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="73.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord(llvm::BitstreamCursor&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="87.9" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="90.89" y="1801.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="1290.2" y="1823" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1871" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1839" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1033.5" ></text>
</g>
<g >
<title>CPyCppyy::BindCppObjectNoCast(void*, unsigned long, unsigned int) (2 samples, 0.458%)</title><rect x="1198.7" y="1935" width="6.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1201.74" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1593.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType(clang::TypeLocBuilder&amp;, clang::TemplateSpecializationTypeLoc, clang::TemplateName) (1 samples, 0.229%)</title><rect x="1232.6" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1807" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1817.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSymbolName(llvm::object::DataRefImpl) const (1 samples, 0.229%)</title><rect x="94.7" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1689.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifier(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="84.5" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1391.8" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1371.5" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1401.9" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="425.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1721.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1359" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="159" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="169.5" ></text>
</g>
<g >
<title>TryConstructorInitialization(clang::Sema&amp;, clang::InitializedEntity const&amp;, clang::InitializationKind const&amp;, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::QualType, clang::QualType, clang::InitializationSequence&amp;, bool, bool) (1 samples, 0.229%)</title><rect x="162.4" y="607" width="3.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="165.40" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="415" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1368.1" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1641.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1147.9" y="1215" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1567" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1049.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;)::{lambda(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;)#1}::operator()(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;) const (4 samples, 0.915%)</title><rect x="54.0" y="1807" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="383" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="393.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="297.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&amp;) (1 samples, 0.229%)</title><rect x="179.3" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="182.34" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1065.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformStmt(clang::Stmt*, clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::StmtDiscardKind) (1 samples, 0.229%)</title><rect x="1232.6" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1388.4" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1049.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (1 samples, 0.229%)</title><rect x="125.1" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="809.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1171.6" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.65" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="125.1" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitFunctionStart(clang::GlobalDecl, clang::SourceLocation, clang::SourceLocation, clang::QualType, llvm::Function*, bool, clang::CodeGen::CGBuilderTy&amp;) (1 samples, 0.229%)</title><rect x="175.9" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="178.95" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="975" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1727" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1737.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="943" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="601.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1215" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1225.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (1 samples, 0.229%)</title><rect x="50.6" y="1919" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="53.64" y="1929.5" ></text>
</g>
<g >
<title>runImpl(llvm::Function&amp;, llvm::LazyValueInfo*, llvm::DominatorTree*, llvm::SimplifyQuery const&amp;) (1 samples, 0.229%)</title><rect x="189.5" y="1679" width="3.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="192.50" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (2 samples, 0.458%)</title><rect x="169.2" y="1567" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1577.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions() (1 samples, 0.229%)</title><rect x="1229.2" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="125.1" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="889.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="98.1" y="655" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="665.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RDefine&lt;int (*)(int, int), ROOT::Detail::RDF::CustomColExtraArgs::None&gt;::Update(unsigned int, long long) (268 samples, 61.327%)</title><rect x="236.9" y="1759" width="907.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="239.91" y="1769.5" >ROOT::Detail::RDF::RDefine&lt;int (*)(int, int), ROOT::Detail::RDF::CustomColExtraArgs::None&gt;::Update(unsigned int, long long)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="895" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="905.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit(clang::Stmt*) (1 samples, 0.229%)</title><rect x="1198.7" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="831" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1087" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1385.0" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::EnumType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="159" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="169.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="447" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="457.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1161.5" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1081.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::Read(unsigned int) (1 samples, 0.229%)</title><rect x="64.2" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="67.19" y="1657.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (2 samples, 0.458%)</title><rect x="135.3" y="1743" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1368.1" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (3 samples, 0.686%)</title><rect x="1297.0" y="1743" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::endModule() (1 samples, 0.229%)</title><rect x="209.8" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1871" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1177.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord(llvm::BitstreamCursor&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="1229.2" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (3 samples, 0.686%)</title><rect x="1297.0" y="1711" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="165.8" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1673.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="777.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnits(bool) (1 samples, 0.229%)</title><rect x="145.5" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="1429.0" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="2057.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1039" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="777.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="751" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1647" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1087" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (3 samples, 0.686%)</title><rect x="1181.8" y="1711" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (5 samples, 1.144%)</title><rect x="101.4" y="1119" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1593.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1171.6" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.65" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="713.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="1364.7" y="31" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1367.69" y="41.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1167" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1023" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1164.9" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="969.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1503" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1711" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1721.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="879" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1503" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1297.0" y="1199" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1209.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::Read(unsigned int) (3 samples, 0.686%)</title><rect x="108.2" y="591" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="111.22" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1305.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::endModule() (2 samples, 0.458%)</title><rect x="1151.3" y="1727" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1737.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="1229.2" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1097.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateStaticMemberDIE(llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1759" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1183" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1503" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1513.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool, bool) (1 samples, 0.229%)</title><rect x="1236.0" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (1 samples, 0.229%)</title><rect x="50.6" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="2009.5" ></text>
</g>
<g >
<title>CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (5 samples, 1.144%)</title><rect x="1290.2" y="2015" width="16.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1293.18" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="767" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="777.5" ></text>
</g>
<g >
<title>void clang::ASTDeclReader::mergeRedeclarable&lt;clang::RedeclarableTemplateDecl&gt;(clang::Redeclarable&lt;clang::RedeclarableTemplateDecl&gt;*, clang::ASTDeclReader::RedeclarableResult&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="1337.6" y="1279" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1340.60" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="991" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1881.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1519" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1631" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="121.5" ></text>
</g>
<g >
<title>waste_time() (93 samples, 21.281%)</title><rect x="829.6" y="1727" width="315.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="832.59" y="1737.5" >waste_time()</text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="209.8" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="281.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="1418.9" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1423" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1433.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitNamedDecl(clang::NamedDecl*) (1 samples, 0.229%)</title><rect x="152.2" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="2015" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="2025.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DILocation&gt;, llvm::detail::DenseSetPair&lt;llvm::DILocation*&gt; &gt;::grow(unsigned int) (1 samples, 0.229%)</title><rect x="148.9" y="1471" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="151.86" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="505.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (2 samples, 0.458%)</title><rect x="84.5" y="2031" width="6.8" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="87.51" y="2041.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1423" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1164.9" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (1 samples, 0.229%)</title><rect x="165.8" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="809.5" ></text>
</g>
<g >
<title>llvm::MDTuple* llvm::getUniqued&lt;llvm::MDTuple, llvm::MDNodeInfo&lt;llvm::MDTuple&gt; &gt;(llvm::DenseSet&lt;llvm::MDTuple*, llvm::MDNodeInfo&lt;llvm::MDTuple&gt; &gt;&amp;, llvm::MDNodeInfo&lt;llvm::MDTuple&gt;::KeyTy const&amp;) (1 samples, 0.229%)</title><rect x="165.8" y="1023" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="168.79" y="1033.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="1456.1" y="63" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="73.5" ></text>
</g>
<g >
<title>llvm::DemandedBits::isInstructionDead(llvm::Instruction*) (1 samples, 0.229%)</title><rect x="182.7" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="185.72" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="959" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1417.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1279" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1743" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="825.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (1 samples, 0.229%)</title><rect x="50.6" y="1903" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="53.64" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1023" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1033.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction(cling::Transaction&amp;) (6 samples, 1.373%)</title><rect x="179.3" y="1743" width="20.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="182.34" y="1753.5" >c..</text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (2 samples, 0.458%)</title><rect x="84.5" y="1887" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1865.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&amp;, _object*, _object*, CPyCppyy::CallContext*) (308 samples, 70.481%)</title><rect x="128.5" y="1999" width="1043.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="131.54" y="2009.5" >CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&amp;, _object*, _object*, CPyCppyy::CallContext*)</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="50.6" y="31" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1432.4" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="425.5" ></text>
</g>
<g >
<title>clang::Sema::SetCtorInitializers(clang::CXXConstructorDecl*, bool, llvm::ArrayRef&lt;clang::CXXCtorInitializer*&gt;) (1 samples, 0.229%)</title><rect x="1229.2" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1391.8" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="793.5" ></text>
</g>
<g >
<title>TCling::MethodInfo_Factory(ClassInfo_t*) const (1 samples, 0.229%)</title><rect x="81.1" y="1951" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="84.12" y="1961.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="121.8" y="559" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="569.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="101.4" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="172.6" y="1503" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="175.56" y="1513.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1178.4" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1181.42" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1337.5" ></text>
</g>
<g >
<title>clang::Parser::ParseDeclaration(clang::DeclaratorContext, clang::SourceLocation&amp;, clang::Parser::ParsedAttributesWithRange&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1017.5" ></text>
</g>
<g >
<title>_PyObject_Call (10 samples, 2.288%)</title><rect x="94.7" y="2031" width="33.8" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="97.67" y="2041.5" >_Py..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1727" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1199" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1119" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1300.3" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1017.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="377.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1935" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1945.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="155.6" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="158.63" y="1481.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDecltypeType(clang::TypeLocBuilder&amp;, clang::DecltypeTypeLoc) (1 samples, 0.229%)</title><rect x="1435.8" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="937.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain(clang::Decl const*) (1 samples, 0.229%)</title><rect x="118.4" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="639" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="745.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1871" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="543" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1705.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind) (1 samples, 0.229%)</title><rect x="162.4" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1449.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (3 samples, 0.686%)</title><rect x="1151.3" y="1743" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1103" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1113.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="145.5" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="148.9" y="1599" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXNewExpr(clang::CXXNewExpr const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1433.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateTypeParmDecl(clang::TemplateTypeParmDecl*) (1 samples, 0.229%)</title><rect x="101.4" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="553.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1167" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1615" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (2 samples, 0.458%)</title><rect x="1161.5" y="1679" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="1188.6" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1567" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1425.7" y="687" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1432.4" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="2025.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (3 samples, 0.686%)</title><rect x="152.2" y="1567" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="681.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (11 samples, 2.517%)</title><rect x="199.7" y="1727" width="37.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1737.5" >llvm..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="633.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="159" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1418.9" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="601.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::loadObjectImpl(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="128.5" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1705.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::loadObject(llvm::object::ObjectFile const&amp;) (3 samples, 0.686%)</title><rect x="199.7" y="1631" width="10.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1641.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitDeclRefExpr(clang::DeclRefExpr*) (1 samples, 0.229%)</title><rect x="152.2" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1449.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (1 samples, 0.229%)</title><rect x="1412.1" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1593.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="162.4" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1673.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions() (4 samples, 0.915%)</title><rect x="67.6" y="1807" width="13.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="70.57" y="1817.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI(llvm::Function const&amp;) (1 samples, 0.229%)</title><rect x="179.3" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="182.34" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="943" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="953.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::computeSizeAndOffsets() (1 samples, 0.229%)</title><rect x="142.1" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1408.7" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="703" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="713.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1407" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1417.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1147.9" y="1199" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (2 samples, 0.458%)</title><rect x="1161.5" y="1711" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1415.5" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1300.3" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="793.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (1 samples, 0.229%)</title><rect x="1229.2" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1305.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTopLevelDecl(clang::OpaquePtr&lt;clang::DeclGroupRef&gt;&amp;, bool) (1 samples, 0.229%)</title><rect x="1337.6" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1535" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="125.1" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="287" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1401.9" y="911" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1609.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="152.2" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1388.4" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="361.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitStaticAssertDecl(clang::StaticAssertDecl*) (1 samples, 0.229%)</title><rect x="1418.9" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="127" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1897.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="81.1" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1753.5" ></text>
</g>
<g >
<title>TCling::LoadText(char const*) const (1 samples, 0.229%)</title><rect x="1337.6" y="1999" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1340.60" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1183" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="165.8" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (3 samples, 0.686%)</title><rect x="1297.0" y="1775" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1785.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::InitNumRegDefsLeft(llvm::SUnit*) (1 samples, 0.229%)</title><rect x="220.0" y="1519" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="222.98" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="1967" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1977.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI(llvm::Function const&amp;) (1 samples, 0.229%)</title><rect x="233.5" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="236.52" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1689.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1007" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="172.6" y="1519" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="175.56" y="1529.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="1167" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="1432.4" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="1432.4" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (1 samples, 0.229%)</title><rect x="1188.6" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1353.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind) (1 samples, 0.229%)</title><rect x="1435.8" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1855" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1865.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&amp;) (2 samples, 0.458%)</title><rect x="135.3" y="1839" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="138.31" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="527" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="537.5" ></text>
</g>
<g >
<title>cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (5 samples, 1.144%)</title><rect x="1181.8" y="1839" width="16.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1184.81" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1465.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup(clang::DeclarationName) const (1 samples, 0.229%)</title><rect x="162.4" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1388.4" y="1919" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1929.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="98.1" y="1551" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1561.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (2 samples, 0.458%)</title><rect x="1290.2" y="1855" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="457.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Transaction**) (2 samples, 0.458%)</title><rect x="1161.5" y="1839" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1164.49" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1759" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1769.5" ></text>
</g>
<g >
<title>WrapperCall(long, unsigned long, void*, void*, void*) (295 samples, 67.506%)</title><rect x="145.5" y="1919" width="999.1" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="148.47" y="1929.5" >WrapperCall(long, unsigned long, void*, void*, void*)</text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (1 samples, 0.229%)</title><rect x="1198.7" y="1759" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1201.74" y="1769.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="425.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord(llvm::BitstreamCursor&amp;, unsigned int) (4 samples, 0.915%)</title><rect x="54.0" y="1679" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1055" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1378.2" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="841.5" ></text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, clang::CXXRecordDecl*, clang::Qualifiers) (1 samples, 0.229%)</title><rect x="1435.8" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (1 samples, 0.229%)</title><rect x="1198.7" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1257.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (1 samples, 0.229%)</title><rect x="1229.2" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1609.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Transaction**) (2 samples, 0.458%)</title><rect x="135.3" y="1823" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="138.31" y="1833.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1295" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1185.2" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="793.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (2 samples, 0.458%)</title><rect x="135.3" y="1663" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="559" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="569.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind) (1 samples, 0.229%)</title><rect x="1236.0" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1577.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (1 samples, 0.229%)</title><rect x="101.4" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (1 samples, 0.229%)</title><rect x="50.6" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1183" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1405.3" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TemplateSpecializationType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1371.5" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1759" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (2 samples, 0.458%)</title><rect x="135.3" y="1503" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1215" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1395.2" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="329.5" ></text>
</g>
<g >
<title>llvm::DIExpression::getFragmentInfo(llvm::DIExpression::expr_op_iterator, llvm::DIExpression::expr_op_iterator) (1 samples, 0.229%)</title><rect x="216.6" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="219.59" y="1609.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="863" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="873.5" ></text>
</g>
<g >
<title>clone3 (15 samples, 3.432%)</title><rect x="1239.4" y="2031" width="50.8" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1242.38" y="2041.5" >clone3</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="911" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="799" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1297.0" y="1247" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1401.9" y="1967" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1388.4" y="1967" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1378.2" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1577.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo(llvm::Function const&amp;) (1 samples, 0.229%)</title><rect x="179.3" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="182.34" y="1641.5" ></text>
</g>
<g >
<title>clang::Parser::ParseParenExpression(clang::Parser::ParenParseOption&amp;, bool, bool, clang::OpaquePtr&lt;clang::QualType&gt;&amp;, clang::SourceLocation&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1919" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1929.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit(clang::Stmt*) (1 samples, 0.229%)</title><rect x="50.6" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="665.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1311" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="463" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="969.5" ></text>
</g>
<g >
<title>HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&amp;, cling::Value*) (2 samples, 0.458%)</title><rect x="1198.7" y="1823" width="6.8" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1201.74" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="911" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="921.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&amp;, void*&amp;) (1 samples, 0.229%)</title><rect x="121.8" y="335" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="124.76" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1289.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="1175.0" y="1727" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1039" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="841.5" ></text>
</g>
<g >
<title>cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (8 samples, 1.831%)</title><rect x="101.4" y="1871" width="27.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="104.44" y="1881.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1135" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCastLValue(clang::CastExpr const*) (5 samples, 1.144%)</title><rect x="101.4" y="1279" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1353.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1871" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1407" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1689.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="209.8" y="1519" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1545.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt(clang::Stmt*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="649.5" ></text>
</g>
<g >
<title>clang::Sema::LookupName(clang::LookupResult&amp;, clang::Scope*, bool) (1 samples, 0.229%)</title><rect x="1337.6" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1295" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1305.5" ></text>
</g>
<g >
<title>llvm::MDNode::setOperand(unsigned int, llvm::Metadata*) (2 samples, 0.458%)</title><rect x="1317.3" y="1903" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1320.28" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1593.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="81.1" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1705.5" ></text>
</g>
<g >
<title>TClingClassInfo::Destruct(void*, ROOT::TMetaUtils::TNormalizedCtxt const&amp;) const (5 samples, 1.144%)</title><rect x="1290.2" y="1983" width="16.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1293.18" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (2 samples, 0.458%)</title><rect x="135.3" y="1487" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="1935" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="271" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue(clang::Expr const*) (5 samples, 1.144%)</title><rect x="101.4" y="1263" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1273.5" ></text>
</g>
<g >
<title>clang::SourceManager::getPresumedLoc(clang::SourceLocation, bool) const (1 samples, 0.229%)</title><rect x="1388.4" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="135.3" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1388.4" y="1999" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="159" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="111" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1303.7" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1398.6" y="351" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1199" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="617.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="1435.8" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1961.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::endModule() (1 samples, 0.229%)</title><rect x="145.5" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="783" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1188.6" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="681.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="121.8" y="607" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1545.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::processRelocationRef(unsigned int, llvm::object::content_iterator&lt;llvm::object::RelocationRef&gt;, llvm::object::ObjectFile const&amp;, std::map&lt;llvm::object::SectionRef, unsigned int, std::less&lt;llvm::object::SectionRef&gt;, std::allocator&lt;std::pair&lt;llvm::object::SectionRef const, unsigned int&gt; &gt; &gt;&amp;, std::map&lt;llvm::RelocationValueRef, unsigned long, std::less&lt;llvm::RelocationValueRef&gt;, std::allocator&lt;std::pair&lt;llvm::RelocationValueRef const, unsigned long&gt; &gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="128.5" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="511" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="521.5" ></text>
</g>
<g >
<title>llvm::DISubprogram::getImpl(llvm::LLVMContext&amp;, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1408.7" y="79" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1411.72" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1417.5" ></text>
</g>
<g >
<title>StoreAnyExprIntoOneUnit(clang::CodeGen::CodeGenFunction&amp;, clang::Expr const*, clang::QualType, clang::CodeGen::Address, clang::CodeGen::AggValueSlot::Overlap_t) [clone .constprop.0] (2 samples, 0.458%)</title><rect x="135.3" y="1423" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="138.31" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1609.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1497.5" ></text>
</g>
<g >
<title>clang::Sema::LookupConstructors(clang::CXXRecordDecl*, llvm::SmallVectorImpl&lt;clang::NamedDecl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1347.8" y="303" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="313.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="175" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="185.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1151.3" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1689.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSectionName(llvm::object::DataRefImpl) const (1 samples, 0.229%)</title><rect x="199.7" y="1535" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1181.8" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1388.4" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="135.3" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1300.3" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="585.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis(llvm::Pass*) (1 samples, 0.229%)</title><rect x="1195.4" y="1679" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1198.35" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1353.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeLocBuilder&amp;, clang::TypeLoc) (1 samples, 0.229%)</title><rect x="162.4" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1385.0" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="761.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="783" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1371.5" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1295" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1305.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttribute(llvm::LLVMContext&amp;, unsigned int, llvm::Attribute) const (1 samples, 0.229%)</title><rect x="172.6" y="1439" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="175.56" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1951" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (1 samples, 0.229%)</title><rect x="1429.0" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="559" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="1023" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="137.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1439" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1449.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (1 samples, 0.229%)</title><rect x="128.5" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (1 samples, 0.229%)</title><rect x="50.6" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="175" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="937.5" ></text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (1 samples, 0.229%)</title><rect x="1144.6" y="1775" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="543" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="553.5" ></text>
</g>
<g >
<title>llvm::ReplaceableMetadataImpl::getIfExists(llvm::Metadata&amp;) (1 samples, 0.229%)</title><rect x="1320.7" y="1887" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1323.66" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1198.7" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1647" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1657.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr(clang::DependentScopeDeclRefExpr*, bool, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1435.8" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="393.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::InstanceRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (1 samples, 0.229%)</title><rect x="1171.6" y="1967" width="3.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1174.65" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="329.5" ></text>
</g>
<g >
<title>llvm::Module::getNamedValue(llvm::StringRef) const (1 samples, 0.229%)</title><rect x="196.3" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="199.27" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="649.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="1418.9" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="1347.8" y="1967" width="16.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1977.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReturnStmt(clang::ReturnStmt*) (1 samples, 0.229%)</title><rect x="1236.0" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1161.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1183" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="1055" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="1199" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1209.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions const&amp;, cling::Transaction**) const (1 samples, 0.229%)</title><rect x="50.6" y="1935" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="53.64" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (1 samples, 0.229%)</title><rect x="50.6" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall(clang::CXXConstructorDecl const*, clang::CXXCtorType, bool, bool, clang::CodeGen::AggValueSlot, clang::CXXConstructExpr const*) (5 samples, 1.144%)</title><rect x="101.4" y="1375" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="633.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="719" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="233.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (3 samples, 0.686%)</title><rect x="152.2" y="1519" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1497.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1151" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1164.9" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="135.3" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1823" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="889.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="543" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="553.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1147.9" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1785.5" ></text>
</g>
<g >
<title>clang::Sema::DefineImplicitDefaultConstructor(clang::SourceLocation, clang::CXXConstructorDecl*) (1 samples, 0.229%)</title><rect x="1229.2" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (2 samples, 0.458%)</title><rect x="135.3" y="1535" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (3 samples, 0.686%)</title><rect x="1418.9" y="2015" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="1429.0" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="927" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="937.5" ></text>
</g>
<g >
<title>llvm::Function::addAttribute(unsigned int, llvm::Attribute) (1 samples, 0.229%)</title><rect x="172.6" y="1455" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="175.56" y="1465.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="457.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSectionName(llvm::object::Elf_Shdr_Impl&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt; const*) const (1 samples, 0.229%)</title><rect x="199.7" y="1519" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="505.5" ></text>
</g>
<g >
<title>llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::finalize() (1 samples, 0.229%)</title><rect x="1144.6" y="1743" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1753.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis(llvm::Pass*) (2 samples, 0.458%)</title><rect x="226.8" y="1615" width="6.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="229.75" y="1625.5" ></text>
</g>
<g >
<title>clang::Sema::buildOverloadedCallSet(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::OverloadCandidateSet*, clang::ActionResult&lt;clang::Expr*, true&gt;*) (1 samples, 0.229%)</title><rect x="1435.8" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="575" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1561.5" ></text>
</g>
<g >
<title>llvm::DISubroutineType::getImpl(llvm::LLVMContext&amp;, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1185.2" y="159" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1188.19" y="169.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc(clang::NestedNameSpecifierLoc, clang::QualType, clang::NamedDecl*) (1 samples, 0.229%)</title><rect x="1232.6" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1823" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (2 samples, 0.458%)</title><rect x="135.3" y="1327" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1337.5" ></text>
</g>
<g >
<title>CPyCppyy::AddPropertyToClass(_object*, unsigned long, unsigned long) (2 samples, 0.458%)</title><rect x="1198.7" y="1887" width="6.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1201.74" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="703" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="713.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="671" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="681.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1439" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1449.5" ></text>
</g>
<g >
<title>Cppyy::CallR(long, void*, unsigned long, void*) (2 samples, 0.458%)</title><rect x="1144.6" y="1935" width="6.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1147.55" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1415.5" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (2 samples, 0.458%)</title><rect x="135.3" y="1551" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1561.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType(clang::ElaboratedTypeKeyword, clang::SourceLocation, clang::NestedNameSpecifierLoc, clang::IdentifierInfo const&amp;, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1232.6" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1711" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="889.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadedCallCandidates(clang::UnresolvedLookupExpr*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="969.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (2 samples, 0.458%)</title><rect x="94.7" y="1807" width="6.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1951" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="537.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1247" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1545.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (4 samples, 0.915%)</title><rect x="54.0" y="1791" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1801.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="125.1" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1327" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1337.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitStaticAssertDecl(clang::StaticAssertDecl*) (1 samples, 0.229%)</title><rect x="1435.8" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="135.3" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1181.8" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1300.3" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="745.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) [clone .isra.0] (307 samples, 70.252%)</title><rect x="128.5" y="1967" width="1039.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="131.54" y="1977.5" >CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) [clone .isra.0]</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1241.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="1175.0" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1641.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPDataMember::Set(unsigned long, unsigned long) (2 samples, 0.458%)</title><rect x="1198.7" y="1871" width="6.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1201.74" y="1881.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (11 samples, 2.517%)</title><rect x="199.7" y="1711" width="37.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="202.66" y="1721.5" >std:..</text>
</g>
<g >
<title>TEnum::GetEnum(char const*, TEnum::ESearchAction) (8 samples, 1.831%)</title><rect x="54.0" y="1951" width="27.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="57.03" y="1961.5" >TE..</text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1164.9" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="985.5" ></text>
</g>
<g >
<title>clang::Sema::BuildVariableInstantiation(clang::VarDecl*, clang::VarDecl*, clang::MultiLevelTemplateArgumentList const&amp;, llvm::SmallVector&lt;clang::Sema::LateInstantiatedAttribute, 16u&gt;*, clang::DeclContext*, clang::LocalInstantiationScope*, bool, clang::VarTemplateSpecializationDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (3 samples, 0.686%)</title><rect x="1297.0" y="1551" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="50.6" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (3 samples, 0.686%)</title><rect x="1297.0" y="1615" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1609.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (2 samples, 0.458%)</title><rect x="1290.2" y="1711" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1429.0" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="137.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1229.2" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="991" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1181.8" y="1215" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1231" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1769.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1689.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1865.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (1 samples, 0.229%)</title><rect x="179.3" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="182.34" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1371.5" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="713.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1300.3" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1049.5" ></text>
</g>
<g >
<title>TCling::LoadEnums(TListOfEnums&amp;) const (8 samples, 1.831%)</title><rect x="54.0" y="1887" width="27.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="57.03" y="1897.5" >TC..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1412.1" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="297.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&amp;) (1 samples, 0.229%)</title><rect x="148.9" y="1839" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="151.86" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1209.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;)::{lambda(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;)#1}::operator()(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;) const (1 samples, 0.229%)</title><rect x="1418.9" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1823" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1368.1" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1081.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext(clang::CXXScopeSpec&amp;, clang::DeclContext*&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="361.5" ></text>
</g>
<g >
<title>clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&amp;, clang::ParsingDeclSpec*) (1 samples, 0.229%)</title><rect x="1337.6" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1913.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.229%)</title><rect x="23.5" y="2047" width="3.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="26.55" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="761.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="98.1" y="1775" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1432.4" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1433.5" ></text>
</g>
<g >
<title>void clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt;(clang::CodeGen::CallArgList&amp;, clang::FunctionProtoType const*, llvm::iterator_range&lt;clang::Stmt::CastIterator&lt;clang::Expr, clang::Expr const* const, clang::Stmt const* const&gt; &gt;, clang::CodeGen::CodeGenFunction::AbstractCallee, unsigned int, clang::CodeGen::CodeGenFunction::EvaluationOrder) (1 samples, 0.229%)</title><rect x="165.8" y="1487" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="168.79" y="1497.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSymbolType(llvm::object::DataRefImpl) const (1 samples, 0.229%)</title><rect x="128.5" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="825.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Transaction**) (3 samples, 0.686%)</title><rect x="1297.0" y="1887" width="10.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1299.96" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1177.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="655" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1775" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1631" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (4 samples, 0.915%)</title><rect x="1351.1" y="1439" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1855" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1065.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="1290.2" y="1839" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1378.2" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1935" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1849.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="623" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="633.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (2 samples, 0.458%)</title><rect x="1175.0" y="1823" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1178.03" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1415.5" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="457.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeTotalAllocSize(llvm::object::ObjectFile const&amp;, unsigned long&amp;, unsigned int&amp;, unsigned long&amp;, unsigned int&amp;, unsigned long&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="203.0" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="206.04" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1311" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1378.2" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="857.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1385.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (1 samples, 0.229%)</title><rect x="145.5" y="1807" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="148.47" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1967" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1977.5" ></text>
</g>
<g >
<title>MarkExprReferenced(clang::Sema&amp;, clang::SourceLocation, clang::Decl*, clang::Expr*, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1935" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1945.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1202.1" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (5 samples, 1.144%)</title><rect x="101.4" y="927" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="223" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="233.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::computeSizeAndOffsets() (1 samples, 0.229%)</title><rect x="1175.0" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1673.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="81.1" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1657.5" ></text>
</g>
<g >
<title>clang::ASTReader::getGlobalTypeID(clang::serialization::ModuleFile&amp;, unsigned int) const (1 samples, 0.229%)</title><rect x="101.4" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1001.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="559" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="569.5" ></text>
</g>
<g >
<title>Cppyy::GetDatamemberIndex(unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (2 samples, 0.458%)</title><rect x="84.5" y="1999" width="6.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="87.51" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1567" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1689.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunEmptySource() (268 samples, 61.327%)</title><rect x="236.9" y="1839" width="907.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="239.91" y="1849.5" >ROOT::Detail::RDF::RLoopManager::RunEmptySource()</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1151" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="2031" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1164.9" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="825.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformUnresolvedLookupExpr(clang::UnresolvedLookupExpr*) (1 samples, 0.229%)</title><rect x="159.0" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="162.02" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="911" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="623" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release() (1 samples, 0.229%)</title><rect x="148.9" y="1727" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1737.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (1 samples, 0.229%)</title><rect x="1418.9" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="815" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="585.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1423" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1433.5" ></text>
</g>
<g >
<title>llvm::MDTuple::getImpl(llvm::LLVMContext&amp;, llvm::ArrayRef&lt;llvm::Metadata*&gt;, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1378.2" y="47" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1381.24" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1439" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1449.5" ></text>
</g>
<g >
<title>clang::Parser::ParseInnerNamespace(llvm::SmallVector&lt;clang::Parser::InnerNamespaceInfo, 4u&gt; const&amp;, unsigned int, clang::SourceLocation&amp;, clang::ParsedAttributes&amp;, clang::BalancedDelimiterTracker&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1663" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="623" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="633.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="207" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1185.2" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="313.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (2 samples, 0.458%)</title><rect x="128.5" y="1839" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="131.54" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="89.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="1347.8" y="127" width="3.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1350.76" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1185.2" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1257.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="162.4" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="345.5" ></text>
</g>
<g >
<title>llvm::ReplaceableMetadataImpl::isReplaceable(llvm::Metadata const&amp;) (1 samples, 0.229%)</title><rect x="1297.0" y="767" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1299.96" y="777.5" ></text>
</g>
<g >
<title>TryCopyInitialization(clang::Sema&amp;, clang::Expr*, clang::QualType, bool, bool, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1503" width="3.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1438.81" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1855" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1551" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1209.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="911" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="921.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="81.1" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1801.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument(clang::TemplateArgumentLoc const&amp;, clang::TemplateArgumentLoc&amp;, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue(clang::Expr const*) (5 samples, 1.144%)</title><rect x="101.4" y="1295" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="713.5" ></text>
</g>
<g >
<title>int&amp; ROOT::Detail::RDF::RColumnReaderBase::Get&lt;int&gt;(long long) (175 samples, 40.046%)</title><rect x="236.9" y="1727" width="592.7" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="239.91" y="1737.5" >int&amp; ROOT::Detail::RDF::RColumnReaderBase::Get&lt;int&gt;(long long)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1303.7" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="148.9" y="1679" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1273.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl(clang::RedeclarableTemplateDecl*) (1 samples, 0.229%)</title><rect x="1337.6" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1305.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1151" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1161.5" ></text>
</g>
<g >
<title>clang::Parser::ParseAssignmentExpression(clang::Parser::TypeCastState) (1 samples, 0.229%)</title><rect x="1337.6" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="415" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="425.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="1418.9" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1408.7" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1727" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1503" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1513.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (3 samples, 0.686%)</title><rect x="1229.2" y="1807" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1241.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_wrapper() (2 samples, 0.458%)</title><rect x="1144.6" y="1887" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1147.55" y="1897.5" ></text>
</g>
<g >
<title>FinishOverloadedCallExpr(clang::Sema&amp;, clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, clang::OverloadCandidateSet*, clang::OverloadCandidate**, clang::OverloadingResult, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="735" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1438.81" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1167" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1300.3" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="761.5" ></text>
</g>
<g >
<title>clang::UnresolvedLookupExpr::Create(clang::ASTContext const&amp;, clang::CXXRecordDecl*, clang::NestedNameSpecifierLoc, clang::DeclarationNameInfo const&amp;, bool, bool, clang::UnresolvedSetIterator, clang::UnresolvedSetIterator) (1 samples, 0.229%)</title><rect x="159.0" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="162.02" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1391.8" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1297.0" y="1343" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="303" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="201.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1007" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1188.6" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr(clang::CXXMemberCallExpr const*, clang::CodeGen::ReturnValueSlot) (2 samples, 0.458%)</title><rect x="1161.5" y="1535" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1167" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1001.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="959" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1641.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1583" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1321.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitCXXMethodDecl(clang::CXXMethodDecl*) (1 samples, 0.229%)</title><rect x="1412.1" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="393.5" ></text>
</g>
<g >
<title>TryUserDefinedConversion(clang::Sema&amp;, clang::Expr*, clang::QualType, bool, bool, bool, bool, bool, bool) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="162.4" y="1295" width="3.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="165.40" y="1305.5" ></text>
</g>
<g >
<title>cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::SmallVectorImpl&lt;clang::QualType&gt; const&amp;, cling::LookupHelper::DiagSetting, bool) const (3 samples, 0.686%)</title><rect x="1229.2" y="1871" width="10.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1232.22" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1401.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExprToTemp(clang::Expr const*) (1 samples, 0.229%)</title><rect x="165.8" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1887" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1065.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="111" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="121.5" ></text>
</g>
<g >
<title>llvm::MDNodeKeyImpl&lt;llvm::DISubprogram&gt;::MDNodeKeyImpl(llvm::DISubprogram const*) (1 samples, 0.229%)</title><rect x="1408.7" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1411.72" y="41.5" ></text>
</g>
<g >
<title>llvm::LLVMContext::~LLVMContext() (4 samples, 0.915%)</title><rect x="1310.5" y="1951" width="13.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1313.50" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1343" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1129.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl&lt;unsigned long&gt;&amp;, llvm::StringRef*) (1 samples, 0.229%)</title><rect x="84.5" y="1439" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="87.51" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1401.9" y="783" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="793.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (1 samples, 0.229%)</title><rect x="81.1" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (1 samples, 0.229%)</title><rect x="172.6" y="1487" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="175.56" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="135.3" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="969.5" ></text>
</g>
<g >
<title>llvm::po_iterator&lt;llvm::BasicBlock*, llvm::SmallPtrSet&lt;llvm::BasicBlock*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::BasicBlock*&gt; &gt;::traverseChild() (1 samples, 0.229%)</title><rect x="192.9" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="195.88" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="815" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="863" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1535" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1017.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::endModule() (1 samples, 0.229%)</title><rect x="1202.1" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="265.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (8 samples, 1.831%)</title><rect x="101.4" y="1807" width="27.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="104.44" y="1817.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1679" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="463" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1405.3" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="1432.4" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="799" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1161.5" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="969.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1232.6" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="1327" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="425.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (1 samples, 0.229%)</title><rect x="1144.6" y="1759" width="3.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1147.55" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1289.5" ></text>
</g>
<g >
<title>TClingClassInfo::Destruct(void*, ROOT::TMetaUtils::TNormalizedCtxt const&amp;) const (1 samples, 0.229%)</title><rect x="50.6" y="2047" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="53.64" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1401.9" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="1775" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1263" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1297.0" y="1151" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1615" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1185.2" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1391.8" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="505.5" ></text>
</g>
<g >
<title>llvm::DIEAbbrevSet::uniqueAbbreviation(llvm::DIE&amp;) (2 samples, 0.458%)</title><rect x="1290.2" y="1679" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1161.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (2 samples, 0.458%)</title><rect x="94.7" y="1871" width="6.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="97.67" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1401.9" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="879" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="889.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1178.4" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1181.42" y="1625.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr(clang::CallExpr*) (1 samples, 0.229%)</title><rect x="1236.0" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1807" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1817.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitClassTemplateDecl(clang::ClassTemplateDecl*) (1 samples, 0.229%)</title><rect x="1229.2" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1161.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody(clang::FunctionDecl const*&amp;) const (1 samples, 0.229%)</title><rect x="152.2" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1513.5" ></text>
</g>
<g >
<title>llvm::MDTuple::getImpl(llvm::LLVMContext&amp;, llvm::ArrayRef&lt;llvm::Metadata*&gt;, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="165.8" y="1039" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="168.79" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1297.0" y="1279" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="559" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1401.9" y="1903" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="377.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="511" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="521.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypedefNameDecl(clang::TypedefNameDecl*) (1 samples, 0.229%)</title><rect x="125.1" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1279" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="777.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="145.5" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="809.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (1 samples, 0.229%)</title><rect x="81.1" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1897.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (2 samples, 0.458%)</title><rect x="145.5" y="1871" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="148.47" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1001.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDecltypeType(clang::TypeLocBuilder&amp;, clang::DecltypeTypeLoc) (1 samples, 0.229%)</title><rect x="1435.8" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (2 samples, 0.458%)</title><rect x="135.3" y="1519" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="505.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.229%)</title><rect x="1307.1" y="1839" width="3.4" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="1310.12" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="447" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1401.9" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1807" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="687" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (5 samples, 1.144%)</title><rect x="101.4" y="943" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1395.2" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="793.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (3 samples, 0.686%)</title><rect x="1297.0" y="1663" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1097.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.229%)</title><rect x="1158.1" y="1679" width="3.4" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="1161.10" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1415.5" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="489.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression(bool, bool, clang::Parser::TypeCastState, bool) (1 samples, 0.229%)</title><rect x="1337.6" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1529.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="297.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="991" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="50.6" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="607" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="895" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1951" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1408.7" y="1999" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1641.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateMemInitializers(clang::CXXConstructorDecl*, clang::CXXConstructorDecl const*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1229.2" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="351" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="1039" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1418.9" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1903" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1913.5" ></text>
</g>
<g >
<title>clang::ClassTemplateDecl::getPartialSpecializations(llvm::SmallVectorImpl&lt;clang::ClassTemplatePartialSpecializationDecl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&amp;, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (1 samples, 0.229%)</title><rect x="1198.7" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="135.3" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1375" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="729.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="131.9" y="1759" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="134.92" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1369.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="162.4" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1065.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1171.6" y="1695" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1174.65" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="777.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitParmDecl(clang::VarDecl const&amp;, clang::CodeGen::CodeGenFunction::ParamValue, unsigned int) (1 samples, 0.229%)</title><rect x="1192.0" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="351" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="783" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="415" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="425.5" ></text>
</g>
<g >
<title>isSafeToConvert(clang::RecordDecl const*, clang::CodeGen::CodeGenTypes&amp;) [clone .part.0] (1 samples, 0.229%)</title><rect x="118.4" y="991" width="3.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="121.38" y="1001.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="165.8" y="1743" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="168.79" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="95" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1465.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction(clang::FunctionTemplateDecl*, llvm::SmallVectorImpl&lt;clang::DeducedTemplateArgument&gt;&amp;, unsigned int, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, llvm::SmallVectorImpl&lt;clang::Sema::OriginalCallArg&gt; const*, bool, llvm::function_ref&lt;bool ()&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1567" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (2 samples, 0.458%)</title><rect x="1161.5" y="1599" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (3 samples, 0.686%)</title><rect x="169.2" y="1679" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1689.5" ></text>
</g>
<g >
<title>bool llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DIDerivedType&gt;, llvm::detail::DenseSetPair&lt;llvm::DIDerivedType*&gt; &gt;, llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DIDerivedType&gt;, llvm::detail::DenseSetPair&lt;llvm::DIDerivedType*&gt; &gt;::LookupBucketFor&lt;llvm::DIDerivedType*&gt;(llvm::DIDerivedType* const&amp;, llvm::detail::DenseSetPair&lt;llvm::DIDerivedType*&gt; const*&amp;) const (1 samples, 0.229%)</title><rect x="135.3" y="607" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="138.31" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (9 samples, 2.059%)</title><rect x="1398.6" y="2047" width="30.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="2057.5" >cla..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1297.0" y="1215" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1225.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::InstantiateTypedefNameDecl(clang::TypedefNameDecl*, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr(clang::CXXMemberCallExpr const*, clang::CodeGen::ReturnValueSlot) (2 samples, 0.458%)</title><rect x="135.3" y="1375" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1385.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::isShareableAcrossCUs(llvm::DINode const*) const (1 samples, 0.229%)</title><rect x="1456.1" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="521.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*) (4 samples, 0.915%)</title><rect x="54.0" y="1743" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr(clang::CXXMemberCallExpr const*, clang::CodeGen::ReturnValueSlot) (1 samples, 0.229%)</title><rect x="1429.0" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1769.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1135" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="729.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1202.1" y="1535" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1545.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1519" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="165.8" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1344.4" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1001.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="2025.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1327" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1337.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt(clang::CompoundStmt*, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (4 samples, 0.915%)</title><rect x="1351.1" y="1135" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1145.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::SubstFunctionType(clang::FunctionDecl*, llvm::SmallVectorImpl&lt;clang::ParmVarDecl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1871" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="143" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="153.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::endModule() (1 samples, 0.229%)</title><rect x="142.1" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="879" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="889.5" ></text>
</g>
<g >
<title>clang::Sema::WarnOnPendingNoDerefs(clang::Sema::ExpressionEvaluationContextRecord&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="31" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="41.5" ></text>
</g>
<g >
<title>WrapperCall(long, unsigned long, void*, void*, void*) (7 samples, 1.602%)</title><rect x="1175.0" y="1903" width="23.7" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="1178.03" y="1913.5" >Wr..</text>
</g>
<g >
<title>clang::Sema::SubstExpr(clang::Expr*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1999" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1887" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1401.9" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="57.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt(clang::Stmt*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1103" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="148.9" y="1647" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1753.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr(clang::DependentScopeDeclRefExpr*, bool, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1232.6" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1433.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::symbol_end() const (1 samples, 0.229%)</title><rect x="1144.6" y="1663" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1673.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (2 samples, 0.458%)</title><rect x="1290.2" y="1919" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1293.18" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="138.7" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="751" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="953.5" ></text>
</g>
<g >
<title>clang::CanQual&lt;clang::Type&gt;::CreateUnsafe(clang::QualType) (1 samples, 0.229%)</title><rect x="1337.6" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr(clang::CallExpr const*, clang::CXXMethodDecl const*, clang::CodeGen::ReturnValueSlot, bool, clang::NestedNameSpecifier*, bool, clang::Expr const*) (2 samples, 0.458%)</title><rect x="135.3" y="1359" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1364.7" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="633.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext(clang::CXXScopeSpec&amp;, clang::DeclContext*&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1433.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (2 samples, 0.458%)</title><rect x="128.5" y="1791" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1913.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze(llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; const&amp;) (1 samples, 0.229%)</title><rect x="192.9" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="195.88" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1303.7" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="857.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl(clang::RedeclarableTemplateDecl*) (1 samples, 0.229%)</title><rect x="1229.2" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1145.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypeAliasDecl(clang::TypeAliasDecl*) (1 samples, 0.229%)</title><rect x="125.1" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="489.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="209.8" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1657.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="81.1" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="50.6" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="617.5" ></text>
</g>
<g >
<title>clang::RecordDecl::field_begin() const (4 samples, 0.915%)</title><rect x="104.8" y="719" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="50.6" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="649.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl&lt;unsigned long&gt;&amp;, llvm::StringRef*) (4 samples, 0.915%)</title><rect x="54.0" y="1663" width="13.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="57.03" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1311" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1465.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1183" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1849.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr(clang::CallExpr*) (1 samples, 0.229%)</title><rect x="1232.6" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1007" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1415.5" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="601.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCompoundStatementBody(bool) (1 samples, 0.229%)</title><rect x="1337.6" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="137.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (2 samples, 0.458%)</title><rect x="1198.7" y="1775" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1201.74" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1913.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="1303.7" y="1087" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1306.73" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1903" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1279" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="431" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="79" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="89.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="131.9" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="134.92" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1401.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1154.7" y="1663" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1157.71" y="1673.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="575" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="505.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="1175.0" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1609.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (3 samples, 0.686%)</title><rect x="1297.0" y="1807" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1817.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (1 samples, 0.229%)</title><rect x="145.5" y="1791" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1609.5" ></text>
</g>
<g >
<title>clang::Sema::BuildResolvedCallExpr(clang::Expr*, clang::NamedDecl*, clang::SourceLocation, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool, clang::CallExpr::ADLCallKind) (1 samples, 0.229%)</title><rect x="1236.0" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1673.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl(clang::RedeclarableTemplateDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="473.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="121.8" y="367" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="921.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::Read(unsigned int) (4 samples, 0.915%)</title><rect x="67.6" y="1775" width="13.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="70.57" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="799" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1161.5" y="1359" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="125.1" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="329.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (1 samples, 0.229%)</title><rect x="145.5" y="1839" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="148.47" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1188.6" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1300.3" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1519" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1529.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="607" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1405.3" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXDeleteExpr(clang::CXXDeleteExpr const*) (1 samples, 0.229%)</title><rect x="50.6" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1759" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1769.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (2 samples, 0.458%)</title><rect x="94.7" y="1855" width="6.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="97.67" y="1865.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1247" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="969.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::EmitULEB128IntValue(unsigned long, unsigned int) (1 samples, 0.229%)</title><rect x="1151.3" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1593.5" ></text>
</g>
<g >
<title>clang::Sema::FixOverloadedFunctionReference(clang::Expr*, clang::DeclAccessPair, clang::FunctionDecl*) (1 samples, 0.229%)</title><rect x="1435.8" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="729.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr(clang::DependentScopeDeclRefExpr*, bool, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="162.4" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="985.5" ></text>
</g>
<g >
<title>getTypeIdentifier(clang::TagType const*, clang::CodeGen::CodeGenModule&amp;, llvm::DICompileUnit*) (1 samples, 0.229%)</title><rect x="1432.4" y="159" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1435.43" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1247" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (1 samples, 0.229%)</title><rect x="1432.4" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="1347.8" y="1999" width="16.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="2009.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1721.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1103" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1535" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1737.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="255" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="265.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="1401.9" y="31" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1404.95" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="50.6" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="73.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="831" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="463" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1429.0" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="217.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl(clang::TemplateDecl*) (1 samples, 0.229%)</title><rect x="125.1" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1327" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="1087" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1327" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1961.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1337.6" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (1 samples, 0.229%)</title><rect x="148.9" y="1615" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="473.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr(clang::DependentScopeDeclRefExpr*, bool, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1435.8" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1398.6" y="863" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1993.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(long, void*, CPyCppyy::CallContext*) (4 samples, 0.915%)</title><rect x="128.5" y="1951" width="13.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="131.54" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1103" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1181.8" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1881.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="142.1" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1737.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) (1 samples, 0.229%)</title><rect x="118.4" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1408.7" y="1967" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1977.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (11 samples, 2.517%)</title><rect x="199.7" y="1759" width="37.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="202.66" y="1769.5" >clin..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (4 samples, 0.915%)</title><rect x="1351.1" y="1199" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="50.6" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1388.4" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1300.3" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1297.0" y="1119" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="697.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="125.1" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="601.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression(bool, bool, bool&amp;, clang::Parser::TypeCastState, bool) (1 samples, 0.229%)</title><rect x="1337.6" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1497.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1519" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1551" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="943" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="953.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="1175.0" y="1743" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1663" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (2 samples, 0.458%)</title><rect x="1181.8" y="1407" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (1 samples, 0.229%)</title><rect x="169.2" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="383" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1198.7" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="895" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (3 samples, 0.686%)</title><rect x="1418.9" y="1983" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1993.5" ></text>
</g>
<g >
<title>python (421 samples, 96.339%)</title><rect x="50.6" y="2063" width="1425.9" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="53.64" y="2073.5" >python</text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="687" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1807" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1817.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnit(llvm::DwarfUnit*, bool) (1 samples, 0.229%)</title><rect x="1202.1" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1577.5" ></text>
</g>
<g >
<title>clang::SourceManager::getLineNumber(clang::FileID, unsigned int, bool*) const (1 samples, 0.229%)</title><rect x="1192.0" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (1 samples, 0.229%)</title><rect x="1429.0" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="447" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1415.5" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="793.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1263" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1273.5" ></text>
</g>
<g >
<title>CPyCppyy::CreateScopeProxy(unsigned long) (2 samples, 0.458%)</title><rect x="1198.7" y="1919" width="6.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1201.74" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1743" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1103" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1113.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1919" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1929.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1391" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1401.5" ></text>
</g>
<g >
<title>getMangledNameImpl(clang::CodeGen::CodeGenModule const&amp;, clang::GlobalDecl, clang::NamedDecl const*, bool) (1 samples, 0.229%)</title><rect x="1415.5" y="191" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1418.49" y="201.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.229%)</title><rect x="1371.5" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1374.46" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1065.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1171.6" y="1855" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1174.65" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1422.3" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1641.5" ></text>
</g>
<g >
<title>calc_x_with_options(int, float, bool, double) (100 samples, 22.883%)</title><rect x="236.9" y="1679" width="338.7" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="239.91" y="1689.5" >calc_x_with_options(int, float, bool, double)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="89.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1753.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize(llvm::object::ObjectFile const&amp;, llvm::object::SectionRef const&amp;) (1 samples, 0.229%)</title><rect x="203.0" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="206.04" y="1577.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="415" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (2 samples, 0.458%)</title><rect x="135.3" y="1567" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="665.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass(void const*, bool) (2 samples, 0.458%)</title><rect x="226.8" y="1599" width="6.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="229.75" y="1609.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="233.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitVarDeclImpl(clang::VarDecl*) (1 samples, 0.229%)</title><rect x="152.2" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="303" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1405.3" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1887" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1897.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl(clang::FieldDecl*) (1 samples, 0.229%)</title><rect x="1435.8" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1167" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1177.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnitFragment(clang::Sema::TUFragmentKind) [clone .part.0] (4 samples, 0.915%)</title><rect x="152.2" y="1711" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1705.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (1 samples, 0.229%)</title><rect x="142.1" y="1855" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="145.08" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="943" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1465.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::Perform(clang::Sema&amp;, clang::InitializedEntity const&amp;, clang::InitializationKind const&amp;, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::QualType*) (1 samples, 0.229%)</title><rect x="1229.2" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1487" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1391" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="953.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (2 samples, 0.458%)</title><rect x="84.5" y="1871" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1391.8" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="473.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt(clang::CompoundStmt*, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1181.8" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="921.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1381.6" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1231" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1241.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="1198.7" y="1727" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1201.74" y="1737.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::getOrCreateTypeArray(llvm::ArrayRef&lt;llvm::Metadata*&gt;) (1 samples, 0.229%)</title><rect x="175.9" y="1487" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="178.95" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1263" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1273.5" ></text>
</g>
<g >
<title>clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const (4 samples, 0.915%)</title><rect x="104.8" y="735" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="703" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="735" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="991" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="207" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1519" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1823" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1337.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions const&amp;, cling::Transaction**) const (5 samples, 1.144%)</title><rect x="1181.8" y="1791" width="16.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1184.81" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1374.9" y="143" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="153.5" ></text>
</g>
<g >
<title>PerformConstructorInitialization(clang::Sema&amp;, clang::InitializedEntity const&amp;, clang::InitializationKind const&amp;, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::InitializationSequence::Step const&amp;, bool&amp;, bool, bool, clang::SourceLocation, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1229.2" y="1407" width="3.4" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1232.22" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1432.4" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="125.1" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1033.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::Read(unsigned int) (1 samples, 0.229%)</title><rect x="1229.2" y="1023" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1232.22" y="1033.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl(bool) const (1 samples, 0.229%)</title><rect x="1232.6" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1103" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1113.5" ></text>
</g>
<g >
<title>cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (3 samples, 0.686%)</title><rect x="1297.0" y="1919" width="10.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1299.96" y="1929.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction(llvm::PointerIntPair&lt;cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits&lt;cling::Transaction*&gt;, llvm::PointerIntPairInfo&lt;cling::Transaction*, 2u, llvm::PointerLikeTypeTraits&lt;cling::Transaction*&gt; &gt; &gt;&amp;, bool) (9 samples, 2.059%)</title><rect x="169.2" y="1759" width="30.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="172.18" y="1769.5" >cli..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (1 samples, 0.229%)</title><rect x="1188.6" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction(clang::GlobalDecl, clang::QualType, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;, clang::CodeGen::FunctionArgList const&amp;, clang::SourceLocation, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1192.0" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout(clang::RecordDecl const*, llvm::StructType*) (1 samples, 0.229%)</title><rect x="1341.0" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="729.5" ></text>
</g>
<g >
<title>TEnum::GetEnum(char const*, TEnum::ESearchAction)::{lambda(char const*, char const*, TEnum::ESearchAction)#2}::operator()(char const*, char const*, TEnum::ESearchAction) const (8 samples, 1.831%)</title><rect x="54.0" y="1935" width="27.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="57.03" y="1945.5" >TE..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1881.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction(llvm::Function&amp;) (7 samples, 1.602%)</title><rect x="213.2" y="1631" width="23.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="216.20" y="1641.5" >ll..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="137.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="1839" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1465.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1647" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1673.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="943" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="655" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="447" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="1429.0" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1833.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (3 samples, 0.686%)</title><rect x="1151.3" y="1823" width="10.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1154.33" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1471" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="607" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="617.5" ></text>
</g>
<g >
<title>TClingCallFunc::IFacePtr() (1 samples, 0.229%)</title><rect x="1171.6" y="1919" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1174.65" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1071" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1631" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1641.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="101.4" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="697.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="463" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="473.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="585.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="527" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (4 samples, 0.915%)</title><rect x="1351.1" y="559" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="569.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doInitialization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="98.1" y="1743" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1519" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1529.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) (1 samples, 0.229%)</title><rect x="118.4" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1161.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="95" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="105.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1171.6" y="1679" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1174.65" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1871" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1065.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType(clang::TypeLocBuilder&amp;, clang::DependentNameTypeLoc, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="751" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="761.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="98.1" y="911" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1188.6" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="905.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1807" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1817.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (1 samples, 0.229%)</title><rect x="1229.2" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="207" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="847" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="857.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformIfStmt(clang::IfStmt*) (1 samples, 0.229%)</title><rect x="159.0" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="162.02" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1583" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1327" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1337.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1471" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1481.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (5 samples, 1.144%)</title><rect x="1151.3" y="1887" width="17.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1154.33" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1151" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (1 samples, 0.229%)</title><rect x="175.9" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="178.95" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="591" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1999" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1181.8" y="1199" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1311" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1321.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;)::{lambda(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;)#1}::operator()(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;) const (1 samples, 0.229%)</title><rect x="1412.1" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="217.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::VoidExecutor::Execute(long, void*, CPyCppyy::CallContext*) (5 samples, 1.144%)</title><rect x="1151.3" y="1951" width="17.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1154.33" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1007" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1017.5" ></text>
</g>
<g >
<title>clang::Parser::ParseExpression(clang::Parser::TypeCastState) (1 samples, 0.229%)</title><rect x="1337.6" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="165.8" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="249.5" ></text>
</g>
<g >
<title>c++ (4 samples, 0.915%)</title><rect x="10.0" y="2063" width="13.5" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="13.00" y="2073.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1432.4" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1417.5" ></text>
</g>
<g >
<title>bool llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;::callback_fn&lt;clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind)::{lambda(llvm::ArrayRef&lt;clang::QualType&gt;)#1}&gt;(long, llvm::ArrayRef&lt;clang::QualType&gt;) (1 samples, 0.229%)</title><rect x="162.4" y="1375" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="165.40" y="1385.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitParmVarDecl(clang::ParmVarDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="313.5" ></text>
</g>
<g >
<title>TListOfFunctions::Load() (3 samples, 0.686%)</title><rect x="1229.2" y="1935" width="10.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1232.22" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1599" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1609.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (3 samples, 0.686%)</title><rect x="152.2" y="1631" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1405.3" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1983" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="815" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (4 samples, 0.915%)</title><rect x="1351.1" y="511" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="521.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1103" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="393.5" ></text>
</g>
<g >
<title>llvm::DIEValue::EmitValue(llvm::AsmPrinter const*) const (1 samples, 0.229%)</title><rect x="209.8" y="1503" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1513.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="665.5" ></text>
</g>
<g >
<title>non-virtual thunk to clang::ASTReader::FinishedDeserializing() (4 samples, 0.915%)</title><rect x="104.8" y="687" width="13.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="107.83" y="697.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="192.9" y="1695" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="195.88" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1545.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnit(llvm::DwarfUnit*, bool) (1 samples, 0.229%)</title><rect x="1151.3" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1097.5" ></text>
</g>
<g >
<title>BuildOverloadedBinOp(clang::Sema&amp;, clang::Scope*, clang::SourceLocation, clang::BinaryOperatorKind, clang::Expr*, clang::Expr*) (1 samples, 0.229%)</title><rect x="1337.6" y="1503" width="3.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1340.60" y="1513.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="767" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="751" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="447" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="457.5" ></text>
</g>
<g >
<title>inflate_fast (1 samples, 0.229%)</title><rect x="91.3" y="1999" width="3.4" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="94.28" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="135.3" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="671" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="591" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1241.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="142.1" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1398.6" y="239" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1161.5" y="1471" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1481.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::addRegisterDefined(unsigned int, llvm::TargetRegisterInfo const*) (1 samples, 0.229%)</title><rect x="223.4" y="1487" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="226.36" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1727" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="249.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::RDefineReader::GetImpl(long long) (268 samples, 61.327%)</title><rect x="236.9" y="1775" width="907.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="239.91" y="1785.5" >ROOT::Internal::RDF::RDefineReader::GetImpl(long long)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1513.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="2031" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1833.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="895" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1408.7" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="761.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="1175.0" y="1711" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1181.8" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="905.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions const&amp;, cling::Transaction**) const (2 samples, 0.458%)</title><rect x="135.3" y="1807" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="138.31" y="1817.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSectionName(llvm::object::Elf_Shdr_Impl&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt; const*) const (1 samples, 0.229%)</title><rect x="94.7" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1641.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (1 samples, 0.229%)</title><rect x="121.8" y="639" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXNewExpr(clang::CXXNewExpr const*) (2 samples, 0.458%)</title><rect x="135.3" y="1439" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="815" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="825.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt(clang::CompoundStmt*, bool) (1 samples, 0.229%)</title><rect x="1236.0" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1753.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::ScalarEvolution(llvm::Function&amp;, llvm::TargetLibraryInfo&amp;, llvm::AssumptionCache&amp;, llvm::DominatorTree&amp;, llvm::LoopInfo&amp;) (1 samples, 0.229%)</title><rect x="196.3" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="199.27" y="1657.5" ></text>
</g>
<g >
<title>void clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt;(clang::CodeGen::CallArgList&amp;, clang::FunctionProtoType const*, llvm::iterator_range&lt;clang::Stmt::CastIterator&lt;clang::Expr, clang::Expr const* const, clang::Stmt const* const&gt; &gt;, clang::CodeGen::CodeGenFunction::AbstractCallee, unsigned int, clang::CodeGen::CodeGenFunction::EvaluationOrder) (1 samples, 0.229%)</title><rect x="1198.7" y="1471" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1201.74" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1378.2" y="2031" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="2041.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="162.4" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="537.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="271" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="655" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="665.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1055" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1065.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::bases_begin() const (1 samples, 0.229%)</title><rect x="118.4" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1188.6" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="50.6" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1641.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit(clang::Stmt*) (3 samples, 0.686%)</title><rect x="1297.0" y="1423" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1433.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="1232.6" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="521.5" ></text>
</g>
<g >
<title>clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector&lt;clang::Stmt*, 32u&gt;&amp;, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::Parser::ParsedAttributesWithRange&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1759" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="825.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="959" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1347.8" y="1663" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="1055" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="729.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::DISubprogram*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DISubprogram&gt;, llvm::detail::DenseSetPair&lt;llvm::DISubprogram*&gt; &gt;::grow(unsigned int) (1 samples, 0.229%)</title><rect x="1408.7" y="47" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1411.72" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="169.2" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="889.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream(clang::serialization::ModuleFile&amp;) (1 samples, 0.229%)</title><rect x="1418.9" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1215" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1225.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FinishedDeserializing() (4 samples, 0.915%)</title><rect x="67.6" y="1839" width="13.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="70.57" y="1849.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfoImpl(clang::Type const*) const (4 samples, 0.915%)</title><rect x="104.8" y="751" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="447" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="121.8" y="895" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="905.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::beginModule() (1 samples, 0.229%)</title><rect x="1147.9" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;) (1 samples, 0.229%)</title><rect x="1198.7" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (3 samples, 0.686%)</title><rect x="1297.0" y="1535" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1545.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1071" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="50.6" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="511" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="521.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (2 samples, 0.458%)</title><rect x="1161.5" y="1663" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1673.5" ></text>
</g>
<g >
<title>clang::CXXMethodDecl::getThisType() const (1 samples, 0.229%)</title><rect x="1181.8" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1263" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="281.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1311" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1321.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1887" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1897.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="142.1" y="1775" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1785.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="162.4" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1303.7" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1391" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="735" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1374.9" y="879" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="633.5" ></text>
</g>
<g >
<title>clang::Sema::IsDerivedFrom(clang::SourceLocation, clang::QualType, clang::QualType) (1 samples, 0.229%)</title><rect x="1435.8" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1087" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1087" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1097.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::layout(llvm::MCAsmLayout&amp;) (1 samples, 0.229%)</title><rect x="131.9" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="134.92" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1903" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1679" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::EnumType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1919" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExprLValue(clang::CallExpr const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1785.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (10 samples, 2.288%)</title><rect x="94.7" y="1887" width="33.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="97.67" y="1897.5" >TCl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1429.0" y="879" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1364.7" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1177.5" ></text>
</g>
<g >
<title>clang::ItaniumVTableContext::getMethodVTableIndex(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1405.3" y="63" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="73.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="879" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="889.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1503" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1007" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1577.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="165.8" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1401.9" y="1023" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1033.5" ></text>
</g>
<g >
<title>TCling::Calc(char const*, TInterpreter::EErrorCode*) (25 samples, 5.721%)</title><rect x="152.2" y="1807" width="84.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="155.24" y="1817.5" >TCling::Calc..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::EnumType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="927" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="937.5" ></text>
</g>
<g >
<title>bool llvm::function_ref&lt;bool ()&gt;::callback_fn&lt;clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;)::{lambda()#2}&gt;(long) (1 samples, 0.229%)</title><rect x="1435.8" y="1551" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1438.81" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="165.8" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1657.5" ></text>
</g>
<g >
<title>malloc_consolidate (3 samples, 0.686%)</title><rect x="1462.9" y="2047" width="10.2" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1465.91" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (5 samples, 1.144%)</title><rect x="101.4" y="895" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1919" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1929.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (4 samples, 0.915%)</title><rect x="104.8" y="607" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="138.7" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="825.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression(bool, bool, bool&amp;, clang::Parser::TypeCastState, bool) (1 samples, 0.229%)</title><rect x="1337.6" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1577.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1435.8" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="2057.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="142.1" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="767" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="383" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1167" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1391" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1401.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr(clang::CXXScopeSpec&amp;, clang::DeclarationNameInfo const&amp;, bool, clang::Scope const*, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1232.6" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="121.8" y="671" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="175.9" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="178.95" y="1513.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (1 samples, 0.229%)</title><rect x="1171.6" y="1999" width="3.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1174.65" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1769.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool) (1 samples, 0.229%)</title><rect x="1236.0" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1727" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1167" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1177.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::endModule() (1 samples, 0.229%)</title><rect x="1171.6" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.65" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="825.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (2 samples, 0.458%)</title><rect x="94.7" y="1823" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="97.67" y="1833.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExceptionSpec(clang::SourceLocation, clang::FunctionProtoType::ExceptionSpecInfo&amp;, llvm::SmallVectorImpl&lt;clang::QualType&gt;&amp;, bool&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="361.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.229%)</title><rect x="91.3" y="2015" width="3.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="94.28" y="2025.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1154.7" y="1599" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1157.71" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (3 samples, 0.686%)</title><rect x="1181.8" y="1535" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1545.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1359" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1388.4" y="719" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1007" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout(clang::RecordDecl const*, llvm::StructType*) (1 samples, 0.229%)</title><rect x="1341.0" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="50.6" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1017.5" ></text>
</g>
<g >
<title>Cppyy::GetDatamemberOffset(unsigned long, unsigned long) (2 samples, 0.458%)</title><rect x="1198.7" y="1855" width="6.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1201.74" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1161.5" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1231" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1423" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1833.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (8 samples, 1.831%)</title><rect x="101.4" y="1775" width="27.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="104.44" y="1785.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="281.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0(int, int) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="1337.6" y="2031" width="3.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1340.60" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1833.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (1 samples, 0.229%)</title><rect x="145.5" y="1855" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="148.47" y="1865.5" ></text>
</g>
<g >
<title>clang::Parser::ParseFunctionDefinition(clang::ParsingDeclarator&amp;, clang::Parser::ParsedTemplateInfo const&amp;, clang::Parser::LateParsedAttrList*) (1 samples, 0.229%)</title><rect x="1337.6" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="121.8" y="1215" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1897.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="543" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1161.5" y="1407" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="969.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1154.7" y="1615" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1157.71" y="1625.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (3 samples, 0.686%)</title><rect x="1229.2" y="1791" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="138.7" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="633.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::Jit() (25 samples, 5.721%)</title><rect x="152.2" y="1839" width="84.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="155.24" y="1849.5" >ROOT::Detail..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1503" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1513.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1311" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (3 samples, 0.686%)</title><rect x="1388.4" y="1951" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="607" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1374.9" y="943" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="953.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformFunctionTypeParams(clang::SourceLocation, llvm::ArrayRef&lt;clang::ParmVarDecl*&gt;, clang::QualType const*, clang::FunctionType::ExtParameterInfo const*, llvm::SmallVectorImpl&lt;clang::QualType&gt;&amp;, llvm::SmallVectorImpl&lt;clang::ParmVarDecl*&gt;*, clang::Sema::ExtParameterInfoBuilder&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="905.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="84.5" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1364.7" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::tryEmitAsConstant(clang::DeclRefExpr*) (1 samples, 0.229%)</title><rect x="1198.7" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (1 samples, 0.229%)</title><rect x="1429.0" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1401.9" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1343" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1353.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="162.4" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="377.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1135" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1401.9" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="297.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.686%)</title><rect x="1327.4" y="2047" width="10.2" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="1330.44" y="2057.5" ></text>
</g>
<g >
<title>TClass::GetListOfEnums(bool) (8 samples, 1.831%)</title><rect x="54.0" y="1919" width="27.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="57.03" y="1929.5" >TC..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="799" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="841.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (1 samples, 0.229%)</title><rect x="50.6" y="1999" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="53.64" y="2009.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (3 samples, 0.686%)</title><rect x="199.7" y="1663" width="10.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="202.66" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1185.2" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="1081.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions const&amp;, cling::Transaction**) const (1 samples, 0.229%)</title><rect x="148.9" y="1807" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="151.86" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (3 samples, 0.686%)</title><rect x="169.2" y="1647" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1545.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier(clang::CXXRecordDecl*, clang::SourceRange, bool, clang::AccessSpecifier, clang::TypeSourceInfo*, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="1435.8" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr(clang::Expr const*, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="1188.6" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1161.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (11 samples, 2.517%)</title><rect x="199.7" y="1775" width="37.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="202.66" y="1785.5" >clin..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1300.3" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (4 samples, 0.915%)</title><rect x="1351.1" y="175" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="185.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl(clang::TemplateDecl*) (1 samples, 0.229%)</title><rect x="1229.2" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1129.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocatedSection(llvm::object::DataRefImpl) const (1 samples, 0.229%)</title><rect x="203.0" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="206.04" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="703" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="591" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="601.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1279" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="1049.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1119" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1689.5" ></text>
</g>
<g >
<title>llvm::DISubprogram::getImpl(llvm::LLVMContext&amp;, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="1429.0" y="31" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1432.04" y="41.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (3 samples, 0.686%)</title><rect x="1297.0" y="1631" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1641.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) (268 samples, 61.327%)</title><rect x="236.9" y="1823" width="907.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="239.91" y="1833.5" >ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="409.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1807" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1135" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1295" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1305.5" ></text>
</g>
<g >
<title>void std::__introsort_loop&lt;llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt; &gt;(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool)::{lambda(llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*, llvm::StringMapEntry&lt;llvm::DwarfStringPoolEntry&gt; const*)#1}&gt;) (1 samples, 0.229%)</title><rect x="1171.6" y="1663" width="3.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1174.65" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1300.3" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="271" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1422.3" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1368.1" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="457.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitDeclare(clang::VarDecl const*, llvm::Value*, llvm::Optional&lt;unsigned int&gt;, clang::CodeGen::CGBuilderTy&amp;, bool) (1 samples, 0.229%)</title><rect x="1192.0" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1449.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1439" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="831" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1401.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) (1 samples, 0.229%)</title><rect x="162.4" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1295" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1641.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="1435.8" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1737.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (1 samples, 0.229%)</title><rect x="1171.6" y="1807" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.65" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="847" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (3 samples, 0.686%)</title><rect x="169.2" y="1663" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1673.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="142.1" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="751" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="761.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1418.9" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (3 samples, 0.686%)</title><rect x="1297.0" y="1647" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="287" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1647" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs(clang::CodeGen::CallArgList&amp;, llvm::ArrayRef&lt;clang::QualType&gt;, llvm::iterator_range&lt;clang::Stmt::CastIterator&lt;clang::Expr, clang::Expr const* const, clang::Stmt const* const&gt; &gt;, clang::CodeGen::CodeGenFunction::AbstractCallee, unsigned int, clang::CodeGen::CodeGenFunction::EvaluationOrder) (5 samples, 1.144%)</title><rect x="101.4" y="1343" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1855" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1865.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType(clang::TypeLocBuilder&amp;, clang::TemplateSpecializationTypeLoc, clang::TemplateName) (1 samples, 0.229%)</title><rect x="1232.6" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="319" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="329.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="1456.1" y="847" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="857.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1097.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1689.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (3 samples, 0.686%)</title><rect x="1151.3" y="1807" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="169.2" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1257.5" ></text>
</g>
<g >
<title>clang::ASTReader::loadPendingDeclChain(clang::Decl*, unsigned long) (1 samples, 0.229%)</title><rect x="1229.2" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1405.3" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1297.0" y="847" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1305.5" ></text>
</g>
<g >
<title>CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, _object*) (2 samples, 0.458%)</title><rect x="1198.7" y="1903" width="6.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1201.74" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="393.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.229%)</title><rect x="169.2" y="1087" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="172.18" y="1097.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::loadObjectImpl(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="94.7" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="777.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::Finish() (1 samples, 0.229%)</title><rect x="1158.1" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1161.10" y="1737.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnit(llvm::DwarfUnit*, bool) (1 samples, 0.229%)</title><rect x="145.5" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1689.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfo(clang::Type const*) const (4 samples, 0.915%)</title><rect x="104.8" y="767" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1519" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1529.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (4 samples, 0.915%)</title><rect x="54.0" y="1759" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1769.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCXXConstructExpr(clang::SourceLocation, clang::QualType, clang::CXXConstructorDecl*, bool, llvm::MutableArrayRef&lt;clang::Expr*&gt;, bool, bool, bool, bool, unsigned int, clang::SourceRange) (1 samples, 0.229%)</title><rect x="1229.2" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXNewExpr(clang::CXXNewExpr const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="553.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG() (2 samples, 0.458%)</title><rect x="220.0" y="1567" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="222.98" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="697.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="1435.8" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="857.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeLocBuilder&amp;, clang::TypeLoc) (1 samples, 0.229%)</title><rect x="1232.6" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (1 samples, 0.229%)</title><rect x="165.8" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (1 samples, 0.229%)</title><rect x="1188.6" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (3 samples, 0.686%)</title><rect x="1297.0" y="1375" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1887" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="1935" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1945.5" ></text>
</g>
<g >
<title>TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (2 samples, 0.458%)</title><rect x="1198.7" y="1839" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1201.74" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1181.8" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="745.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="415" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="841.5" ></text>
</g>
<g >
<title>llvm::DIDerivedType* uniquifyImpl&lt;llvm::DIDerivedType, llvm::MDNodeInfo&lt;llvm::DIDerivedType&gt; &gt;(llvm::DIDerivedType*, llvm::DenseSet&lt;llvm::DIDerivedType*, llvm::MDNodeInfo&lt;llvm::DIDerivedType&gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="1425.7" y="31" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1428.65" y="41.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1161.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="1232.6" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="457.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="863" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="873.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1039" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1395.2" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="441.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType(clang::TypeLocBuilder&amp;, clang::TemplateSpecializationTypeLoc, clang::TemplateName) (1 samples, 0.229%)</title><rect x="1435.8" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt(clang::IfStmt const&amp;) (2 samples, 0.458%)</title><rect x="1181.8" y="1487" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1388.4" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1513.5" ></text>
</g>
<g >
<title>cling::Interpreter::~Interpreter() (5 samples, 1.144%)</title><rect x="1307.1" y="1983" width="17.0" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1310.12" y="1993.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType(clang::TemplateName, clang::SourceLocation, clang::TemplateArgumentListInfo&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (8 samples, 1.831%)</title><rect x="101.4" y="1711" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1721.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1833.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1887" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1017.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::CStringExecutor::Execute(long, void*, CPyCppyy::CallContext*) (1 samples, 0.229%)</title><rect x="142.1" y="1951" width="3.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="145.08" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1791" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1055" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1199" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="191" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1119" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1273.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="121.8" y="575" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="585.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1391" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr(clang::CXXMemberCallExpr const*, clang::CodeGen::ReturnValueSlot) (2 samples, 0.458%)</title><rect x="1181.8" y="1295" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (3 samples, 0.686%)</title><rect x="1297.0" y="1679" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="505.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1199" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1545.5" ></text>
</g>
<g >
<title>Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (7 samples, 1.602%)</title><rect x="1175.0" y="1919" width="23.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1178.03" y="1929.5" >Cp..</text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="815" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1395.2" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1423" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="399" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="409.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1455" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1545.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList(llvm::SmallVectorImpl&lt;clang::TemplateArgument&gt;&amp;, clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;, bool) (1 samples, 0.229%)</title><rect x="1418.9" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="425.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeLocBuilder&amp;, clang::TypeLoc) (1 samples, 0.229%)</title><rect x="162.4" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1425.7" y="111" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1679" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1689.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (2 samples, 0.458%)</title><rect x="1161.5" y="1791" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1164.49" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1871" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1215" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1225.5" ></text>
</g>
<g >
<title>llvm::DIDerivedType::getImpl(llvm::LLVMContext&amp;, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional&lt;unsigned int&gt;, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="135.3" y="623" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="138.31" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1743" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (2 samples, 0.458%)</title><rect x="1161.5" y="1615" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (2 samples, 0.458%)</title><rect x="1161.5" y="1695" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1353.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1679" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (3 samples, 0.686%)</title><rect x="1181.8" y="1599" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1609.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (1 samples, 0.229%)</title><rect x="125.1" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (8 samples, 1.831%)</title><rect x="101.4" y="1695" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1705.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="138.7" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="125.1" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="761.5" ></text>
</g>
<g >
<title>llvm::raw_ostream::write(unsigned char) (1 samples, 0.229%)</title><rect x="1151.3" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1378.2" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="377.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl(clang::FieldDecl*) (1 samples, 0.229%)</title><rect x="1435.8" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (3 samples, 0.686%)</title><rect x="1181.8" y="1551" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="135.3" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitReturnStmt(clang::ReturnStmt const&amp;) (1 samples, 0.229%)</title><rect x="148.9" y="1567" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="857.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCXXOperatorCallExpr(clang::CXXOperatorCallExpr*) (1 samples, 0.229%)</title><rect x="159.0" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="162.02" y="1417.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument(clang::TemplateArgumentLoc const&amp;, clang::TemplateArgumentLoc&amp;, bool) (1 samples, 0.229%)</title><rect x="162.4" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="50.6" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1247" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1257.5" ></text>
</g>
<g >
<title>void ROOT::Detail::RDF::RDefine&lt;int (*)(int, int), ROOT::Detail::RDF::CustomColExtraArgs::None&gt;::UpdateHelper&lt;int, int, 0ul, 1ul&gt;(unsigned int, long long, ROOT::TypeTraits::TypeList&lt;int, int&gt;, std::integer_sequence&lt;unsigned long, 0ul, 1ul&gt;, ROOT::Detail::RDF::CustomColExtraArgs::None) (268 samples, 61.327%)</title><rect x="236.9" y="1743" width="907.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="239.91" y="1753.5" >void ROOT::Detail::RDF::RDefine&lt;int (*)(int, int), ROOT::Detail::RDF::CustomColExtraArgs::None&gt;::UpdateHelper&lt;int, int, 0ul, 1ul&gt;(unsigned int, long lo..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (2 samples, 0.458%)</title><rect x="169.2" y="1551" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1983" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr(clang::CXXMemberCallExpr const*, clang::CodeGen::ReturnValueSlot) (1 samples, 0.229%)</title><rect x="1188.6" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (1 samples, 0.229%)</title><rect x="50.6" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="681.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifierLoc(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="125.1" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1199" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1388.4" y="1855" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1364.7" y="47" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="57.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1561.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_wrapper() (1 samples, 0.229%)</title><rect x="1171.6" y="1903" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1174.65" y="1913.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::loadObject(llvm::object::ObjectFile const&amp;) (1 samples, 0.229%)</title><rect x="94.7" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1391" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateEnumType(clang::EnumType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="175.9" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="178.95" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1673.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="1418.9" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1545.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCXXConstructExpr(clang::SourceLocation, clang::QualType, clang::NamedDecl*, clang::CXXConstructorDecl*, llvm::MutableArrayRef&lt;clang::Expr*&gt;, bool, bool, bool, bool, unsigned int, clang::SourceRange) (1 samples, 0.229%)</title><rect x="1229.2" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="1007" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (1 samples, 0.229%)</title><rect x="50.6" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="1198.7" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1401.9" y="431" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="441.5" ></text>
</g>
<g >
<title>TClingCallFunc::IFacePtr() (1 samples, 0.229%)</title><rect x="142.1" y="1903" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="145.08" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1423" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (1 samples, 0.229%)</title><rect x="1429.0" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1583" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1432.4" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="125.1" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="953.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;) (1 samples, 0.229%)</title><rect x="1236.0" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1561.5" ></text>
</g>
<g >
<title>TClingCallFunc::ExecDestructor(TClingClassInfo const*, void*, unsigned long, bool) (5 samples, 1.144%)</title><rect x="1290.2" y="1967" width="16.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1293.18" y="1977.5" ></text>
</g>
<g >
<title>__GI___sigprocmask (1 samples, 0.229%)</title><rect x="1439.2" y="2031" width="3.4" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1442.20" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (2 samples, 0.458%)</title><rect x="135.3" y="1599" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1391.8" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="425.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="1183" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="165.8" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1609.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="2047" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1273.5" ></text>
</g>
<g >
<title>clang::Parser::ParseRHSOfBinaryExpression(clang::ActionResult&lt;clang::Expr*, true&gt;, clang::prec::Level) (1 samples, 0.229%)</title><rect x="1337.6" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (5 samples, 1.144%)</title><rect x="1347.8" y="2031" width="16.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitBinaryOperatorLValue(clang::BinaryOperator const*) (8 samples, 1.831%)</title><rect x="101.4" y="1471" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1481.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="671" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="681.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier(clang::CXXRecordDecl*, clang::SourceRange, bool, clang::AccessSpecifier, clang::TypeSourceInfo*, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="162.4" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1374.9" y="735" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1561.5" ></text>
</g>
<g >
<title>AddOverloadedCallCandidate(clang::Sema&amp;, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1839" width="3.4" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1438.81" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1378.2" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="809.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1199" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1297.0" y="1359" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (2 samples, 0.458%)</title><rect x="1181.8" y="1439" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1449.5" ></text>
</g>
<g >
<title>Cppyy::CallR(long, void*, unsigned long, void*) (1 samples, 0.229%)</title><rect x="142.1" y="1935" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="145.08" y="1945.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="335" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="345.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1567" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1577.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="735" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="745.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1452.7" y="879" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="889.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateTypeDIE(llvm::MDNode const*) (1 samples, 0.229%)</title><rect x="1456.1" y="831" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="841.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="239" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="495" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="953.5" ></text>
</g>
<g >
<title>IsUserDefinedConversion(clang::Sema&amp;, clang::Expr*, clang::QualType, clang::UserDefinedConversionSequence&amp;, clang::OverloadCandidateSet&amp;, bool, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1279" width="3.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="165.40" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="985.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl(clang::DeclaratorDecl*) (1 samples, 0.229%)</title><rect x="84.5" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1641.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="152.2" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1401.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1023" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (1 samples, 0.229%)</title><rect x="1198.7" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1561.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="1347.8" y="1983" width="16.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1903" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1913.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="125.1" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="50.6" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TemplateSpecializationType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1241.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl(clang::RedeclarableTemplateDecl*) (1 samples, 0.229%)</title><rect x="121.8" y="511" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (5 samples, 1.144%)</title><rect x="1347.8" y="2015" width="16.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (6 samples, 1.373%)</title><rect x="1408.7" y="2031" width="20.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="2041.5" >c..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1263" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1273.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="815" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="50.6" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="543" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1303.7" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1129.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl(clang::DeclaratorDecl*) (1 samples, 0.229%)</title><rect x="162.4" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="281.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList(clang::TemplateDecl*, clang::SourceLocation, clang::TemplateArgumentListInfo&amp;, bool, llvm::SmallVectorImpl&lt;clang::TemplateArgument&gt;&amp;, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1193.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="98.1" y="623" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="127" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="137.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (4 samples, 0.915%)</title><rect x="104.8" y="623" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TemplateSpecializationType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="633.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&amp;, _object*, _object*, CPyCppyy::CallContext*) (10 samples, 2.288%)</title><rect x="94.7" y="1999" width="33.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="97.67" y="2009.5" >CPy..</text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (3 samples, 0.686%)</title><rect x="1151.3" y="1839" width="10.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1395.2" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="553.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.229%)</title><rect x="23.5" y="2031" width="3.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="26.55" y="2041.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1435.8" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="1401.9" y="719" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitReferenceBindingToExpr(clang::Expr const*) (5 samples, 1.144%)</title><rect x="101.4" y="1311" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (5 samples, 1.144%)</title><rect x="1347.8" y="2047" width="16.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1297.0" y="831" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1371.5" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="2041.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="125.1" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="537.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateParameterList(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="1229.2" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1113.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext(clang::CXXScopeSpec&amp;, clang::DeclContext*&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="841.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1202.1" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="367" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="377.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="1175.0" y="1759" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.03" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1347.8" y="143" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="50.6" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="185.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="169.5" ></text>
</g>
<g >
<title>TClingCallFunc::IFacePtr() (2 samples, 0.458%)</title><rect x="145.5" y="1903" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="148.47" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1839" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="879" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (3 samples, 0.686%)</title><rect x="169.2" y="1695" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1311" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1023" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1033.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="671" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="2009.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl(clang::TemplateDecl*) (1 samples, 0.229%)</title><rect x="101.4" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="633.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="131.9" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="134.92" y="1737.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="81.1" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1422.3" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1577.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (1 samples, 0.229%)</title><rect x="128.5" y="1759" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="131.54" y="1769.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="1412.1" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="169.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator()(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="98.1" y="1791" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="489.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (2 samples, 0.458%)</title><rect x="1181.8" y="1471" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1415.5" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="217.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="319" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="607" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="617.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions const&amp;, cling::Transaction**) const (1 samples, 0.229%)</title><rect x="1337.6" y="1967" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1340.60" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1455" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="2015" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1429.0" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="201.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin() const (8 samples, 1.831%)</title><rect x="54.0" y="1871" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1881.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="905.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1631" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1641.5" ></text>
</g>
<g >
<title>cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (2 samples, 0.458%)</title><rect x="135.3" y="1855" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="138.31" y="1865.5" ></text>
</g>
<g >
<title>call_init (1 samples, 0.229%)</title><rect x="1337.6" y="2047" width="3.4" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1340.60" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1422.3" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1388.4" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1599" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1188.6" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="217.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="143" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1408.7" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1001.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::RedeclarableResult clang::ASTDeclReader::VisitRedeclarable&lt;clang::FunctionDecl&gt;(clang::Redeclarable&lt;clang::FunctionDecl&gt;*) (4 samples, 0.915%)</title><rect x="54.0" y="1727" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1529.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1202.1" y="1503" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="138.7" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1407" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1545.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&amp;) (1 samples, 0.229%)</title><rect x="1195.4" y="1727" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1198.35" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="553.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="527" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="537.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_wrapper() (1 samples, 0.229%)</title><rect x="142.1" y="1887" width="3.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="145.08" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="825.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;void const*, llvm::TrackingMDRef, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::TrackingMDRef&gt; &gt;::grow(unsigned int) (1 samples, 0.229%)</title><rect x="1297.0" y="783" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1299.96" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXNewExpr(clang::CXXNewExpr const*) (6 samples, 1.373%)</title><rect x="101.4" y="1423" width="20.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1433.5" >c..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="777.5" ></text>
</g>
<g >
<title>TClingCallFunc::compile_wrapper(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (7 samples, 1.602%)</title><rect x="1175.0" y="1855" width="23.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1178.03" y="1865.5" >TC..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="537.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateStaticMemberDIE(llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1321.5" ></text>
</g>
<g >
<title>llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::finalize() (1 samples, 0.229%)</title><rect x="128.5" y="1743" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="131.54" y="1753.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1721.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="95" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1433.5" ></text>
</g>
<g >
<title>TryReferenceInit(clang::Sema&amp;, clang::Expr*, clang::QualType, clang::SourceLocation, bool, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1327" width="3.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="165.40" y="1337.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="1229.2" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1081.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1759" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt(clang::Stmt const*) (2 samples, 0.458%)</title><rect x="1181.8" y="1455" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1913.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1535" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1545.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl&lt;unsigned long&gt;&amp;, llvm::StringRef*) (1 samples, 0.229%)</title><rect x="81.1" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="84.12" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1167" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateQualifiedType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1999" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1422.3" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="761.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="943" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="281.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1289.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (1 samples, 0.229%)</title><rect x="94.7" y="1775" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="97.67" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1343" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="255" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="201.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1791" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1801.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::getOrCreateTypeArray(llvm::ArrayRef&lt;llvm::Metadata*&gt;) (1 samples, 0.229%)</title><rect x="1378.2" y="63" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1381.24" y="73.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1181.8" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1017.5" ></text>
</g>
<g >
<title>TClingMemberIter::Advance() (3 samples, 0.686%)</title><rect x="1229.2" y="1903" width="10.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1232.22" y="1913.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord(unsigned int) (1 samples, 0.229%)</title><rect x="152.2" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="847" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="135.3" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1145.5" ></text>
</g>
<g >
<title>TClingCallFunc::make_wrapper() (2 samples, 0.458%)</title><rect x="145.5" y="1887" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="148.47" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="905.5" ></text>
</g>
<g >
<title>clang::TypeLoc::getFullDataSizeForType(clang::QualType) (1 samples, 0.229%)</title><rect x="162.4" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1385.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind) (1 samples, 0.229%)</title><rect x="1435.8" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="767" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1039" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1129.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (2 samples, 0.458%)</title><rect x="1290.2" y="1695" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="148.9" y="1663" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1371.5" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="1775" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1415.5" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="937.5" ></text>
</g>
<g >
<title>TryCopyInitialization(clang::Sema&amp;, clang::Expr*, clang::QualType, bool, bool, bool, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1343" width="3.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="165.40" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr(clang::Expr const*, clang::CodeGen::AggValueSlot) (5 samples, 1.144%)</title><rect x="101.4" y="1391" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (5 samples, 1.144%)</title><rect x="101.4" y="815" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="825.5" ></text>
</g>
<g >
<title>llvm::DIE::computeOffsetsAndAbbrevs(llvm::AsmPrinter const*, llvm::DIEAbbrevSet&amp;, unsigned int) (1 samples, 0.229%)</title><rect x="142.1" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="145.08" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1737.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (2 samples, 0.458%)</title><rect x="1161.5" y="1807" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1164.49" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1727" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1567" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="831" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="841.5" ></text>
</g>
<g >
<title>clang::Sema::GatherArgumentsForCall(clang::SourceLocation, clang::FunctionDecl*, clang::FunctionProtoType const*, unsigned int, llvm::ArrayRef&lt;clang::Expr*&gt;, llvm::SmallVectorImpl&lt;clang::Expr*&gt;&amp;, clang::Sema::VariadicCallType, bool, bool) (1 samples, 0.229%)</title><rect x="1236.0" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="303" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="313.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (25 samples, 5.721%)</title><rect x="152.2" y="1791" width="84.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="155.24" y="1801.5" >cling::Inter..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1593.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType(clang::TypeLocBuilder&amp;, clang::TemplateSpecializationTypeLoc, clang::TemplateName) (1 samples, 0.229%)</title><rect x="162.4" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1081.5" ></text>
</g>
<g >
<title>llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&amp;) (1 samples, 0.229%)</title><rect x="192.9" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="195.88" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (1 samples, 0.229%)</title><rect x="165.8" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1181.8" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1368.1" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1481.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="81.1" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1935" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1769.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions const&amp;, cling::Transaction**) const (2 samples, 0.458%)</title><rect x="1161.5" y="1823" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1164.49" y="1833.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDeclStmt(clang::DeclStmt*) (1 samples, 0.229%)</title><rect x="162.4" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1711" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1721.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::loadObjectImpl(llvm::object::ObjectFile const&amp;) (3 samples, 0.686%)</title><rect x="199.7" y="1599" width="10.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1145.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1135" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TemplateSpecializationType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1119" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1418.9" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="937.5" ></text>
</g>
<g >
<title>llvm::DwarfStringPool::emit(llvm::AsmPrinter&amp;, llvm::MCSection*, llvm::MCSection*, bool) (1 samples, 0.229%)</title><rect x="1154.7" y="1711" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1157.71" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1113.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="217.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="431" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1395.2" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="937.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor(llvm::StringRef) (1 samples, 0.229%)</title><rect x="155.6" y="1375" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="158.63" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1023" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="393.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1327" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="511" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="521.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass(void const*, bool) (1 samples, 0.229%)</title><rect x="186.1" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="189.11" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="138.7" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1337.5" ></text>
</g>
<g >
<title>llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::finalize() (3 samples, 0.686%)</title><rect x="199.7" y="1647" width="10.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1657.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (3 samples, 0.686%)</title><rect x="152.2" y="1583" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitLocation(clang::CodeGen::CGBuilderTy&amp;, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="148.9" y="1535" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1545.5" ></text>
</g>
<g >
<title>TListOfFunctions::Load() (1 samples, 0.229%)</title><rect x="81.1" y="1967" width="3.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="84.12" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&amp;, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (1 samples, 0.229%)</title><rect x="165.8" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1663" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1673.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (3 samples, 0.686%)</title><rect x="152.2" y="1647" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="155.6" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="158.63" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1023" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1033.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) (1 samples, 0.229%)</title><rect x="1337.6" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1408.7" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1119" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1181.8" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1405.3" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="329.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr(clang::Scope*, clang::Expr*, clang::UnresolvedLookupExpr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1759" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="121.8" y="1295" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="1679" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1385.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction(clang::FunctionTemplateDecl*, llvm::SmallVectorImpl&lt;clang::DeducedTemplateArgument&gt;&amp;, unsigned int, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, llvm::SmallVectorImpl&lt;clang::Sema::OriginalCallArg&gt; const*, bool, llvm::function_ref&lt;bool ()&gt;) (1 samples, 0.229%)</title><rect x="162.4" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="191" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1429.0" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1398.6" y="1183" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1193.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::InstancePtrExecutor::Execute(long, void*, CPyCppyy::CallContext*) (2 samples, 0.458%)</title><rect x="1144.6" y="1951" width="6.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1147.55" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1388.4" y="2047" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1412.1" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1341.0" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1341.0" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1337.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1405.3" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="175" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (5 samples, 1.144%)</title><rect x="101.4" y="863" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1161.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="162.4" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="601.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1202.1" y="1615" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1205.13" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="135.3" y="1295" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1305.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::applySubprogramAttributes(llvm::DISubprogram const*, llvm::DIE&amp;, bool) (1 samples, 0.229%)</title><rect x="98.1" y="639" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1055" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1065.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&amp;, cling::Value*, bool) (2 samples, 0.458%)</title><rect x="1198.7" y="1807" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1201.74" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="937.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1231" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1961.5" ></text>
</g>
<g >
<title>clang::Parser::ParseParenExpression(clang::Parser::ParenParseOption&amp;, bool, bool, clang::OpaquePtr&lt;clang::QualType&gt;&amp;, clang::SourceLocation&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="831" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="879" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="889.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (3 samples, 0.686%)</title><rect x="1151.3" y="1871" width="10.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1154.33" y="1881.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (2 samples, 0.458%)</title><rect x="1175.0" y="1839" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1178.03" y="1849.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeSourceInfo*) (1 samples, 0.229%)</title><rect x="162.4" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1188.6" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="537.5" ></text>
</g>
<g >
<title>bool llvm::function_ref&lt;bool ()&gt;::callback_fn&lt;clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;)::{lambda()#2}&gt;(long) (1 samples, 0.229%)</title><rect x="1435.8" y="95" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1438.81" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1695" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="953.5" ></text>
</g>
<g >
<title>_dl_start_user (1 samples, 0.229%)</title><rect x="1324.1" y="2047" width="3.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1327.05" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="2041.5" ></text>
</g>
<g >
<title>CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (10 samples, 2.288%)</title><rect x="94.7" y="2015" width="33.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="97.67" y="2025.5" >CPy..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="135.3" y="1311" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1181.8" y="1183" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1388.4" y="863" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="873.5" ></text>
</g>
<g >
<title>clang::Sema::MarkFunctionReferenced(clang::SourceLocation, clang::FunctionDecl*, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="681.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize(llvm::object::ObjectFile const&amp;, llvm::object::SectionRef const&amp;) (1 samples, 0.229%)</title><rect x="206.4" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="209.43" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1545.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1983" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="415" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="137.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doInitialization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="1147.9" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1711" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr(clang::Expr const*, clang::CodeGen::AggValueSlot, bool) (2 samples, 0.458%)</title><rect x="1161.5" y="1567" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1577.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass(void const*) (1 samples, 0.229%)</title><rect x="1195.4" y="1663" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1198.35" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="143" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="175.9" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="178.95" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="135.3" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="303" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="777.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (1 samples, 0.229%)</title><rect x="1229.2" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1423" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="1192.0" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="543" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="553.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName(clang::GlobalDecl) (1 samples, 0.229%)</title><rect x="1164.9" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1374.9" y="927" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="639" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1391.8" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="425.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="735" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1408.7" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1429.0" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1425.7" y="223" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="233.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="319" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="137.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1593.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnit(llvm::DwarfUnit*, bool) (1 samples, 0.229%)</title><rect x="1178.4" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1181.42" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1432.4" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (5 samples, 1.144%)</title><rect x="101.4" y="1215" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (2 samples, 0.458%)</title><rect x="1181.8" y="1391" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1415.5" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="665.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1663" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1673.5" ></text>
</g>
<g >
<title>llvm::Module::getFunction(llvm::StringRef) const (1 samples, 0.229%)</title><rect x="196.3" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="199.27" y="1641.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="495" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1405.3" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1647" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1455" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1381.6" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="495" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectContainingType(clang::CXXRecordDecl const*, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="138.7" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1257.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (1 samples, 0.229%)</title><rect x="142.1" y="1807" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="145.08" y="1817.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitDeclRefExpr(clang::DeclRefExpr*) (1 samples, 0.229%)</title><rect x="1418.9" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1583" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createBitFieldType(clang::FieldDecl const*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (2 samples, 0.458%)</title><rect x="1181.8" y="1423" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1433.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1967" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1188.6" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1191.58" y="1129.5" ></text>
</g>
<g >
<title>clang::ASTContext::getFunctionTypeInternal(clang::QualType, llvm::ArrayRef&lt;clang::QualType&gt;, clang::FunctionProtoType::ExtProtoInfo const&amp;, bool) const (1 samples, 0.229%)</title><rect x="121.8" y="351" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1273.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (1 samples, 0.229%)</title><rect x="1229.2" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="953.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr(clang::CallExpr*) (1 samples, 0.229%)</title><rect x="162.4" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1545.5" ></text>
</g>
<g >
<title>clang::Sema::MarkFunctionReferenced(clang::SourceLocation, clang::FunctionDecl*, bool) (1 samples, 0.229%)</title><rect x="1229.2" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (5 samples, 1.144%)</title><rect x="101.4" y="959" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1432.4" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1305.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers(clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="767" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1161.5" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="985.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="937.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="1418.9" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1705.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (307 samples, 70.252%)</title><rect x="128.5" y="1983" width="1039.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="131.54" y="1993.5" >CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*)</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="879" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="889.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="138.7" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1599" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (3 samples, 0.686%)</title><rect x="1297.0" y="1759" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1769.5" ></text>
</g>
<g >
<title>llvm::DIBuilder::createMethod(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DISubroutineType*, unsigned int, int, llvm::DIType*, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::MDTupleTypedArrayWrapper&lt;llvm::DITemplateParameter&gt;, llvm::MDTupleTypedArrayWrapper&lt;llvm::DIType&gt;) (1 samples, 0.229%)</title><rect x="1161.5" y="927" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1164.49" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1412.1" y="1823" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1374.9" y="159" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="169.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::IterNext() (2 samples, 0.458%)</title><rect x="84.5" y="1903" width="6.8" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="87.51" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1398.6" y="1535" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="1151" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (1 samples, 0.229%)</title><rect x="1432.4" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1951" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="921.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateVariableInitializer(clang::VarDecl*, clang::VarDecl*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="169.2" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1391.8" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="783" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1481.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) [clone .isra.0] (1 samples, 0.229%)</title><rect x="142.1" y="1839" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="145.08" y="1849.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (2 samples, 0.458%)</title><rect x="169.2" y="1583" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="135.3" y="975" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1429.0" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1422.3" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="921.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1183" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1135" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1145.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1456.1" y="383" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="393.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::processRelocationRef(unsigned int, llvm::object::content_iterator&lt;llvm::object::RelocationRef&gt;, llvm::object::ObjectFile const&amp;, std::map&lt;llvm::object::SectionRef, unsigned int, std::less&lt;llvm::object::SectionRef&gt;, std::allocator&lt;std::pair&lt;llvm::object::SectionRef const, unsigned int&gt; &gt; &gt;&amp;, std::map&lt;llvm::RelocationValueRef, unsigned long, std::less&lt;llvm::RelocationValueRef&gt;, std::allocator&lt;std::pair&lt;llvm::RelocationValueRef const, unsigned long&gt; &gt; &gt;&amp;) (1 samples, 0.229%)</title><rect x="94.7" y="1695" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (2 samples, 0.458%)</title><rect x="135.3" y="1391" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="345.5" ></text>
</g>
<g >
<title>clang::TemplateArgument::isPackExpansion() const (1 samples, 0.229%)</title><rect x="1236.0" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1513.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType(clang::TypeLocBuilder&amp;, clang::TypeLoc) (1 samples, 0.229%)</title><rect x="1435.8" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="841.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1337.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="767" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1407" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1198.7" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (1 samples, 0.229%)</title><rect x="1192.0" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1545.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="1119" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1129.5" ></text>
</g>
<g >
<title>llvm::MDString::get(llvm::LLVMContext&amp;, llvm::StringRef) (1 samples, 0.229%)</title><rect x="169.2" y="1103" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="172.18" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1545.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (3 samples, 0.686%)</title><rect x="152.2" y="1599" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1081.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::InitializeFrom(clang::Sema&amp;, clang::InitializedEntity const&amp;, clang::InitializationKind const&amp;, llvm::MutableArrayRef&lt;clang::Expr*&gt;, bool, bool) (1 samples, 0.229%)</title><rect x="1236.0" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1609.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) (3 samples, 0.686%)</title><rect x="1181.8" y="1743" width="10.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1184.81" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1401.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="121.8" y="1119" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1129.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr(clang::ValueDecl*, clang::QualType, clang::ExprValueKind, clang::DeclarationNameInfo const&amp;, clang::NestedNameSpecifierLoc, clang::NamedDecl*, clang::SourceLocation, clang::TemplateArgumentListInfo const*) (1 samples, 0.229%)</title><rect x="1435.8" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="713.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef&lt;clang::Attr const*&gt;) (1 samples, 0.229%)</title><rect x="1429.0" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="2009.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1487" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1432.4" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="361.5" ></text>
</g>
<g >
<title>clang::Type::isImageType() const (1 samples, 0.229%)</title><rect x="138.7" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1209.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="201.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1185.2" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="329.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject, std::default_delete&lt;llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject&gt; &gt; &gt; &gt;*) [clone .isra.0] (1 samples, 0.229%)</title><rect x="1307.1" y="1871" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1310.12" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (2 samples, 0.458%)</title><rect x="135.3" y="1615" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1625.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="1412.1" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1422.3" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1369.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal(llvm::StringRef) (3 samples, 0.686%)</title><rect x="1181.8" y="1759" width="10.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1184.81" y="1769.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::Run() (293 samples, 67.048%)</title><rect x="152.2" y="1855" width="992.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="155.24" y="1865.5" >ROOT::Detail::RDF::RLoopManager::Run()</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1065.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="969.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="162.4" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="905.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="527" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getTypeOrNull(clang::QualType) (1 samples, 0.229%)</title><rect x="1300.3" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1432.4" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1497.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1055" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1065.5" ></text>
</g>
<g >
<title>__vfork (3 samples, 0.686%)</title><rect x="10.0" y="2047" width="10.2" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="13.00" y="2057.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument(clang::TemplateArgumentLoc const&amp;, clang::TemplateArgumentLoc&amp;, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="169.2" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1465.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction(llvm::PointerIntPair&lt;cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits&lt;cling::Transaction*&gt;, llvm::PointerIntPairInfo&lt;cling::Transaction*, 2u, llvm::PointerLikeTypeTraits&lt;cling::Transaction*&gt; &gt; &gt;&amp;, bool) (1 samples, 0.229%)</title><rect x="148.9" y="1775" width="3.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="151.86" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1225.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1689.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallExpr(clang::Scope*, clang::Expr*, clang::SourceLocation, llvm::MutableArrayRef&lt;clang::Expr*&gt;, clang::SourceLocation, clang::Expr*, bool) (1 samples, 0.229%)</title><rect x="162.4" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1529.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="145.5" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="703" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="713.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction(clang::FunctionTemplateDecl*, llvm::SmallVectorImpl&lt;clang::DeducedTemplateArgument&gt;&amp;, unsigned int, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, llvm::SmallVectorImpl&lt;clang::Sema::OriginalCallArg&gt; const*, bool, llvm::function_ref&lt;bool ()&gt;) (1 samples, 0.229%)</title><rect x="1435.8" y="1791" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="793.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="125.1" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="601.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="383" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1311" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1371.5" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1151" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1161.5" ></text>
</g>
<g >
<title>llvm::DILocation::getImpl(llvm::LLVMContext&amp;, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool) (1 samples, 0.229%)</title><rect x="148.9" y="1503" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="151.86" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1167" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1422.3" y="1903" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1615" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr(clang::Expr const*, clang::CodeGen::AggValueSlot) (2 samples, 0.458%)</title><rect x="1181.8" y="1311" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="79" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="473.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1423" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1433.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1609.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1364.7" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="1097.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1209.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization(clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="135.3" y="1055" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1065.5" ></text>
</g>
<g >
<title>clang::Sema::CheckNonDependentConversions(clang::FunctionTemplateDecl*, llvm::ArrayRef&lt;clang::QualType&gt;, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, llvm::MutableArrayRef&lt;clang::ImplicitConversionSequence&gt;&amp;, bool, clang::CXXRecordDecl*, clang::QualType, clang::Expr::Classification) (1 samples, 0.229%)</title><rect x="162.4" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="287" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1817.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="138.7" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="249.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType(clang::TypeLocBuilder&amp;, clang::DependentNameTypeLoc, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1273.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (3 samples, 0.686%)</title><rect x="152.2" y="1663" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="155.24" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1185.2" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="649.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&amp;) (3 samples, 0.686%)</title><rect x="1297.0" y="1903" width="10.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1299.96" y="1913.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1198.7" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1129.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;)::{lambda(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;)#1}::operator()(clang::serialization::ModuleFile*, llvm::ArrayRef&lt;llvm::support::detail::packed_endian_specific_integral&lt;unsigned int, (llvm::support::endianness)2, 1ul&gt; &gt;) const (1 samples, 0.229%)</title><rect x="121.8" y="591" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="601.5" ></text>
</g>
<g >
<title>clang::Sema::CppLookupName(clang::LookupResult&amp;, clang::Scope*) (1 samples, 0.229%)</title><rect x="1337.6" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="841.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (1 samples, 0.229%)</title><rect x="1337.6" y="1951" width="3.4" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1340.60" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1887" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1897.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="121.8" y="911" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="921.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;)::{lambda(clang::QualType, unsigned int)#1}::operator()(clang::QualType, unsigned int) const (1 samples, 0.229%)</title><rect x="1236.0" y="1535" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1239.00" y="1545.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt;, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt; &gt; &gt;, llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt;, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt; &gt; &gt;::initEmpty() (1 samples, 0.229%)</title><rect x="189.5" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="192.50" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="623" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1374.9" y="719" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="729.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSymbolName(llvm::object::DataRefImpl) const (1 samples, 0.229%)</title><rect x="199.7" y="1567" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="202.66" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="135.3" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1371.5" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1865.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1295" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1305.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="145.5" y="1663" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateFunctionType(clang::Decl const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="175.9" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="178.95" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1429.0" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1551" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1561.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="303" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="479" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1415.5" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1753.5" ></text>
</g>
<g >
<title>cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl&lt;clang::Expr*&gt; const&amp;, clang::LookupResult&amp;, clang::DeclarationNameInfo&amp;, clang::TemplateArgumentListInfo const*, clang::ASTContext&amp;, clang::Parser&amp;, clang::Sema&amp;, cling::LookupHelper::DiagSetting) (3 samples, 0.686%)</title><rect x="1229.2" y="1823" width="10.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1232.22" y="1833.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExceptionSpec(clang::SourceLocation, clang::FunctionProtoType::ExceptionSpecInfo&amp;, llvm::SmallVectorImpl&lt;clang::QualType&gt;&amp;, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="1455" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1705.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="393.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateEnumType(clang::EnumType const*) (1 samples, 0.229%)</title><rect x="1385.0" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (2 samples, 0.458%)</title><rect x="1388.4" y="1151" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1311" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1405.3" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (8 samples, 1.831%)</title><rect x="101.4" y="1551" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1561.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1513.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="169.2" y="1503" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1513.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="50.6" y="1871" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1119" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1129.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1695" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1705.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) (1 samples, 0.229%)</title><rect x="1337.6" y="1391" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1340.60" y="1401.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::CompilationOptions const&amp;, cling::Transaction**) const (3 samples, 0.686%)</title><rect x="1297.0" y="1871" width="10.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1299.96" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="639" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="1839" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction(clang::GlobalDecl, clang::QualType, llvm::Function*, clang::CodeGen::CGFunctionInfo const&amp;, clang::CodeGen::FunctionArgList const&amp;, clang::SourceLocation, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="175.9" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="178.95" y="1561.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1279" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1381.6" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="1151" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1161.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="1432.4" y="1983" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1408.7" y="2015" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="2025.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="175" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="185.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1412.1" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="345.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateStaticMemberDIE(llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1263" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1273.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="623" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1369.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1999" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (2 samples, 0.458%)</title><rect x="121.8" y="1247" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1257.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke(std::_Any_data const&amp;, llvm::Function const&amp;) (1 samples, 0.229%)</title><rect x="179.3" y="1647" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="182.34" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment(clang::Expr const*, clang::CodeGen::LValueBaseInfo*, clang::CodeGen::TBAAAccessInfo*) (1 samples, 0.229%)</title><rect x="1432.4" y="1807" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::getCGRecordLayout(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1364.7" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateRecordStaticField(clang::VarDecl const*, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1385.0" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1415.5" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1593.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo(llvm::Function const&amp;) (1 samples, 0.229%)</title><rect x="233.5" y="1583" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="236.52" y="1593.5" ></text>
</g>
<g >
<title>TROOT::~TROOT() (5 samples, 1.144%)</title><rect x="1307.1" y="2031" width="17.0" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1310.12" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (4 samples, 0.915%)</title><rect x="1351.1" y="847" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="1429.0" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1615" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1625.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="1295" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1305.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="2047" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="50.6" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="233.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::InitExecutor_(CPyCppyy::Executor*&amp;, CPyCppyy::CallContext*) (1 samples, 0.229%)</title><rect x="1168.3" y="1967" width="3.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1171.26" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="863" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="873.5" ></text>
</g>
<g >
<title>_Fork (3 samples, 0.686%)</title><rect x="1476.5" y="2047" width="10.1" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="1479.45" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="591" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="601.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="137.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1408.7" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1673.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1119" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1129.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt(clang::Stmt*, clang::MultiLevelTemplateArgumentList const&amp;) (1 samples, 0.229%)</title><rect x="162.4" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1407" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1017.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="303" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="313.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1023" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1033.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (2 samples, 0.458%)</title><rect x="128.5" y="1807" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="131.54" y="1817.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1839" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="831" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="841.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="98.1" y="1231" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="135.3" y="703" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="713.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTypeTraitExpr(clang::TypeTraitExpr*) (1 samples, 0.229%)</title><rect x="162.4" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1247" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1257.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="351" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="361.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="975" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateFunctionType(clang::Decl const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="169.2" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1388.4" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="89.5" ></text>
</g>
<g >
<title>TCling::~TCling() (5 samples, 1.144%)</title><rect x="1307.1" y="1999" width="17.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1310.12" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="281.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1405.3" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1408.33" y="409.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&amp;) (14 samples, 3.204%)</title><rect x="152.2" y="1775" width="47.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="155.24" y="1785.5" >cling:..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1759" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1769.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doInitialization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="98.1" y="1759" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="265.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="271" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="281.5" ></text>
</g>
<g >
<title>clang::ASTContext::CreateTypeSourceInfo(clang::QualType, unsigned int) const (1 samples, 0.229%)</title><rect x="162.4" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="265.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (1 samples, 0.229%)</title><rect x="81.1" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="84.12" y="1865.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1151.3" y="1631" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr(clang::Expr const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1583" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1344.4" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1097.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, cling::Transaction**) (8 samples, 1.831%)</title><rect x="101.4" y="1839" width="27.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="104.44" y="1849.5" >cl..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1418.9" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1337.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType(clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="118.4" y="1087" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1097.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="505.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="329.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="335" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="345.5" ></text>
</g>
<g >
<title>llvm::DwarfDebug::endModule() (2 samples, 0.458%)</title><rect x="1290.2" y="1775" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1785.5" ></text>
</g>
<g >
<title>clang::ASTReader::loadDeclUpdateRecords(clang::ASTReader::PendingUpdateRecord&amp;) (4 samples, 0.915%)</title><rect x="104.8" y="655" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1374.9" y="367" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1935" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1945.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="425.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1135" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1198.7" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1225.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType(clang::TypeSourceInfo*, clang::MultiLevelTemplateArgumentList const&amp;, clang::SourceLocation, clang::DeclarationName, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1977.5" ></text>
</g>
<g >
<title>clang::Sema::BuildTypeTrait(clang::TypeTrait, clang::SourceLocation, llvm::ArrayRef&lt;clang::TypeSourceInfo*&gt;, clang::SourceLocation) (1 samples, 0.229%)</title><rect x="162.4" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitExplicitCastType(clang::QualType) (2 samples, 0.458%)</title><rect x="121.8" y="1375" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1385.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations(bool) (2 samples, 0.458%)</title><rect x="1229.2" y="1663" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1232.22" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarInit(clang::Expr const*, clang::ValueDecl const*, clang::CodeGen::LValue, bool) (1 samples, 0.229%)</title><rect x="1429.0" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (8 samples, 1.831%)</title><rect x="101.4" y="1615" width="27.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1625.5" >cl..</text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1967" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1327" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1337.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1279" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="969.5" ></text>
</g>
<g >
<title>BuildImplicitMemberInitializer(clang::Sema&amp;, clang::CXXConstructorDecl*, ImplicitInitializerKind, clang::FieldDecl*, clang::IndirectFieldDecl*, clang::CXXCtorInitializer*&amp;) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="1229.2" y="1439" width="3.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1232.22" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="655" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (5 samples, 1.144%)</title><rect x="101.4" y="975" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1487" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1497.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="1359" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1369.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1347.8" y="1935" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1945.5" ></text>
</g>
<g >
<title>clang::SourceManager::getPresumedLoc(clang::SourceLocation, bool) const (1 samples, 0.229%)</title><rect x="1192.0" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1164.9" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.87" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TemplateSpecializationType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1388.4" y="1631" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1395.2" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1344.4" y="687" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="697.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="569.5" ></text>
</g>
<g >
<title>CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (9 samples, 2.059%)</title><rect x="1175.0" y="2015" width="30.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1178.03" y="2025.5" >CPy..</text>
</g>
<g >
<title>clang::ASTReader::GetDecl(unsigned int) [clone .part.0] (1 samples, 0.229%)</title><rect x="121.8" y="479" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="121.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1398.6" y="607" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1374.9" y="1455" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="1465.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr(clang::CallExpr const*, clang::CodeGen::ReturnValueSlot) (1 samples, 0.229%)</title><rect x="165.8" y="1519" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="105.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifierLoc(clang::serialization::ModuleFile&amp;, llvm::SmallVector&lt;unsigned long, 64u&gt; const&amp;, unsigned int&amp;) (1 samples, 0.229%)</title><rect x="1418.9" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="153.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1388.4" y="223" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="233.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1344.4" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="505.5" ></text>
</g>
<g >
<title>ROOT::RDF::RResultPtr&lt;double&gt;::GetValue() (293 samples, 67.048%)</title><rect x="152.2" y="1887" width="992.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="155.24" y="1897.5" >ROOT::RDF::RResultPtr&lt;double&gt;::GetValue()</text>
</g>
<g >
<title>llvm::JITSymbol::getAddress() (2 samples, 0.458%)</title><rect x="94.7" y="1839" width="6.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="97.67" y="1849.5" ></text>
</g>
<g >
<title>cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (2 samples, 0.458%)</title><rect x="1161.5" y="1871" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1164.49" y="1881.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr(clang::CallExpr const*, clang::CXXMethodDecl const*, clang::CodeGen::ReturnValueSlot, bool, clang::NestedNameSpecifier*, bool, clang::Expr const*) (2 samples, 0.458%)</title><rect x="1161.5" y="1519" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="1529.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1721.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref&lt;bool (clang::Decl::Kind)&gt;, llvm::SmallVectorImpl&lt;clang::Decl*&gt;&amp;) (4 samples, 0.915%)</title><rect x="54.0" y="1823" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="57.03" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1347.8" y="1567" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1398.6" y="255" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (2 samples, 0.458%)</title><rect x="1401.9" y="655" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="665.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::handleFixup(llvm::MCAsmLayout const&amp;, llvm::MCFragment&amp;, llvm::MCFixup const&amp;) (1 samples, 0.229%)</title><rect x="131.9" y="1679" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="134.92" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="399" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="409.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1232.6" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="825.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="623" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="633.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1663" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1673.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (4 samples, 0.915%)</title><rect x="1351.1" y="1567" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="1577.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="1429.0" y="1967" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1977.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructSubprogramArguments(llvm::DIE&amp;, llvm::DITypeRefArray) (1 samples, 0.229%)</title><rect x="1452.7" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (3 samples, 0.686%)</title><rect x="1297.0" y="1439" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1449.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1177.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1471" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1425.7" y="1231" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1241.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="991" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="863" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1408.7" y="335" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="121.8" y="991" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1001.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (3 samples, 0.686%)</title><rect x="1181.8" y="1727" width="10.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1198.7" y="959" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="969.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="943" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1381.6" y="639" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="1999" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="2009.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="783" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="793.5" ></text>
</g>
<g >
<title>clang::TemplateTypeParmTypeLoc clang::TypeLoc::castAs&lt;clang::TemplateTypeParmTypeLoc&gt;() const (1 samples, 0.229%)</title><rect x="162.4" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="217.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="121.8" y="799" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="165.8" y="1263" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1273.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType(clang::QualType) (1 samples, 0.229%)</title><rect x="1341.0" y="127" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="137.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="98.1" y="1407" width="3.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="101.05" y="1417.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl(clang::DeclarationName, clang::QualType, clang::TypeSourceInfo*, clang::RecordDecl*, clang::SourceLocation, bool, clang::Expr*, clang::InClassInitStyle, clang::SourceLocation, clang::AccessSpecifier, clang::NamedDecl*, clang::Declarator*) (1 samples, 0.229%)</title><rect x="1435.8" y="1247" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1257.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="143" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="153.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) (1 samples, 0.229%)</title><rect x="1198.7" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&amp;, bool, clang::CodeGen::AggValueSlot) (1 samples, 0.229%)</title><rect x="1198.7" y="1583" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1201.74" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1347.8" y="607" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="125.1" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="809.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1364.7" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="1279" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="1289.5" ></text>
</g>
<g >
<title>TClingMethodInfo::Next() (3 samples, 0.686%)</title><rect x="1229.2" y="1919" width="10.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1232.22" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1388.4" y="95" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="105.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1374.9" y="335" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="345.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (3 samples, 0.686%)</title><rect x="1418.9" y="1967" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="1977.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="1647" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1418.9" y="927" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="937.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::TypedefType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="111" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="121.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1737.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1199" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1209.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser&amp;) (1 samples, 0.229%)</title><rect x="1435.8" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1395.2" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="135.3" y="1231" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1241.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="287" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="297.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="367" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="377.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="135.3" y="1279" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1289.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1368.1" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="1839" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="1849.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="121.8" y="1103" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="124.76" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="847" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="857.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBases(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1412.1" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="911" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="921.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="50.6" y="559" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="569.5" ></text>
</g>
<g >
<title>Cppyy::GetNumMethods(unsigned long) (3 samples, 0.686%)</title><rect x="1229.2" y="1967" width="10.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1232.22" y="1977.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass(clang::SourceLocation, clang::CXXRecordDecl*, clang::CXXRecordDecl*, clang::MultiLevelTemplateArgumentList const&amp;, clang::TemplateSpecializationKind, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="447" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="457.5" ></text>
</g>
<g >
<title>clang::declvisitor::Base&lt;std::add_pointer, clang::ASTDeclReader, void&gt;::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="162.4" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="165.40" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1388.4" y="239" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="249.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="953.5" ></text>
</g>
<g >
<title>llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}::operator()() const (2 samples, 0.458%)</title><rect x="1144.6" y="1791" width="6.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1147.55" y="1801.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1429.0" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="281.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1247" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1257.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl(clang::FieldDecl*) (1 samples, 0.229%)</title><rect x="1435.8" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTranslationUnit(clang::ASTContext&amp;) (1 samples, 0.229%)</title><rect x="1192.0" y="1727" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1194.97" y="1737.5" ></text>
</g>
<g >
<title>getPatternForClassTemplateSpecialization(clang::Sema&amp;, clang::SourceLocation, clang::ClassTemplateSpecializationDecl*, clang::TemplateSpecializationKind, bool) [clone .constprop.0] (1 samples, 0.229%)</title><rect x="1232.6" y="383" width="3.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1235.61" y="393.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&amp;) (2 samples, 0.458%)</title><rect x="1161.5" y="1855" width="6.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1164.49" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1368.1" y="2031" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="2041.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (1 samples, 0.229%)</title><rect x="1412.1" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="265.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1303.7" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1306.73" y="1145.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (2 samples, 0.458%)</title><rect x="1401.9" y="1823" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="425.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1452.7" y="159" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="169.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType(clang::TypeLocBuilder&amp;, clang::DependentNameTypeLoc, bool) (1 samples, 0.229%)</title><rect x="1232.6" y="495" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="505.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization(llvm::Module&amp;) (2 samples, 0.458%)</title><rect x="1290.2" y="1807" width="6.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1293.18" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="431" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="441.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred() (1 samples, 0.229%)</title><rect x="148.9" y="1711" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="151.86" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="165.8" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="168.79" y="1113.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1407" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1417.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1364.7" y="319" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="329.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="2047" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="1775" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="1785.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1418.9" y="735" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1421.88" y="745.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1432.4" y="607" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="617.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1347.8" y="895" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem(clang::QualType) (1 samples, 0.229%)</title><rect x="118.4" y="1279" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1289.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="145.5" y="1727" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1737.5" ></text>
</g>
<g >
<title>read (3 samples, 0.686%)</title><rect x="40.5" y="2047" width="10.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="43.48" y="2057.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1408.7" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="217.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (2 samples, 0.458%)</title><rect x="1144.6" y="1807" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1147.55" y="1817.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="138.7" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="585.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType(unsigned int) (1 samples, 0.229%)</title><rect x="84.5" y="1551" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="87.51" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1711" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateInstanceMethodType(clang::QualType, clang::FunctionProtoType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1401.9" y="383" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="393.5" ></text>
</g>
<g >
<title>llvm::DwarfFile::emitUnits(bool) (1 samples, 0.229%)</title><rect x="209.8" y="1599" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1609.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1983" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1993.5" ></text>
</g>
<g >
<title>llvm::MDTuple* llvm::getUniqued&lt;llvm::MDTuple, llvm::MDNodeInfo&lt;llvm::MDTuple&gt; &gt;(llvm::DenseSet&lt;llvm::MDTuple*, llvm::MDNodeInfo&lt;llvm::MDTuple&gt; &gt;&amp;, llvm::MDNodeInfo&lt;llvm::MDTuple&gt;::KeyTy const&amp;) (1 samples, 0.229%)</title><rect x="175.9" y="1471" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="178.95" y="1481.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release() (3 samples, 0.686%)</title><rect x="169.2" y="1711" width="10.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1721.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectTemplateParams(clang::TemplateParameterList const*, llvm::ArrayRef&lt;clang::TemplateArgument&gt;, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1300.3" y="1039" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="1049.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1161.5" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.49" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1368.1" y="351" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1371.08" y="361.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1311" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1321.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1344.4" y="207" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="217.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="1375" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="1385.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1408.7" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1417.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::BuildSchedGraph(llvm::AAResults*) (1 samples, 0.229%)</title><rect x="220.0" y="1551" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="222.98" y="1561.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="1183" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="1193.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateLimitedType(clang::RecordType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="138.7" y="1103" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="141.70" y="1113.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1398.6" y="975" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="985.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="399" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="409.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadedCallCandidates(clang::UnresolvedLookupExpr*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool) (1 samples, 0.229%)</title><rect x="1435.8" y="1631" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1641.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateMethodType(clang::CXXMethodDecl const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1371.5" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1929.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1422.3" y="655" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="665.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1341.0" y="895" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="905.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1375" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1385.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1147.9" y="1343" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1150.94" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1181.8" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1184.81" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1422.3" y="671" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1425.27" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1297.0" y="1023" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1299.96" y="1033.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1951" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1408.7" y="1983" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1993.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructMemberDIE(llvm::DIE&amp;, llvm::DIDerivedType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1071" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1381.6" y="527" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="537.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (2 samples, 0.458%)</title><rect x="1401.9" y="1439" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1381.6" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1432.4" y="511" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1435.43" y="521.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="1743" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="1753.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateLimitedType(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="1679" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="1689.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1381.6" y="79" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="89.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="169.2" y="1167" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1177.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="399" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="409.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1395.2" y="479" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1398.17" y="489.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout(clang::RecordDecl const*, llvm::StructType*) (1 samples, 0.229%)</title><rect x="118.4" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="121.38" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (2 samples, 0.458%)</title><rect x="135.3" y="1695" width="6.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="138.31" y="1705.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (1 samples, 0.229%)</title><rect x="145.5" y="1759" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="148.47" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1385.0" y="1567" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1577.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run(llvm::Module&amp;) (8 samples, 1.831%)</title><rect x="209.8" y="1663" width="27.1" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="212.82" y="1673.5" >ll..</text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1429.0" y="719" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1432.04" y="729.5" ></text>
</g>
<g >
<title>TryUserDefinedConversion(clang::Sema&amp;, clang::QualType, clang::InitializationKind const&amp;, clang::Expr*, clang::InitializationSequence&amp;, bool) (1 samples, 0.229%)</title><rect x="1236.0" y="1583" width="3.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1239.00" y="1593.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordNormalField(clang::FieldDecl const*, unsigned long, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1347.8" y="719" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1350.76" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateType(clang::FunctionType const*, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="271" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="281.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl(clang::SourceLocation, clang::QualType, clang::Sema::TypeDiagnoser*) (1 samples, 0.229%)</title><rect x="1435.8" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1438.81" y="1001.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1378.2" y="1071" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1081.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1398.6" y="671" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1401.56" y="681.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1401.9" y="255" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1404.95" y="265.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::getOrCreateSubprogramDIE(llvm::DISubprogram const*, bool) (1 samples, 0.229%)</title><rect x="1456.1" y="1855" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1865.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1412.1" y="1855" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1865.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::UpdateDecl(clang::Decl*, llvm::SmallVectorImpl&lt;clang::RedeclarableTemplateDecl::LazySpecializationInfo&gt;&amp;) (4 samples, 0.915%)</title><rect x="104.8" y="639" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="107.83" y="649.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="415" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="425.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1388.4" y="463" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1391.40" y="473.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1374.9" y="863" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1377.85" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1378.2" y="1919" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1929.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) (1 samples, 0.229%)</title><rect x="1171.6" y="1823" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1174.65" y="1833.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="50.6" y="191" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.64" y="201.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1185.2" y="943" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1188.19" y="953.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (5 samples, 1.144%)</title><rect x="101.4" y="1087" width="17.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="104.44" y="1097.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::emitDwarfDIE(llvm::DIE const&amp;) const (1 samples, 0.229%)</title><rect x="1151.3" y="1647" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1154.33" y="1657.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1408.7" y="799" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1411.72" y="809.5" ></text>
</g>
<g >
<title>CPyCppyy::CPPMethod::Initialize(CPyCppyy::CallContext*) (1 samples, 0.229%)</title><rect x="1168.3" y="1983" width="3.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1171.26" y="1993.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1341.0" y="1599" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1343.98" y="1609.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit(clang::Decl*) (1 samples, 0.229%)</title><rect x="125.1" y="575" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="128.15" y="585.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::createFieldType(llvm::StringRef, clang::QualType, clang::SourceLocation, clang::AccessSpecifier, unsigned long, unsigned int, llvm::DIFile*, llvm::DIScope*, clang::RecordDecl const*) (1 samples, 0.229%)</title><rect x="1425.7" y="1759" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="1769.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1371.5" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1374.46" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1344.4" y="991" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1347.37" y="1001.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr(clang::DependentScopeDeclRefExpr*, bool, clang::TypeSourceInfo**) (1 samples, 0.229%)</title><rect x="1232.6" y="1135" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1235.61" y="1145.5" ></text>
</g>
<g >
<title>subtype_dealloc (5 samples, 1.144%)</title><rect x="1290.2" y="2031" width="16.9" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1293.18" y="2041.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1415.5" y="767" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1418.49" y="777.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1364.7" y="751" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1367.69" y="761.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateCXXMemberFunction(clang::CXXMethodDecl const*, llvm::DIFile*, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1378.2" y="1439" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1381.24" y="1449.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (1 samples, 0.229%)</title><rect x="1391.8" y="159" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1394.78" y="169.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreateTypeDefinition(clang::RecordType const*) (1 samples, 0.229%)</title><rect x="1425.7" y="303" width="3.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1428.65" y="313.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::constructTypeDIE(llvm::DIE&amp;, llvm::DICompositeType const*) (1 samples, 0.229%)</title><rect x="1456.1" y="1951" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1459.13" y="1961.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXMemberFunctions(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*) (4 samples, 0.915%)</title><rect x="1351.1" y="719" width="13.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1354.14" y="729.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1412.1" y="1407" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1415.11" y="1417.5" ></text>
</g>
<g >
<title>llvm::DwarfUnit::createTypeDIE(llvm::DIScope const*, llvm::DIE&amp;, llvm::DIType const*) (1 samples, 0.229%)</title><rect x="1452.7" y="559" width="3.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1455.75" y="569.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectCXXBasesAux(clang::CXXRecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DIType*, llvm::iterator_range&lt;clang::CXXBaseSpecifier const*&gt; const&amp;, llvm::DenseSet&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt;, llvm::DenseMapInfo&lt;clang::CanonicalDeclPtr&lt;clang::CXXRecordDecl const&gt; &gt; &gt;&amp;, llvm::DINode::DIFlags) (1 samples, 0.229%)</title><rect x="1381.6" y="1007" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1384.62" y="1017.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CreatePointerLikeType(llvm::dwarf::Tag, clang::Type const*, clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="1215" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="1225.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::EmitFunctionStart(clang::GlobalDecl, clang::SourceLocation, clang::SourceLocation, clang::QualType, llvm::Function*, bool, clang::CodeGen::CGBuilderTy&amp;) (1 samples, 0.229%)</title><rect x="169.2" y="1343" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="172.18" y="1353.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::getOrCreateType(clang::QualType, llvm::DIFile*) (1 samples, 0.229%)</title><rect x="1385.0" y="863" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1388.01" y="873.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGDebugInfo::CollectRecordFields(clang::RecordDecl const*, llvm::DIFile*, llvm::SmallVectorImpl&lt;llvm::Metadata*&gt;&amp;, llvm::DICompositeType*) (1 samples, 0.229%)</title><rect x="1300.3" y="815" width="3.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1303.34" y="825.5" ></text>
</g>
</g>
</svg>
